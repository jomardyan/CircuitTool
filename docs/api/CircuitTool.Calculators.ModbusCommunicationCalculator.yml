### YamlMime:ManagedReference
items:
- uid: CircuitTool.Calculators.ModbusCommunicationCalculator
  commentId: T:CircuitTool.Calculators.ModbusCommunicationCalculator
  id: ModbusCommunicationCalculator
  parent: CircuitTool.Calculators
  children:
  - CircuitTool.Calculators.ModbusCommunicationCalculator.AnalyzeNetwork(System.Collections.Generic.List{CircuitTool.Calculators.ModbusDevice},System.Int32)
  - CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateCRC16(System.Byte[])
  - CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateCharacterTime(System.Int32,System.Int32,System.Int32,System.Boolean)
  - CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateCharacterTimeout(System.Int32)
  - CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateFrameTimeout(System.Int32)
  - CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateLRC(System.Byte[])
  - CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateMaxThroughput(System.Int32,System.Int32,System.Double)
  - CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateRS485Power(System.Int32,System.Double,System.Double,System.Double,System.Double)
  - CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateTransmissionTime(System.Int32,System.Int32)
  - CircuitTool.Calculators.ModbusCommunicationCalculator.ConvertAddress(System.Int32,CircuitTool.Calculators.ModbusAddressFormat,CircuitTool.Calculators.ModbusAddressFormat)
  - CircuitTool.Calculators.ModbusCommunicationCalculator.GetRegisterCount(CircuitTool.Calculators.ModbusDataType)
  langs:
  - csharp
  - vb
  name: ModbusCommunicationCalculator
  nameWithType: ModbusCommunicationCalculator
  fullName: CircuitTool.Calculators.ModbusCommunicationCalculator
  type: Class
  source:
    remote:
      path: src/Calculators/ModbusCommunicationCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ModbusCommunicationCalculator
    path: src/Calculators/ModbusCommunicationCalculator.cs
    startLine: 10
  namespace: CircuitTool.Calculators
  summary: Calculator for Modbus communication parameters and frame analysis
  example: []
  syntax:
    content: public static class ModbusCommunicationCalculator
    content.vb: Public Module ModbusCommunicationCalculator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateCharacterTime(System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateCharacterTime(System.Int32,System.Int32,System.Int32,System.Boolean)
  id: CalculateCharacterTime(System.Int32,System.Int32,System.Int32,System.Boolean)
  parent: CircuitTool.Calculators.ModbusCommunicationCalculator
  langs:
  - csharp
  - vb
  name: CalculateCharacterTime(int, int, int, bool)
  nameWithType: ModbusCommunicationCalculator.CalculateCharacterTime(int, int, int, bool)
  fullName: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateCharacterTime(int, int, int, bool)
  type: Method
  source:
    remote:
      path: src/Calculators/ModbusCommunicationCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: CalculateCharacterTime
    path: src/Calculators/ModbusCommunicationCalculator.cs
    startLine: 22
  namespace: CircuitTool.Calculators
  summary: Calculate character time for given baud rate
  example: []
  syntax:
    content: public static double CalculateCharacterTime(int baudRate, int dataBits = 8, int stopBits = 1, bool parity = false)
    parameters:
    - id: baudRate
      type: System.Int32
      description: Baud rate in bps
    - id: dataBits
      type: System.Int32
      description: Number of data bits (typically 8)
    - id: stopBits
      type: System.Int32
      description: Number of stop bits (1 or 2)
    - id: parity
      type: System.Boolean
      description: Whether parity bit is used
    return:
      type: System.Double
      description: Character time in microseconds
    content.vb: Public Shared Function CalculateCharacterTime(baudRate As Integer, dataBits As Integer = 8, stopBits As Integer = 1, parity As Boolean = False) As Double
  overload: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateCharacterTime*
  nameWithType.vb: ModbusCommunicationCalculator.CalculateCharacterTime(Integer, Integer, Integer, Boolean)
  fullName.vb: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateCharacterTime(Integer, Integer, Integer, Boolean)
  name.vb: CalculateCharacterTime(Integer, Integer, Integer, Boolean)
- uid: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateFrameTimeout(System.Int32)
  commentId: M:CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateFrameTimeout(System.Int32)
  id: CalculateFrameTimeout(System.Int32)
  parent: CircuitTool.Calculators.ModbusCommunicationCalculator
  langs:
  - csharp
  - vb
  name: CalculateFrameTimeout(int)
  nameWithType: ModbusCommunicationCalculator.CalculateFrameTimeout(int)
  fullName: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateFrameTimeout(int)
  type: Method
  source:
    remote:
      path: src/Calculators/ModbusCommunicationCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: CalculateFrameTimeout
    path: src/Calculators/ModbusCommunicationCalculator.cs
    startLine: 37
  namespace: CircuitTool.Calculators
  summary: Calculate frame timeout (3.5 character times)
  example: []
  syntax:
    content: public static double CalculateFrameTimeout(int baudRate)
    parameters:
    - id: baudRate
      type: System.Int32
      description: Baud rate in bps
    return:
      type: System.Double
      description: Frame timeout in microseconds
    content.vb: Public Shared Function CalculateFrameTimeout(baudRate As Integer) As Double
  overload: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateFrameTimeout*
  nameWithType.vb: ModbusCommunicationCalculator.CalculateFrameTimeout(Integer)
  fullName.vb: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateFrameTimeout(Integer)
  name.vb: CalculateFrameTimeout(Integer)
- uid: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateCharacterTimeout(System.Int32)
  commentId: M:CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateCharacterTimeout(System.Int32)
  id: CalculateCharacterTimeout(System.Int32)
  parent: CircuitTool.Calculators.ModbusCommunicationCalculator
  langs:
  - csharp
  - vb
  name: CalculateCharacterTimeout(int)
  nameWithType: ModbusCommunicationCalculator.CalculateCharacterTimeout(int)
  fullName: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateCharacterTimeout(int)
  type: Method
  source:
    remote:
      path: src/Calculators/ModbusCommunicationCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: CalculateCharacterTimeout
    path: src/Calculators/ModbusCommunicationCalculator.cs
    startLine: 48
  namespace: CircuitTool.Calculators
  summary: Calculate character timeout (1.5 character times)
  example: []
  syntax:
    content: public static double CalculateCharacterTimeout(int baudRate)
    parameters:
    - id: baudRate
      type: System.Int32
      description: Baud rate in bps
    return:
      type: System.Double
      description: Character timeout in microseconds
    content.vb: Public Shared Function CalculateCharacterTimeout(baudRate As Integer) As Double
  overload: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateCharacterTimeout*
  nameWithType.vb: ModbusCommunicationCalculator.CalculateCharacterTimeout(Integer)
  fullName.vb: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateCharacterTimeout(Integer)
  name.vb: CalculateCharacterTimeout(Integer)
- uid: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateCRC16(System.Byte[])
  commentId: M:CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateCRC16(System.Byte[])
  id: CalculateCRC16(System.Byte[])
  parent: CircuitTool.Calculators.ModbusCommunicationCalculator
  langs:
  - csharp
  - vb
  name: CalculateCRC16(byte[])
  nameWithType: ModbusCommunicationCalculator.CalculateCRC16(byte[])
  fullName: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateCRC16(byte[])
  type: Method
  source:
    remote:
      path: src/Calculators/ModbusCommunicationCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: CalculateCRC16
    path: src/Calculators/ModbusCommunicationCalculator.cs
    startLine: 63
  namespace: CircuitTool.Calculators
  summary: Calculate CRC16 for Modbus RTU
  example: []
  syntax:
    content: public static ushort CalculateCRC16(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
      description: Data bytes
    return:
      type: System.UInt16
      description: CRC16 value
    content.vb: Public Shared Function CalculateCRC16(data As Byte()) As UShort
  overload: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateCRC16*
  nameWithType.vb: ModbusCommunicationCalculator.CalculateCRC16(Byte())
  fullName.vb: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateCRC16(Byte())
  name.vb: CalculateCRC16(Byte())
- uid: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateLRC(System.Byte[])
  commentId: M:CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateLRC(System.Byte[])
  id: CalculateLRC(System.Byte[])
  parent: CircuitTool.Calculators.ModbusCommunicationCalculator
  langs:
  - csharp
  - vb
  name: CalculateLRC(byte[])
  nameWithType: ModbusCommunicationCalculator.CalculateLRC(byte[])
  fullName: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateLRC(byte[])
  type: Method
  source:
    remote:
      path: src/Calculators/ModbusCommunicationCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: CalculateLRC
    path: src/Calculators/ModbusCommunicationCalculator.cs
    startLine: 89
  namespace: CircuitTool.Calculators
  summary: Calculate LRC (Longitudinal Redundancy Check) for Modbus ASCII
  example: []
  syntax:
    content: public static byte CalculateLRC(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
      description: Data bytes
    return:
      type: System.Byte
      description: LRC value
    content.vb: Public Shared Function CalculateLRC(data As Byte()) As Byte
  overload: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateLRC*
  nameWithType.vb: ModbusCommunicationCalculator.CalculateLRC(Byte())
  fullName.vb: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateLRC(Byte())
  name.vb: CalculateLRC(Byte())
- uid: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateTransmissionTime(System.Int32,System.Int32)
  commentId: M:CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateTransmissionTime(System.Int32,System.Int32)
  id: CalculateTransmissionTime(System.Int32,System.Int32)
  parent: CircuitTool.Calculators.ModbusCommunicationCalculator
  langs:
  - csharp
  - vb
  name: CalculateTransmissionTime(int, int)
  nameWithType: ModbusCommunicationCalculator.CalculateTransmissionTime(int, int)
  fullName: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateTransmissionTime(int, int)
  type: Method
  source:
    remote:
      path: src/Calculators/ModbusCommunicationCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: CalculateTransmissionTime
    path: src/Calculators/ModbusCommunicationCalculator.cs
    startLine: 111
  namespace: CircuitTool.Calculators
  summary: Calculate total frame transmission time
  example: []
  syntax:
    content: public static double CalculateTransmissionTime(int frameLength, int baudRate)
    parameters:
    - id: frameLength
      type: System.Int32
      description: Frame length in bytes
    - id: baudRate
      type: System.Int32
      description: Baud rate in bps
    return:
      type: System.Double
      description: Transmission time in milliseconds
    content.vb: Public Shared Function CalculateTransmissionTime(frameLength As Integer, baudRate As Integer) As Double
  overload: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateTransmissionTime*
  nameWithType.vb: ModbusCommunicationCalculator.CalculateTransmissionTime(Integer, Integer)
  fullName.vb: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateTransmissionTime(Integer, Integer)
  name.vb: CalculateTransmissionTime(Integer, Integer)
- uid: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateMaxThroughput(System.Int32,System.Int32,System.Double)
  commentId: M:CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateMaxThroughput(System.Int32,System.Int32,System.Double)
  id: CalculateMaxThroughput(System.Int32,System.Int32,System.Double)
  parent: CircuitTool.Calculators.ModbusCommunicationCalculator
  langs:
  - csharp
  - vb
  name: CalculateMaxThroughput(int, int, double)
  nameWithType: ModbusCommunicationCalculator.CalculateMaxThroughput(int, int, double)
  fullName: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateMaxThroughput(int, int, double)
  type: Method
  source:
    remote:
      path: src/Calculators/ModbusCommunicationCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: CalculateMaxThroughput
    path: src/Calculators/ModbusCommunicationCalculator.cs
    startLine: 130
  namespace: CircuitTool.Calculators
  summary: Calculate maximum theoretical throughput
  example: []
  syntax:
    content: public static double CalculateMaxThroughput(int frameLength, int baudRate, double responseTime = 0)
    parameters:
    - id: frameLength
      type: System.Int32
      description: Average frame length in bytes
    - id: baudRate
      type: System.Int32
      description: Baud rate in bps
    - id: responseTime
      type: System.Double
      description: Device response time in milliseconds
    return:
      type: System.Double
      description: Maximum frames per second
    content.vb: Public Shared Function CalculateMaxThroughput(frameLength As Integer, baudRate As Integer, responseTime As Double = 0) As Double
  overload: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateMaxThroughput*
  nameWithType.vb: ModbusCommunicationCalculator.CalculateMaxThroughput(Integer, Integer, Double)
  fullName.vb: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateMaxThroughput(Integer, Integer, Double)
  name.vb: CalculateMaxThroughput(Integer, Integer, Double)
- uid: CircuitTool.Calculators.ModbusCommunicationCalculator.ConvertAddress(System.Int32,CircuitTool.Calculators.ModbusAddressFormat,CircuitTool.Calculators.ModbusAddressFormat)
  commentId: M:CircuitTool.Calculators.ModbusCommunicationCalculator.ConvertAddress(System.Int32,CircuitTool.Calculators.ModbusAddressFormat,CircuitTool.Calculators.ModbusAddressFormat)
  id: ConvertAddress(System.Int32,CircuitTool.Calculators.ModbusAddressFormat,CircuitTool.Calculators.ModbusAddressFormat)
  parent: CircuitTool.Calculators.ModbusCommunicationCalculator
  langs:
  - csharp
  - vb
  name: ConvertAddress(int, ModbusAddressFormat, ModbusAddressFormat)
  nameWithType: ModbusCommunicationCalculator.ConvertAddress(int, ModbusAddressFormat, ModbusAddressFormat)
  fullName: CircuitTool.Calculators.ModbusCommunicationCalculator.ConvertAddress(int, CircuitTool.Calculators.ModbusAddressFormat, CircuitTool.Calculators.ModbusAddressFormat)
  type: Method
  source:
    remote:
      path: src/Calculators/ModbusCommunicationCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ConvertAddress
    path: src/Calculators/ModbusCommunicationCalculator.cs
    startLine: 149
  namespace: CircuitTool.Calculators
  summary: Convert between different Modbus address formats
  example: []
  syntax:
    content: public static int ConvertAddress(int address, ModbusAddressFormat fromFormat, ModbusAddressFormat toFormat)
    parameters:
    - id: address
      type: System.Int32
      description: Input address
    - id: fromFormat
      type: CircuitTool.Calculators.ModbusAddressFormat
      description: Source format
    - id: toFormat
      type: CircuitTool.Calculators.ModbusAddressFormat
      description: Target format
    return:
      type: System.Int32
      description: Converted address
    content.vb: Public Shared Function ConvertAddress(address As Integer, fromFormat As ModbusAddressFormat, toFormat As ModbusAddressFormat) As Integer
  overload: CircuitTool.Calculators.ModbusCommunicationCalculator.ConvertAddress*
  nameWithType.vb: ModbusCommunicationCalculator.ConvertAddress(Integer, ModbusAddressFormat, ModbusAddressFormat)
  fullName.vb: CircuitTool.Calculators.ModbusCommunicationCalculator.ConvertAddress(Integer, CircuitTool.Calculators.ModbusAddressFormat, CircuitTool.Calculators.ModbusAddressFormat)
  name.vb: ConvertAddress(Integer, ModbusAddressFormat, ModbusAddressFormat)
- uid: CircuitTool.Calculators.ModbusCommunicationCalculator.GetRegisterCount(CircuitTool.Calculators.ModbusDataType)
  commentId: M:CircuitTool.Calculators.ModbusCommunicationCalculator.GetRegisterCount(CircuitTool.Calculators.ModbusDataType)
  id: GetRegisterCount(CircuitTool.Calculators.ModbusDataType)
  parent: CircuitTool.Calculators.ModbusCommunicationCalculator
  langs:
  - csharp
  - vb
  name: GetRegisterCount(ModbusDataType)
  nameWithType: ModbusCommunicationCalculator.GetRegisterCount(ModbusDataType)
  fullName: CircuitTool.Calculators.ModbusCommunicationCalculator.GetRegisterCount(CircuitTool.Calculators.ModbusDataType)
  type: Method
  source:
    remote:
      path: src/Calculators/ModbusCommunicationCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: GetRegisterCount
    path: src/Calculators/ModbusCommunicationCalculator.cs
    startLine: 175
  namespace: CircuitTool.Calculators
  summary: Calculate register count needed for data type
  example: []
  syntax:
    content: public static int GetRegisterCount(ModbusDataType dataType)
    parameters:
    - id: dataType
      type: CircuitTool.Calculators.ModbusDataType
      description: Data type
    return:
      type: System.Int32
      description: Number of 16-bit registers required
    content.vb: Public Shared Function GetRegisterCount(dataType As ModbusDataType) As Integer
  overload: CircuitTool.Calculators.ModbusCommunicationCalculator.GetRegisterCount*
- uid: CircuitTool.Calculators.ModbusCommunicationCalculator.AnalyzeNetwork(System.Collections.Generic.List{CircuitTool.Calculators.ModbusDevice},System.Int32)
  commentId: M:CircuitTool.Calculators.ModbusCommunicationCalculator.AnalyzeNetwork(System.Collections.Generic.List{CircuitTool.Calculators.ModbusDevice},System.Int32)
  id: AnalyzeNetwork(System.Collections.Generic.List{CircuitTool.Calculators.ModbusDevice},System.Int32)
  parent: CircuitTool.Calculators.ModbusCommunicationCalculator
  langs:
  - csharp
  - vb
  name: AnalyzeNetwork(List<ModbusDevice>, int)
  nameWithType: ModbusCommunicationCalculator.AnalyzeNetwork(List<ModbusDevice>, int)
  fullName: CircuitTool.Calculators.ModbusCommunicationCalculator.AnalyzeNetwork(System.Collections.Generic.List<CircuitTool.Calculators.ModbusDevice>, int)
  type: Method
  source:
    remote:
      path: src/Calculators/ModbusCommunicationCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: AnalyzeNetwork
    path: src/Calculators/ModbusCommunicationCalculator.cs
    startLine: 200
  namespace: CircuitTool.Calculators
  summary: Calculate network loading analysis
  example: []
  syntax:
    content: public static ModbusNetworkAnalysis AnalyzeNetwork(List<ModbusDevice> devices, int baudRate)
    parameters:
    - id: devices
      type: System.Collections.Generic.List{CircuitTool.Calculators.ModbusDevice}
      description: List of Modbus devices
    - id: baudRate
      type: System.Int32
      description: Network baud rate
    return:
      type: CircuitTool.Calculators.ModbusNetworkAnalysis
      description: Network analysis results
    content.vb: Public Shared Function AnalyzeNetwork(devices As List(Of ModbusDevice), baudRate As Integer) As ModbusNetworkAnalysis
  overload: CircuitTool.Calculators.ModbusCommunicationCalculator.AnalyzeNetwork*
  nameWithType.vb: ModbusCommunicationCalculator.AnalyzeNetwork(List(Of ModbusDevice), Integer)
  fullName.vb: CircuitTool.Calculators.ModbusCommunicationCalculator.AnalyzeNetwork(System.Collections.Generic.List(Of CircuitTool.Calculators.ModbusDevice), Integer)
  name.vb: AnalyzeNetwork(List(Of ModbusDevice), Integer)
- uid: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateRS485Power(System.Int32,System.Double,System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateRS485Power(System.Int32,System.Double,System.Double,System.Double,System.Double)
  id: CalculateRS485Power(System.Int32,System.Double,System.Double,System.Double,System.Double)
  parent: CircuitTool.Calculators.ModbusCommunicationCalculator
  langs:
  - csharp
  - vb
  name: CalculateRS485Power(int, double, double, double, double)
  nameWithType: ModbusCommunicationCalculator.CalculateRS485Power(int, double, double, double, double)
  fullName: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateRS485Power(int, double, double, double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/ModbusCommunicationCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: CalculateRS485Power
    path: src/Calculators/ModbusCommunicationCalculator.cs
    startLine: 251
  namespace: CircuitTool.Calculators
  summary: Calculate power consumption for RS485 network
  example: []
  syntax:
    content: public static double CalculateRS485Power(int deviceCount, double transmitCurrent, double receiveCurrent, double dutyCycle, double voltage = 5)
    parameters:
    - id: deviceCount
      type: System.Int32
      description: Number of devices on network
    - id: transmitCurrent
      type: System.Double
      description: Transmit current per device (mA)
    - id: receiveCurrent
      type: System.Double
      description: Receive current per device (mA)
    - id: dutyCycle
      type: System.Double
      description: Transmission duty cycle (0-1)
    - id: voltage
      type: System.Double
      description: Supply voltage (V)
    return:
      type: System.Double
      description: Total network power consumption (mW)
    content.vb: Public Shared Function CalculateRS485Power(deviceCount As Integer, transmitCurrent As Double, receiveCurrent As Double, dutyCycle As Double, voltage As Double = 5) As Double
  overload: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateRS485Power*
  nameWithType.vb: ModbusCommunicationCalculator.CalculateRS485Power(Integer, Double, Double, Double, Double)
  fullName.vb: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateRS485Power(Integer, Double, Double, Double, Double)
  name.vb: CalculateRS485Power(Integer, Double, Double, Double, Double)
references:
- uid: CircuitTool.Calculators
  commentId: N:CircuitTool.Calculators
  href: CircuitTool.html
  name: CircuitTool.Calculators
  nameWithType: CircuitTool.Calculators
  fullName: CircuitTool.Calculators
  spec.csharp:
  - uid: CircuitTool
    name: CircuitTool
    href: CircuitTool.html
  - name: .
  - uid: CircuitTool.Calculators
    name: Calculators
    href: CircuitTool.Calculators.html
  spec.vb:
  - uid: CircuitTool
    name: CircuitTool
    href: CircuitTool.html
  - name: .
  - uid: CircuitTool.Calculators
    name: Calculators
    href: CircuitTool.Calculators.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateCharacterTime*
  commentId: Overload:CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateCharacterTime
  href: CircuitTool.Calculators.ModbusCommunicationCalculator.html#CircuitTool_Calculators_ModbusCommunicationCalculator_CalculateCharacterTime_System_Int32_System_Int32_System_Int32_System_Boolean_
  name: CalculateCharacterTime
  nameWithType: ModbusCommunicationCalculator.CalculateCharacterTime
  fullName: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateCharacterTime
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateFrameTimeout*
  commentId: Overload:CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateFrameTimeout
  href: CircuitTool.Calculators.ModbusCommunicationCalculator.html#CircuitTool_Calculators_ModbusCommunicationCalculator_CalculateFrameTimeout_System_Int32_
  name: CalculateFrameTimeout
  nameWithType: ModbusCommunicationCalculator.CalculateFrameTimeout
  fullName: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateFrameTimeout
- uid: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateCharacterTimeout*
  commentId: Overload:CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateCharacterTimeout
  href: CircuitTool.Calculators.ModbusCommunicationCalculator.html#CircuitTool_Calculators_ModbusCommunicationCalculator_CalculateCharacterTimeout_System_Int32_
  name: CalculateCharacterTimeout
  nameWithType: ModbusCommunicationCalculator.CalculateCharacterTimeout
  fullName: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateCharacterTimeout
- uid: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateCRC16*
  commentId: Overload:CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateCRC16
  href: CircuitTool.Calculators.ModbusCommunicationCalculator.html#CircuitTool_Calculators_ModbusCommunicationCalculator_CalculateCRC16_System_Byte___
  name: CalculateCRC16
  nameWithType: ModbusCommunicationCalculator.CalculateCRC16
  fullName: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateCRC16
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: ushort
  nameWithType: ushort
  fullName: ushort
  nameWithType.vb: UShort
  fullName.vb: UShort
  name.vb: UShort
- uid: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateLRC*
  commentId: Overload:CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateLRC
  href: CircuitTool.Calculators.ModbusCommunicationCalculator.html#CircuitTool_Calculators_ModbusCommunicationCalculator_CalculateLRC_System_Byte___
  name: CalculateLRC
  nameWithType: ModbusCommunicationCalculator.CalculateLRC
  fullName: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateLRC
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateTransmissionTime*
  commentId: Overload:CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateTransmissionTime
  href: CircuitTool.Calculators.ModbusCommunicationCalculator.html#CircuitTool_Calculators_ModbusCommunicationCalculator_CalculateTransmissionTime_System_Int32_System_Int32_
  name: CalculateTransmissionTime
  nameWithType: ModbusCommunicationCalculator.CalculateTransmissionTime
  fullName: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateTransmissionTime
- uid: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateMaxThroughput*
  commentId: Overload:CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateMaxThroughput
  href: CircuitTool.Calculators.ModbusCommunicationCalculator.html#CircuitTool_Calculators_ModbusCommunicationCalculator_CalculateMaxThroughput_System_Int32_System_Int32_System_Double_
  name: CalculateMaxThroughput
  nameWithType: ModbusCommunicationCalculator.CalculateMaxThroughput
  fullName: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateMaxThroughput
- uid: CircuitTool.Calculators.ModbusCommunicationCalculator.ConvertAddress*
  commentId: Overload:CircuitTool.Calculators.ModbusCommunicationCalculator.ConvertAddress
  href: CircuitTool.Calculators.ModbusCommunicationCalculator.html#CircuitTool_Calculators_ModbusCommunicationCalculator_ConvertAddress_System_Int32_CircuitTool_Calculators_ModbusAddressFormat_CircuitTool_Calculators_ModbusAddressFormat_
  name: ConvertAddress
  nameWithType: ModbusCommunicationCalculator.ConvertAddress
  fullName: CircuitTool.Calculators.ModbusCommunicationCalculator.ConvertAddress
- uid: CircuitTool.Calculators.ModbusAddressFormat
  commentId: T:CircuitTool.Calculators.ModbusAddressFormat
  parent: CircuitTool.Calculators
  href: CircuitTool.Calculators.ModbusAddressFormat.html
  name: ModbusAddressFormat
  nameWithType: ModbusAddressFormat
  fullName: CircuitTool.Calculators.ModbusAddressFormat
- uid: CircuitTool.Calculators.ModbusCommunicationCalculator.GetRegisterCount*
  commentId: Overload:CircuitTool.Calculators.ModbusCommunicationCalculator.GetRegisterCount
  href: CircuitTool.Calculators.ModbusCommunicationCalculator.html#CircuitTool_Calculators_ModbusCommunicationCalculator_GetRegisterCount_CircuitTool_Calculators_ModbusDataType_
  name: GetRegisterCount
  nameWithType: ModbusCommunicationCalculator.GetRegisterCount
  fullName: CircuitTool.Calculators.ModbusCommunicationCalculator.GetRegisterCount
- uid: CircuitTool.Calculators.ModbusDataType
  commentId: T:CircuitTool.Calculators.ModbusDataType
  parent: CircuitTool.Calculators
  href: CircuitTool.Calculators.ModbusDataType.html
  name: ModbusDataType
  nameWithType: ModbusDataType
  fullName: CircuitTool.Calculators.ModbusDataType
- uid: CircuitTool.Calculators.ModbusCommunicationCalculator.AnalyzeNetwork*
  commentId: Overload:CircuitTool.Calculators.ModbusCommunicationCalculator.AnalyzeNetwork
  href: CircuitTool.Calculators.ModbusCommunicationCalculator.html#CircuitTool_Calculators_ModbusCommunicationCalculator_AnalyzeNetwork_System_Collections_Generic_List_CircuitTool_Calculators_ModbusDevice__System_Int32_
  name: AnalyzeNetwork
  nameWithType: ModbusCommunicationCalculator.AnalyzeNetwork
  fullName: CircuitTool.Calculators.ModbusCommunicationCalculator.AnalyzeNetwork
- uid: System.Collections.Generic.List{CircuitTool.Calculators.ModbusDevice}
  commentId: T:System.Collections.Generic.List{CircuitTool.Calculators.ModbusDevice}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<ModbusDevice>
  nameWithType: List<ModbusDevice>
  fullName: System.Collections.Generic.List<CircuitTool.Calculators.ModbusDevice>
  nameWithType.vb: List(Of ModbusDevice)
  fullName.vb: System.Collections.Generic.List(Of CircuitTool.Calculators.ModbusDevice)
  name.vb: List(Of ModbusDevice)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: CircuitTool.Calculators.ModbusDevice
    name: ModbusDevice
    href: CircuitTool.Calculators.ModbusDevice.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: CircuitTool.Calculators.ModbusDevice
    name: ModbusDevice
    href: CircuitTool.Calculators.ModbusDevice.html
  - name: )
- uid: CircuitTool.Calculators.ModbusNetworkAnalysis
  commentId: T:CircuitTool.Calculators.ModbusNetworkAnalysis
  parent: CircuitTool.Calculators
  href: CircuitTool.Calculators.ModbusNetworkAnalysis.html
  name: ModbusNetworkAnalysis
  nameWithType: ModbusNetworkAnalysis
  fullName: CircuitTool.Calculators.ModbusNetworkAnalysis
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateRS485Power*
  commentId: Overload:CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateRS485Power
  href: CircuitTool.Calculators.ModbusCommunicationCalculator.html#CircuitTool_Calculators_ModbusCommunicationCalculator_CalculateRS485Power_System_Int32_System_Double_System_Double_System_Double_System_Double_
  name: CalculateRS485Power
  nameWithType: ModbusCommunicationCalculator.CalculateRS485Power
  fullName: CircuitTool.Calculators.ModbusCommunicationCalculator.CalculateRS485Power
