### YamlMime:ManagedReference
items:
- uid: CircuitTool.CircuitBuilder.ComplexPower
  commentId: T:CircuitTool.CircuitBuilder.ComplexPower
  id: ComplexPower
  parent: CircuitTool.CircuitBuilder
  children:
  - CircuitTool.CircuitBuilder.ComplexPower.#ctor(System.Numerics.Complex)
  - CircuitTool.CircuitBuilder.ComplexPower.ApparentPower
  - CircuitTool.CircuitBuilder.ComplexPower.PowerFactor
  - CircuitTool.CircuitBuilder.ComplexPower.ReactivePower
  - CircuitTool.CircuitBuilder.ComplexPower.RealPower
  - CircuitTool.CircuitBuilder.ComplexPower.ToString
  langs:
  - csharp
  - vb
  name: ComplexPower
  nameWithType: ComplexPower
  fullName: CircuitTool.CircuitBuilder.ComplexPower
  type: Struct
  source:
    remote:
      path: src/CircuitBuilder.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ComplexPower
    path: src/CircuitBuilder.cs
    startLine: 413
  namespace: CircuitTool.CircuitBuilder
  summary: Represents complex power (apparent, real, and reactive power)
  example: []
  syntax:
    content: public readonly struct ComplexPower
    content.vb: Public Structure ComplexPower
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: CircuitTool.CircuitBuilder.ComplexPower.#ctor(System.Numerics.Complex)
  commentId: M:CircuitTool.CircuitBuilder.ComplexPower.#ctor(System.Numerics.Complex)
  id: '#ctor(System.Numerics.Complex)'
  parent: CircuitTool.CircuitBuilder.ComplexPower
  langs:
  - csharp
  - vb
  name: ComplexPower(Complex)
  nameWithType: ComplexPower.ComplexPower(Complex)
  fullName: CircuitTool.CircuitBuilder.ComplexPower.ComplexPower(System.Numerics.Complex)
  type: Constructor
  source:
    remote:
      path: src/CircuitBuilder.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: .ctor
    path: src/CircuitBuilder.cs
    startLine: 417
  namespace: CircuitTool.CircuitBuilder
  syntax:
    content: public ComplexPower(Complex complex)
    parameters:
    - id: complex
      type: System.Numerics.Complex
    content.vb: Public Sub New(complex As Complex)
  overload: CircuitTool.CircuitBuilder.ComplexPower.#ctor*
  nameWithType.vb: ComplexPower.New(Complex)
  fullName.vb: CircuitTool.CircuitBuilder.ComplexPower.New(System.Numerics.Complex)
  name.vb: New(Complex)
- uid: CircuitTool.CircuitBuilder.ComplexPower.RealPower
  commentId: P:CircuitTool.CircuitBuilder.ComplexPower.RealPower
  id: RealPower
  parent: CircuitTool.CircuitBuilder.ComplexPower
  langs:
  - csharp
  - vb
  name: RealPower
  nameWithType: ComplexPower.RealPower
  fullName: CircuitTool.CircuitBuilder.ComplexPower.RealPower
  type: Property
  source:
    remote:
      path: src/CircuitBuilder.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: RealPower
    path: src/CircuitBuilder.cs
    startLine: 425
  namespace: CircuitTool.CircuitBuilder
  summary: Real power in watts
  example: []
  syntax:
    content: public double RealPower { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property RealPower As Double
  overload: CircuitTool.CircuitBuilder.ComplexPower.RealPower*
- uid: CircuitTool.CircuitBuilder.ComplexPower.ReactivePower
  commentId: P:CircuitTool.CircuitBuilder.ComplexPower.ReactivePower
  id: ReactivePower
  parent: CircuitTool.CircuitBuilder.ComplexPower
  langs:
  - csharp
  - vb
  name: ReactivePower
  nameWithType: ComplexPower.ReactivePower
  fullName: CircuitTool.CircuitBuilder.ComplexPower.ReactivePower
  type: Property
  source:
    remote:
      path: src/CircuitBuilder.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ReactivePower
    path: src/CircuitBuilder.cs
    startLine: 430
  namespace: CircuitTool.CircuitBuilder
  summary: Reactive power in VARs
  example: []
  syntax:
    content: public double ReactivePower { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property ReactivePower As Double
  overload: CircuitTool.CircuitBuilder.ComplexPower.ReactivePower*
- uid: CircuitTool.CircuitBuilder.ComplexPower.ApparentPower
  commentId: P:CircuitTool.CircuitBuilder.ComplexPower.ApparentPower
  id: ApparentPower
  parent: CircuitTool.CircuitBuilder.ComplexPower
  langs:
  - csharp
  - vb
  name: ApparentPower
  nameWithType: ComplexPower.ApparentPower
  fullName: CircuitTool.CircuitBuilder.ComplexPower.ApparentPower
  type: Property
  source:
    remote:
      path: src/CircuitBuilder.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ApparentPower
    path: src/CircuitBuilder.cs
    startLine: 435
  namespace: CircuitTool.CircuitBuilder
  summary: Apparent power in VA
  example: []
  syntax:
    content: public double ApparentPower { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property ApparentPower As Double
  overload: CircuitTool.CircuitBuilder.ComplexPower.ApparentPower*
- uid: CircuitTool.CircuitBuilder.ComplexPower.PowerFactor
  commentId: P:CircuitTool.CircuitBuilder.ComplexPower.PowerFactor
  id: PowerFactor
  parent: CircuitTool.CircuitBuilder.ComplexPower
  langs:
  - csharp
  - vb
  name: PowerFactor
  nameWithType: ComplexPower.PowerFactor
  fullName: CircuitTool.CircuitBuilder.ComplexPower.PowerFactor
  type: Property
  source:
    remote:
      path: src/CircuitBuilder.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: PowerFactor
    path: src/CircuitBuilder.cs
    startLine: 440
  namespace: CircuitTool.CircuitBuilder
  summary: Power factor
  example: []
  syntax:
    content: public double PowerFactor { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property PowerFactor As Double
  overload: CircuitTool.CircuitBuilder.ComplexPower.PowerFactor*
- uid: CircuitTool.CircuitBuilder.ComplexPower.ToString
  commentId: M:CircuitTool.CircuitBuilder.ComplexPower.ToString
  id: ToString
  parent: CircuitTool.CircuitBuilder.ComplexPower
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ComplexPower.ToString()
  fullName: CircuitTool.CircuitBuilder.ComplexPower.ToString()
  type: Method
  source:
    remote:
      path: src/CircuitBuilder.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ToString
    path: src/CircuitBuilder.cs
    startLine: 442
  namespace: CircuitTool.CircuitBuilder
  summary: Returns the fully qualified type name of this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The fully qualified type name.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: CircuitTool.CircuitBuilder.ComplexPower.ToString*
references:
- uid: CircuitTool.CircuitBuilder
  commentId: N:CircuitTool.CircuitBuilder
  href: CircuitTool.html
  name: CircuitTool.CircuitBuilder
  nameWithType: CircuitTool.CircuitBuilder
  fullName: CircuitTool.CircuitBuilder
  spec.csharp:
  - uid: CircuitTool
    name: CircuitTool
    href: CircuitTool.html
  - name: .
  - uid: CircuitTool.CircuitBuilder
    name: CircuitBuilder
    href: CircuitTool.CircuitBuilder.html
  spec.vb:
  - uid: CircuitTool
    name: CircuitTool
    href: CircuitTool.html
  - name: .
  - uid: CircuitTool.CircuitBuilder
    name: CircuitBuilder
    href: CircuitTool.CircuitBuilder.html
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CircuitTool.CircuitBuilder.ComplexPower.#ctor*
  commentId: Overload:CircuitTool.CircuitBuilder.ComplexPower.#ctor
  href: CircuitTool.CircuitBuilder.ComplexPower.html#CircuitTool_CircuitBuilder_ComplexPower__ctor_System_Numerics_Complex_
  name: ComplexPower
  nameWithType: ComplexPower.ComplexPower
  fullName: CircuitTool.CircuitBuilder.ComplexPower.ComplexPower
  nameWithType.vb: ComplexPower.New
  fullName.vb: CircuitTool.CircuitBuilder.ComplexPower.New
  name.vb: New
- uid: System.Numerics.Complex
  commentId: T:System.Numerics.Complex
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.complex
  name: Complex
  nameWithType: Complex
  fullName: System.Numerics.Complex
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: CircuitTool.CircuitBuilder.ComplexPower.RealPower*
  commentId: Overload:CircuitTool.CircuitBuilder.ComplexPower.RealPower
  href: CircuitTool.CircuitBuilder.ComplexPower.html#CircuitTool_CircuitBuilder_ComplexPower_RealPower
  name: RealPower
  nameWithType: ComplexPower.RealPower
  fullName: CircuitTool.CircuitBuilder.ComplexPower.RealPower
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: CircuitTool.CircuitBuilder.ComplexPower.ReactivePower*
  commentId: Overload:CircuitTool.CircuitBuilder.ComplexPower.ReactivePower
  href: CircuitTool.CircuitBuilder.ComplexPower.html#CircuitTool_CircuitBuilder_ComplexPower_ReactivePower
  name: ReactivePower
  nameWithType: ComplexPower.ReactivePower
  fullName: CircuitTool.CircuitBuilder.ComplexPower.ReactivePower
- uid: CircuitTool.CircuitBuilder.ComplexPower.ApparentPower*
  commentId: Overload:CircuitTool.CircuitBuilder.ComplexPower.ApparentPower
  href: CircuitTool.CircuitBuilder.ComplexPower.html#CircuitTool_CircuitBuilder_ComplexPower_ApparentPower
  name: ApparentPower
  nameWithType: ComplexPower.ApparentPower
  fullName: CircuitTool.CircuitBuilder.ComplexPower.ApparentPower
- uid: CircuitTool.CircuitBuilder.ComplexPower.PowerFactor*
  commentId: Overload:CircuitTool.CircuitBuilder.ComplexPower.PowerFactor
  href: CircuitTool.CircuitBuilder.ComplexPower.html#CircuitTool_CircuitBuilder_ComplexPower_PowerFactor
  name: PowerFactor
  nameWithType: ComplexPower.PowerFactor
  fullName: CircuitTool.CircuitBuilder.ComplexPower.PowerFactor
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: CircuitTool.CircuitBuilder.ComplexPower.ToString*
  commentId: Overload:CircuitTool.CircuitBuilder.ComplexPower.ToString
  href: CircuitTool.CircuitBuilder.ComplexPower.html#CircuitTool_CircuitBuilder_ComplexPower_ToString
  name: ToString
  nameWithType: ComplexPower.ToString
  fullName: CircuitTool.CircuitBuilder.ComplexPower.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
