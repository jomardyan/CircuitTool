### YamlMime:ManagedReference
items:
- uid: CircuitTool.Mathematics.FourierTransform
  commentId: T:CircuitTool.Mathematics.FourierTransform
  id: FourierTransform
  parent: CircuitTool.Mathematics
  children:
  - CircuitTool.Mathematics.FourierTransform.ApplyWindow(System.Double[],CircuitTool.Mathematics.WindowType)
  - CircuitTool.Mathematics.FourierTransform.CalculateTHD(System.Double[])
  - CircuitTool.Mathematics.FourierTransform.DFT(System.Double[])
  - CircuitTool.Mathematics.FourierTransform.DFT(System.Numerics.Complex[])
  - CircuitTool.Mathematics.FourierTransform.ExtractHarmonics(System.Double[],System.Double,System.Double,System.Int32)
  - CircuitTool.Mathematics.FourierTransform.IDFT(System.Numerics.Complex[])
  - CircuitTool.Mathematics.FourierTransform.PowerSpectralDensity(System.Double[])
  langs:
  - csharp
  - vb
  name: FourierTransform
  nameWithType: FourierTransform
  fullName: CircuitTool.Mathematics.FourierTransform
  type: Class
  source:
    remote:
      path: src/Math/FourierTransform.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: FourierTransform
    path: src/Math/FourierTransform.cs
    startLine: 20
  namespace: CircuitTool.Mathematics
  summary: Provides basic Fourier transform utilities for circuit analysis
  example: []
  syntax:
    content: public static class FourierTransform
    content.vb: Public Module FourierTransform
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: CircuitTool.Mathematics.FourierTransform.DFT(System.Numerics.Complex[])
  commentId: M:CircuitTool.Mathematics.FourierTransform.DFT(System.Numerics.Complex[])
  id: DFT(System.Numerics.Complex[])
  parent: CircuitTool.Mathematics.FourierTransform
  langs:
  - csharp
  - vb
  name: DFT(Complex[])
  nameWithType: FourierTransform.DFT(Complex[])
  fullName: CircuitTool.Mathematics.FourierTransform.DFT(System.Numerics.Complex[])
  type: Method
  source:
    remote:
      path: src/Math/FourierTransform.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: DFT
    path: src/Math/FourierTransform.cs
    startLine: 27
  namespace: CircuitTool.Mathematics
  summary: Computes the Discrete Fourier Transform (DFT) of a complex signal
  example: []
  syntax:
    content: public static Complex[] DFT(Complex[] signal)
    parameters:
    - id: signal
      type: System.Numerics.Complex[]
      description: Input signal
    return:
      type: System.Numerics.Complex[]
      description: Frequency domain representation
    content.vb: Public Shared Function DFT(signal As Complex()) As Complex()
  overload: CircuitTool.Mathematics.FourierTransform.DFT*
  nameWithType.vb: FourierTransform.DFT(Complex())
  fullName.vb: CircuitTool.Mathematics.FourierTransform.DFT(System.Numerics.Complex())
  name.vb: DFT(Complex())
- uid: CircuitTool.Mathematics.FourierTransform.IDFT(System.Numerics.Complex[])
  commentId: M:CircuitTool.Mathematics.FourierTransform.IDFT(System.Numerics.Complex[])
  id: IDFT(System.Numerics.Complex[])
  parent: CircuitTool.Mathematics.FourierTransform
  langs:
  - csharp
  - vb
  name: IDFT(Complex[])
  nameWithType: FourierTransform.IDFT(Complex[])
  fullName: CircuitTool.Mathematics.FourierTransform.IDFT(System.Numerics.Complex[])
  type: Method
  source:
    remote:
      path: src/Math/FourierTransform.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: IDFT
    path: src/Math/FourierTransform.cs
    startLine: 57
  namespace: CircuitTool.Mathematics
  summary: Computes the Inverse Discrete Fourier Transform (IDFT)
  example: []
  syntax:
    content: public static Complex[] IDFT(Complex[] spectrum)
    parameters:
    - id: spectrum
      type: System.Numerics.Complex[]
      description: Frequency domain representation
    return:
      type: System.Numerics.Complex[]
      description: Time domain signal
    content.vb: Public Shared Function IDFT(spectrum As Complex()) As Complex()
  overload: CircuitTool.Mathematics.FourierTransform.IDFT*
  nameWithType.vb: FourierTransform.IDFT(Complex())
  fullName.vb: CircuitTool.Mathematics.FourierTransform.IDFT(System.Numerics.Complex())
  name.vb: IDFT(Complex())
- uid: CircuitTool.Mathematics.FourierTransform.DFT(System.Double[])
  commentId: M:CircuitTool.Mathematics.FourierTransform.DFT(System.Double[])
  id: DFT(System.Double[])
  parent: CircuitTool.Mathematics.FourierTransform
  langs:
  - csharp
  - vb
  name: DFT(double[])
  nameWithType: FourierTransform.DFT(double[])
  fullName: CircuitTool.Mathematics.FourierTransform.DFT(double[])
  type: Method
  source:
    remote:
      path: src/Math/FourierTransform.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: DFT
    path: src/Math/FourierTransform.cs
    startLine: 82
  namespace: CircuitTool.Mathematics
  summary: Computes the DFT of a real-valued signal
  example: []
  syntax:
    content: public static Complex[] DFT(double[] signal)
    parameters:
    - id: signal
      type: System.Double[]
      description: Real-valued input signal
    return:
      type: System.Numerics.Complex[]
      description: Complex frequency domain representation
    content.vb: Public Shared Function DFT(signal As Double()) As Complex()
  overload: CircuitTool.Mathematics.FourierTransform.DFT*
  nameWithType.vb: FourierTransform.DFT(Double())
  fullName.vb: CircuitTool.Mathematics.FourierTransform.DFT(Double())
  name.vb: DFT(Double())
- uid: CircuitTool.Mathematics.FourierTransform.PowerSpectralDensity(System.Double[])
  commentId: M:CircuitTool.Mathematics.FourierTransform.PowerSpectralDensity(System.Double[])
  id: PowerSpectralDensity(System.Double[])
  parent: CircuitTool.Mathematics.FourierTransform
  langs:
  - csharp
  - vb
  name: PowerSpectralDensity(double[])
  nameWithType: FourierTransform.PowerSpectralDensity(double[])
  fullName: CircuitTool.Mathematics.FourierTransform.PowerSpectralDensity(double[])
  type: Method
  source:
    remote:
      path: src/Math/FourierTransform.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: PowerSpectralDensity
    path: src/Math/FourierTransform.cs
    startLine: 102
  namespace: CircuitTool.Mathematics
  summary: Computes power spectral density from a signal
  example: []
  syntax:
    content: public static double[] PowerSpectralDensity(double[] signal)
    parameters:
    - id: signal
      type: System.Double[]
      description: Input signal
    return:
      type: System.Double[]
      description: Power spectral density
    content.vb: Public Shared Function PowerSpectralDensity(signal As Double()) As Double()
  overload: CircuitTool.Mathematics.FourierTransform.PowerSpectralDensity*
  nameWithType.vb: FourierTransform.PowerSpectralDensity(Double())
  fullName.vb: CircuitTool.Mathematics.FourierTransform.PowerSpectralDensity(Double())
  name.vb: PowerSpectralDensity(Double())
- uid: CircuitTool.Mathematics.FourierTransform.ExtractHarmonics(System.Double[],System.Double,System.Double,System.Int32)
  commentId: M:CircuitTool.Mathematics.FourierTransform.ExtractHarmonics(System.Double[],System.Double,System.Double,System.Int32)
  id: ExtractHarmonics(System.Double[],System.Double,System.Double,System.Int32)
  parent: CircuitTool.Mathematics.FourierTransform
  langs:
  - csharp
  - vb
  name: ExtractHarmonics(double[], double, double, int)
  nameWithType: FourierTransform.ExtractHarmonics(double[], double, double, int)
  fullName: CircuitTool.Mathematics.FourierTransform.ExtractHarmonics(double[], double, double, int)
  type: Method
  source:
    remote:
      path: src/Math/FourierTransform.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ExtractHarmonics
    path: src/Math/FourierTransform.cs
    startLine: 123
  namespace: CircuitTool.Mathematics
  summary: Extracts harmonic content from a periodic signal
  example: []
  syntax:
    content: public static (double[] magnitudes, double[] phases) ExtractHarmonics(double[] signal, double fundamentalFrequency, double sampleRate, int maxHarmonics = 10)
    parameters:
    - id: signal
      type: System.Double[]
      description: Periodic signal samples
    - id: fundamentalFrequency
      type: System.Double
      description: Fundamental frequency in Hz
    - id: sampleRate
      type: System.Double
      description: Sample rate in Hz
    - id: maxHarmonics
      type: System.Int32
      description: Maximum number of harmonics to extract
    return:
      type: System.ValueTuple{System.Double[],System.Double[]}
      description: Harmonic magnitudes and phases
    content.vb: Public Shared Function ExtractHarmonics(signal As Double(), fundamentalFrequency As Double, sampleRate As Double, maxHarmonics As Integer = 10) As (magnitudes As Double(), phases As Double())
  overload: CircuitTool.Mathematics.FourierTransform.ExtractHarmonics*
  nameWithType.vb: FourierTransform.ExtractHarmonics(Double(), Double, Double, Integer)
  fullName.vb: CircuitTool.Mathematics.FourierTransform.ExtractHarmonics(Double(), Double, Double, Integer)
  name.vb: ExtractHarmonics(Double(), Double, Double, Integer)
- uid: CircuitTool.Mathematics.FourierTransform.CalculateTHD(System.Double[])
  commentId: M:CircuitTool.Mathematics.FourierTransform.CalculateTHD(System.Double[])
  id: CalculateTHD(System.Double[])
  parent: CircuitTool.Mathematics.FourierTransform
  langs:
  - csharp
  - vb
  name: CalculateTHD(double[])
  nameWithType: FourierTransform.CalculateTHD(double[])
  fullName: CircuitTool.Mathematics.FourierTransform.CalculateTHD(double[])
  type: Method
  source:
    remote:
      path: src/Math/FourierTransform.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: CalculateTHD
    path: src/Math/FourierTransform.cs
    startLine: 160
  namespace: CircuitTool.Mathematics
  summary: Calculates Total Harmonic Distortion (THD) from harmonic content
  example: []
  syntax:
    content: public static double CalculateTHD(double[] harmonicMagnitudes)
    parameters:
    - id: harmonicMagnitudes
      type: System.Double[]
      description: Harmonic magnitudes (fundamental at index 1)
    return:
      type: System.Double
      description: THD as a ratio (0-1)
    content.vb: Public Shared Function CalculateTHD(harmonicMagnitudes As Double()) As Double
  overload: CircuitTool.Mathematics.FourierTransform.CalculateTHD*
  nameWithType.vb: FourierTransform.CalculateTHD(Double())
  fullName.vb: CircuitTool.Mathematics.FourierTransform.CalculateTHD(Double())
  name.vb: CalculateTHD(Double())
- uid: CircuitTool.Mathematics.FourierTransform.ApplyWindow(System.Double[],CircuitTool.Mathematics.WindowType)
  commentId: M:CircuitTool.Mathematics.FourierTransform.ApplyWindow(System.Double[],CircuitTool.Mathematics.WindowType)
  id: ApplyWindow(System.Double[],CircuitTool.Mathematics.WindowType)
  parent: CircuitTool.Mathematics.FourierTransform
  langs:
  - csharp
  - vb
  name: ApplyWindow(double[], WindowType)
  nameWithType: FourierTransform.ApplyWindow(double[], WindowType)
  fullName: CircuitTool.Mathematics.FourierTransform.ApplyWindow(double[], CircuitTool.Mathematics.WindowType)
  type: Method
  source:
    remote:
      path: src/Math/FourierTransform.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ApplyWindow
    path: src/Math/FourierTransform.cs
    startLine: 182
  namespace: CircuitTool.Mathematics
  summary: Applies a window function to reduce spectral leakage
  example: []
  syntax:
    content: public static double[] ApplyWindow(double[] signal, WindowType windowType = WindowType.Hanning)
    parameters:
    - id: signal
      type: System.Double[]
      description: Input signal
    - id: windowType
      type: CircuitTool.Mathematics.WindowType
      description: Type of window to apply
    return:
      type: System.Double[]
      description: Windowed signal
    content.vb: Public Shared Function ApplyWindow(signal As Double(), windowType As WindowType = WindowType.Hanning) As Double()
  overload: CircuitTool.Mathematics.FourierTransform.ApplyWindow*
  nameWithType.vb: FourierTransform.ApplyWindow(Double(), WindowType)
  fullName.vb: CircuitTool.Mathematics.FourierTransform.ApplyWindow(Double(), CircuitTool.Mathematics.WindowType)
  name.vb: ApplyWindow(Double(), WindowType)
references:
- uid: CircuitTool.Mathematics
  commentId: N:CircuitTool.Mathematics
  href: CircuitTool.html
  name: CircuitTool.Mathematics
  nameWithType: CircuitTool.Mathematics
  fullName: CircuitTool.Mathematics
  spec.csharp:
  - uid: CircuitTool
    name: CircuitTool
    href: CircuitTool.html
  - name: .
  - uid: CircuitTool.Mathematics
    name: Mathematics
    href: CircuitTool.Mathematics.html
  spec.vb:
  - uid: CircuitTool
    name: CircuitTool
    href: CircuitTool.html
  - name: .
  - uid: CircuitTool.Mathematics
    name: Mathematics
    href: CircuitTool.Mathematics.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CircuitTool.Mathematics.FourierTransform.DFT*
  commentId: Overload:CircuitTool.Mathematics.FourierTransform.DFT
  href: CircuitTool.Mathematics.FourierTransform.html#CircuitTool_Mathematics_FourierTransform_DFT_System_Numerics_Complex___
  name: DFT
  nameWithType: FourierTransform.DFT
  fullName: CircuitTool.Mathematics.FourierTransform.DFT
- uid: System.Numerics.Complex[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.complex
  name: Complex[]
  nameWithType: Complex[]
  fullName: System.Numerics.Complex[]
  nameWithType.vb: Complex()
  fullName.vb: System.Numerics.Complex()
  name.vb: Complex()
  spec.csharp:
  - uid: System.Numerics.Complex
    name: Complex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.complex
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Numerics.Complex
    name: Complex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.complex
  - name: (
  - name: )
- uid: CircuitTool.Mathematics.FourierTransform.IDFT*
  commentId: Overload:CircuitTool.Mathematics.FourierTransform.IDFT
  href: CircuitTool.Mathematics.FourierTransform.html#CircuitTool_Mathematics_FourierTransform_IDFT_System_Numerics_Complex___
  name: IDFT
  nameWithType: FourierTransform.IDFT
  fullName: CircuitTool.Mathematics.FourierTransform.IDFT
- uid: System.Double[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double[]
  nameWithType: double[]
  fullName: double[]
  nameWithType.vb: Double()
  fullName.vb: Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: (
  - name: )
- uid: CircuitTool.Mathematics.FourierTransform.PowerSpectralDensity*
  commentId: Overload:CircuitTool.Mathematics.FourierTransform.PowerSpectralDensity
  href: CircuitTool.Mathematics.FourierTransform.html#CircuitTool_Mathematics_FourierTransform_PowerSpectralDensity_System_Double___
  name: PowerSpectralDensity
  nameWithType: FourierTransform.PowerSpectralDensity
  fullName: CircuitTool.Mathematics.FourierTransform.PowerSpectralDensity
- uid: CircuitTool.Mathematics.FourierTransform.ExtractHarmonics*
  commentId: Overload:CircuitTool.Mathematics.FourierTransform.ExtractHarmonics
  href: CircuitTool.Mathematics.FourierTransform.html#CircuitTool_Mathematics_FourierTransform_ExtractHarmonics_System_Double___System_Double_System_Double_System_Int32_
  name: ExtractHarmonics
  nameWithType: FourierTransform.ExtractHarmonics
  fullName: CircuitTool.Mathematics.FourierTransform.ExtractHarmonics
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.ValueTuple{System.Double[],System.Double[]}
  commentId: T:System.ValueTuple{System.Double[],System.Double[]}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: (double[] magnitudes, double[] phases)
  nameWithType: (double[] magnitudes, double[] phases)
  fullName: (double[] magnitudes, double[] phases)
  nameWithType.vb: (magnitudes As Double(), phases As Double())
  fullName.vb: (magnitudes As Double(), phases As Double())
  name.vb: (magnitudes As Double(), phases As Double())
  spec.csharp:
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '['
  - name: ']'
  - name: " "
  - uid: System.ValueTuple{System.Double[],System.Double[]}.magnitudes
    name: magnitudes
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double[],system.double[]-.magnitudes
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '['
  - name: ']'
  - name: " "
  - uid: System.ValueTuple{System.Double[],System.Double[]}.phases
    name: phases
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double[],system.double[]-.phases
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Double[],System.Double[]}.magnitudes
    name: magnitudes
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double[],system.double[]-.magnitudes
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Double[],System.Double[]}.phases
    name: phases
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double[],system.double[]-.phases
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: (
  - name: )
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: CircuitTool.Mathematics.FourierTransform.CalculateTHD*
  commentId: Overload:CircuitTool.Mathematics.FourierTransform.CalculateTHD
  href: CircuitTool.Mathematics.FourierTransform.html#CircuitTool_Mathematics_FourierTransform_CalculateTHD_System_Double___
  name: CalculateTHD
  nameWithType: FourierTransform.CalculateTHD
  fullName: CircuitTool.Mathematics.FourierTransform.CalculateTHD
- uid: CircuitTool.Mathematics.FourierTransform.ApplyWindow*
  commentId: Overload:CircuitTool.Mathematics.FourierTransform.ApplyWindow
  href: CircuitTool.Mathematics.FourierTransform.html#CircuitTool_Mathematics_FourierTransform_ApplyWindow_System_Double___CircuitTool_Mathematics_WindowType_
  name: ApplyWindow
  nameWithType: FourierTransform.ApplyWindow
  fullName: CircuitTool.Mathematics.FourierTransform.ApplyWindow
- uid: CircuitTool.Mathematics.WindowType
  commentId: T:CircuitTool.Mathematics.WindowType
  parent: CircuitTool.Mathematics
  href: CircuitTool.Mathematics.WindowType.html
  name: WindowType
  nameWithType: WindowType
  fullName: CircuitTool.Mathematics.WindowType
