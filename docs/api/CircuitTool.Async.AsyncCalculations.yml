### YamlMime:ManagedReference
items:
- uid: CircuitTool.Async.AsyncCalculations
  commentId: T:CircuitTool.Async.AsyncCalculations
  id: AsyncCalculations
  parent: CircuitTool.Async
  children:
  - CircuitTool.Async.AsyncCalculations.FrequencySweepAsync(System.Double,System.Double,System.Int32,System.Func{System.Double,System.Numerics.Complex},System.Threading.CancellationToken)
  - CircuitTool.Async.AsyncCalculations.HarmonicAnalysisAsync(System.Double,System.Int32,System.Func{System.Double,System.Numerics.Complex},System.Threading.CancellationToken)
  - CircuitTool.Async.AsyncCalculations.MonteCarloAnalysisAsync(System.Double[],System.Double[],System.Int32,System.Func{System.Double[],System.Double},System.Threading.CancellationToken)
  - CircuitTool.Async.AsyncCalculations.ThermalAnalysisAsync(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Double,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: AsyncCalculations
  nameWithType: AsyncCalculations
  fullName: CircuitTool.Async.AsyncCalculations
  type: Class
  source:
    remote:
      path: src/Performance/AsyncCalculations.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: AsyncCalculations
    path: ../src/Performance/AsyncCalculations.cs
    startLine: 12
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Async
  summary: Provides asynchronous versions of complex electrical calculations
  example: []
  syntax:
    content: public static class AsyncCalculations
    content.vb: Public Module AsyncCalculations
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: CircuitTool.Async.AsyncCalculations.MonteCarloAnalysisAsync(System.Double[],System.Double[],System.Int32,System.Func{System.Double[],System.Double},System.Threading.CancellationToken)
  commentId: M:CircuitTool.Async.AsyncCalculations.MonteCarloAnalysisAsync(System.Double[],System.Double[],System.Int32,System.Func{System.Double[],System.Double},System.Threading.CancellationToken)
  id: MonteCarloAnalysisAsync(System.Double[],System.Double[],System.Int32,System.Func{System.Double[],System.Double},System.Threading.CancellationToken)
  parent: CircuitTool.Async.AsyncCalculations
  langs:
  - csharp
  - vb
  name: MonteCarloAnalysisAsync(double[], double[], int, Func<double[], double>, CancellationToken)
  nameWithType: AsyncCalculations.MonteCarloAnalysisAsync(double[], double[], int, Func<double[], double>, CancellationToken)
  fullName: CircuitTool.Async.AsyncCalculations.MonteCarloAnalysisAsync(double[], double[], int, System.Func<double[], double>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Performance/AsyncCalculations.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: MonteCarloAnalysisAsync
    path: ../src/Performance/AsyncCalculations.cs
    startLine: 23
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Async
  summary: Performs Monte Carlo analysis of circuit with component tolerances asynchronously
  example: []
  syntax:
    content: public static Task<MonteCarloResult> MonteCarloAnalysisAsync(double[] nominalValues, double[] tolerances, int iterations, Func<double[], double> calculator, CancellationToken cancellationToken = default)
    parameters:
    - id: nominalValues
      type: System.Double[]
      description: Nominal component values
    - id: tolerances
      type: System.Double[]
      description: Component tolerances (e.g., 0.05 for 5%)
    - id: iterations
      type: System.Int32
      description: Number of Monte Carlo iterations
    - id: calculator
      type: System.Func{System.Double[],System.Double}
      description: Function to calculate circuit response
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{CircuitTool.Async.MonteCarloResult}
      description: Monte Carlo analysis results
    content.vb: Public Shared Function MonteCarloAnalysisAsync(nominalValues As Double(), tolerances As Double(), iterations As Integer, calculator As Func(Of Double(), Double), cancellationToken As CancellationToken = Nothing) As Task(Of MonteCarloResult)
  overload: CircuitTool.Async.AsyncCalculations.MonteCarloAnalysisAsync*
  nameWithType.vb: AsyncCalculations.MonteCarloAnalysisAsync(Double(), Double(), Integer, Func(Of Double(), Double), CancellationToken)
  fullName.vb: CircuitTool.Async.AsyncCalculations.MonteCarloAnalysisAsync(Double(), Double(), Integer, System.Func(Of Double(), Double), System.Threading.CancellationToken)
  name.vb: MonteCarloAnalysisAsync(Double(), Double(), Integer, Func(Of Double(), Double), CancellationToken)
- uid: CircuitTool.Async.AsyncCalculations.FrequencySweepAsync(System.Double,System.Double,System.Int32,System.Func{System.Double,System.Numerics.Complex},System.Threading.CancellationToken)
  commentId: M:CircuitTool.Async.AsyncCalculations.FrequencySweepAsync(System.Double,System.Double,System.Int32,System.Func{System.Double,System.Numerics.Complex},System.Threading.CancellationToken)
  id: FrequencySweepAsync(System.Double,System.Double,System.Int32,System.Func{System.Double,System.Numerics.Complex},System.Threading.CancellationToken)
  parent: CircuitTool.Async.AsyncCalculations
  langs:
  - csharp
  - vb
  name: FrequencySweepAsync(double, double, int, Func<double, Complex>, CancellationToken)
  nameWithType: AsyncCalculations.FrequencySweepAsync(double, double, int, Func<double, Complex>, CancellationToken)
  fullName: CircuitTool.Async.AsyncCalculations.FrequencySweepAsync(double, double, int, System.Func<double, System.Numerics.Complex>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Performance/AsyncCalculations.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: FrequencySweepAsync
    path: ../src/Performance/AsyncCalculations.cs
    startLine: 63
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Async
  summary: Performs frequency sweep analysis asynchronously
  example: []
  syntax:
    content: public static Task<FrequencyResponse> FrequencySweepAsync(double startFrequency, double stopFrequency, int points, Func<double, Complex> calculator, CancellationToken cancellationToken = default)
    parameters:
    - id: startFrequency
      type: System.Double
      description: Start frequency in Hz
    - id: stopFrequency
      type: System.Double
      description: Stop frequency in Hz
    - id: points
      type: System.Int32
      description: Number of frequency points
    - id: calculator
      type: System.Func{System.Double,System.Numerics.Complex}
      description: Function to calculate response at each frequency
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{CircuitTool.Async.FrequencyResponse}
      description: Frequency response results
    content.vb: Public Shared Function FrequencySweepAsync(startFrequency As Double, stopFrequency As Double, points As Integer, calculator As Func(Of Double, Complex), cancellationToken As CancellationToken = Nothing) As Task(Of FrequencyResponse)
  overload: CircuitTool.Async.AsyncCalculations.FrequencySweepAsync*
  nameWithType.vb: AsyncCalculations.FrequencySweepAsync(Double, Double, Integer, Func(Of Double, Complex), CancellationToken)
  fullName.vb: CircuitTool.Async.AsyncCalculations.FrequencySweepAsync(Double, Double, Integer, System.Func(Of Double, System.Numerics.Complex), System.Threading.CancellationToken)
  name.vb: FrequencySweepAsync(Double, Double, Integer, Func(Of Double, Complex), CancellationToken)
- uid: CircuitTool.Async.AsyncCalculations.HarmonicAnalysisAsync(System.Double,System.Int32,System.Func{System.Double,System.Numerics.Complex},System.Threading.CancellationToken)
  commentId: M:CircuitTool.Async.AsyncCalculations.HarmonicAnalysisAsync(System.Double,System.Int32,System.Func{System.Double,System.Numerics.Complex},System.Threading.CancellationToken)
  id: HarmonicAnalysisAsync(System.Double,System.Int32,System.Func{System.Double,System.Numerics.Complex},System.Threading.CancellationToken)
  parent: CircuitTool.Async.AsyncCalculations
  langs:
  - csharp
  - vb
  name: HarmonicAnalysisAsync(double, int, Func<double, Complex>, CancellationToken)
  nameWithType: AsyncCalculations.HarmonicAnalysisAsync(double, int, Func<double, Complex>, CancellationToken)
  fullName: CircuitTool.Async.AsyncCalculations.HarmonicAnalysisAsync(double, int, System.Func<double, System.Numerics.Complex>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Performance/AsyncCalculations.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: HarmonicAnalysisAsync
    path: ../src/Performance/AsyncCalculations.cs
    startLine: 96
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Async
  summary: Performs harmonic analysis asynchronously
  example: []
  syntax:
    content: public static Task<HarmonicAnalysis> HarmonicAnalysisAsync(double fundamentalFrequency, int harmonics, Func<double, Complex> calculator, CancellationToken cancellationToken = default)
    parameters:
    - id: fundamentalFrequency
      type: System.Double
      description: Fundamental frequency in Hz
    - id: harmonics
      type: System.Int32
      description: Number of harmonics to analyze
    - id: calculator
      type: System.Func{System.Double,System.Numerics.Complex}
      description: Function to calculate response at each harmonic
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{CircuitTool.Async.HarmonicAnalysis}
      description: Harmonic analysis results
    content.vb: Public Shared Function HarmonicAnalysisAsync(fundamentalFrequency As Double, harmonics As Integer, calculator As Func(Of Double, Complex), cancellationToken As CancellationToken = Nothing) As Task(Of HarmonicAnalysis)
  overload: CircuitTool.Async.AsyncCalculations.HarmonicAnalysisAsync*
  nameWithType.vb: AsyncCalculations.HarmonicAnalysisAsync(Double, Integer, Func(Of Double, Complex), CancellationToken)
  fullName.vb: CircuitTool.Async.AsyncCalculations.HarmonicAnalysisAsync(Double, Integer, System.Func(Of Double, System.Numerics.Complex), System.Threading.CancellationToken)
  name.vb: HarmonicAnalysisAsync(Double, Integer, Func(Of Double, Complex), CancellationToken)
- uid: CircuitTool.Async.AsyncCalculations.ThermalAnalysisAsync(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Double,System.Threading.CancellationToken)
  commentId: M:CircuitTool.Async.AsyncCalculations.ThermalAnalysisAsync(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Double,System.Threading.CancellationToken)
  id: ThermalAnalysisAsync(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Double,System.Threading.CancellationToken)
  parent: CircuitTool.Async.AsyncCalculations
  langs:
  - csharp
  - vb
  name: ThermalAnalysisAsync(double, double, double, double, int, double, CancellationToken)
  nameWithType: AsyncCalculations.ThermalAnalysisAsync(double, double, double, double, int, double, CancellationToken)
  fullName: CircuitTool.Async.AsyncCalculations.ThermalAnalysisAsync(double, double, double, double, int, double, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Performance/AsyncCalculations.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ThermalAnalysisAsync
    path: ../src/Performance/AsyncCalculations.cs
    startLine: 131
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Async
  summary: Performs thermal analysis with iterative calculations asynchronously
  example: []
  syntax:
    content: public static Task<ThermalResult> ThermalAnalysisAsync(double power, double thermalResistance, double ambientTemperature, double temperatureCoefficient, int maxIterations = 100, double tolerance = 1E-06, CancellationToken cancellationToken = default)
    parameters:
    - id: power
      type: System.Double
      description: Power dissipation in watts
    - id: thermalResistance
      type: System.Double
      description: Thermal resistance in °C/W
    - id: ambientTemperature
      type: System.Double
      description: Ambient temperature in °C
    - id: temperatureCoefficient
      type: System.Double
      description: Temperature coefficient
    - id: maxIterations
      type: System.Int32
      description: Maximum number of iterations
    - id: tolerance
      type: System.Double
      description: Convergence tolerance
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{CircuitTool.Async.ThermalResult}
      description: Thermal analysis results
    content.vb: Public Shared Function ThermalAnalysisAsync(power As Double, thermalResistance As Double, ambientTemperature As Double, temperatureCoefficient As Double, maxIterations As Integer = 100, tolerance As Double = 1E-06, cancellationToken As CancellationToken = Nothing) As Task(Of ThermalResult)
  overload: CircuitTool.Async.AsyncCalculations.ThermalAnalysisAsync*
  nameWithType.vb: AsyncCalculations.ThermalAnalysisAsync(Double, Double, Double, Double, Integer, Double, CancellationToken)
  fullName.vb: CircuitTool.Async.AsyncCalculations.ThermalAnalysisAsync(Double, Double, Double, Double, Integer, Double, System.Threading.CancellationToken)
  name.vb: ThermalAnalysisAsync(Double, Double, Double, Double, Integer, Double, CancellationToken)
references:
- uid: CircuitTool.Async
  commentId: N:CircuitTool.Async
  href: CircuitTool.html
  name: CircuitTool.Async
  nameWithType: CircuitTool.Async
  fullName: CircuitTool.Async
  spec.csharp:
  - uid: CircuitTool
    name: CircuitTool
    href: CircuitTool.html
  - name: .
  - uid: CircuitTool.Async
    name: Async
    href: CircuitTool.Async.html
  spec.vb:
  - uid: CircuitTool
    name: CircuitTool
    href: CircuitTool.html
  - name: .
  - uid: CircuitTool.Async
    name: Async
    href: CircuitTool.Async.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CircuitTool.Async.AsyncCalculations.MonteCarloAnalysisAsync*
  commentId: Overload:CircuitTool.Async.AsyncCalculations.MonteCarloAnalysisAsync
  href: CircuitTool.Async.AsyncCalculations.html#CircuitTool_Async_AsyncCalculations_MonteCarloAnalysisAsync_System_Double___System_Double___System_Int32_System_Func_System_Double___System_Double__System_Threading_CancellationToken_
  name: MonteCarloAnalysisAsync
  nameWithType: AsyncCalculations.MonteCarloAnalysisAsync
  fullName: CircuitTool.Async.AsyncCalculations.MonteCarloAnalysisAsync
- uid: System.Double[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double[]
  nameWithType: double[]
  fullName: double[]
  nameWithType.vb: Double()
  fullName.vb: Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Func{System.Double[],System.Double}
  commentId: T:System.Func{System.Double[],System.Double}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<double[], double>
  nameWithType: Func<double[], double>
  fullName: System.Func<double[], double>
  nameWithType.vb: Func(Of Double(), Double)
  fullName.vb: System.Func(Of Double(), Double)
  name.vb: Func(Of Double(), Double)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{CircuitTool.Async.MonteCarloResult}
  commentId: T:System.Threading.Tasks.Task{CircuitTool.Async.MonteCarloResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<MonteCarloResult>
  nameWithType: Task<MonteCarloResult>
  fullName: System.Threading.Tasks.Task<CircuitTool.Async.MonteCarloResult>
  nameWithType.vb: Task(Of MonteCarloResult)
  fullName.vb: System.Threading.Tasks.Task(Of CircuitTool.Async.MonteCarloResult)
  name.vb: Task(Of MonteCarloResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: CircuitTool.Async.MonteCarloResult
    name: MonteCarloResult
    href: CircuitTool.Async.MonteCarloResult.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: CircuitTool.Async.MonteCarloResult
    name: MonteCarloResult
    href: CircuitTool.Async.MonteCarloResult.html
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: CircuitTool.Async.AsyncCalculations.FrequencySweepAsync*
  commentId: Overload:CircuitTool.Async.AsyncCalculations.FrequencySweepAsync
  href: CircuitTool.Async.AsyncCalculations.html#CircuitTool_Async_AsyncCalculations_FrequencySweepAsync_System_Double_System_Double_System_Int32_System_Func_System_Double_System_Numerics_Complex__System_Threading_CancellationToken_
  name: FrequencySweepAsync
  nameWithType: AsyncCalculations.FrequencySweepAsync
  fullName: CircuitTool.Async.AsyncCalculations.FrequencySweepAsync
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.Func{System.Double,System.Numerics.Complex}
  commentId: T:System.Func{System.Double,System.Numerics.Complex}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<double, Complex>
  nameWithType: Func<double, Complex>
  fullName: System.Func<double, System.Numerics.Complex>
  nameWithType.vb: Func(Of Double, Complex)
  fullName.vb: System.Func(Of Double, System.Numerics.Complex)
  name.vb: Func(Of Double, Complex)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Numerics.Complex
    name: Complex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.complex
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Numerics.Complex
    name: Complex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.complex
  - name: )
- uid: System.Threading.Tasks.Task{CircuitTool.Async.FrequencyResponse}
  commentId: T:System.Threading.Tasks.Task{CircuitTool.Async.FrequencyResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<FrequencyResponse>
  nameWithType: Task<FrequencyResponse>
  fullName: System.Threading.Tasks.Task<CircuitTool.Async.FrequencyResponse>
  nameWithType.vb: Task(Of FrequencyResponse)
  fullName.vb: System.Threading.Tasks.Task(Of CircuitTool.Async.FrequencyResponse)
  name.vb: Task(Of FrequencyResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: CircuitTool.Async.FrequencyResponse
    name: FrequencyResponse
    href: CircuitTool.Async.FrequencyResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: CircuitTool.Async.FrequencyResponse
    name: FrequencyResponse
    href: CircuitTool.Async.FrequencyResponse.html
  - name: )
- uid: CircuitTool.Async.AsyncCalculations.HarmonicAnalysisAsync*
  commentId: Overload:CircuitTool.Async.AsyncCalculations.HarmonicAnalysisAsync
  href: CircuitTool.Async.AsyncCalculations.html#CircuitTool_Async_AsyncCalculations_HarmonicAnalysisAsync_System_Double_System_Int32_System_Func_System_Double_System_Numerics_Complex__System_Threading_CancellationToken_
  name: HarmonicAnalysisAsync
  nameWithType: AsyncCalculations.HarmonicAnalysisAsync
  fullName: CircuitTool.Async.AsyncCalculations.HarmonicAnalysisAsync
- uid: System.Threading.Tasks.Task{CircuitTool.Async.HarmonicAnalysis}
  commentId: T:System.Threading.Tasks.Task{CircuitTool.Async.HarmonicAnalysis}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<HarmonicAnalysis>
  nameWithType: Task<HarmonicAnalysis>
  fullName: System.Threading.Tasks.Task<CircuitTool.Async.HarmonicAnalysis>
  nameWithType.vb: Task(Of HarmonicAnalysis)
  fullName.vb: System.Threading.Tasks.Task(Of CircuitTool.Async.HarmonicAnalysis)
  name.vb: Task(Of HarmonicAnalysis)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: CircuitTool.Async.HarmonicAnalysis
    name: HarmonicAnalysis
    href: CircuitTool.Async.HarmonicAnalysis.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: CircuitTool.Async.HarmonicAnalysis
    name: HarmonicAnalysis
    href: CircuitTool.Async.HarmonicAnalysis.html
  - name: )
- uid: CircuitTool.Async.AsyncCalculations.ThermalAnalysisAsync*
  commentId: Overload:CircuitTool.Async.AsyncCalculations.ThermalAnalysisAsync
  href: CircuitTool.Async.AsyncCalculations.html#CircuitTool_Async_AsyncCalculations_ThermalAnalysisAsync_System_Double_System_Double_System_Double_System_Double_System_Int32_System_Double_System_Threading_CancellationToken_
  name: ThermalAnalysisAsync
  nameWithType: AsyncCalculations.ThermalAnalysisAsync
  fullName: CircuitTool.Async.AsyncCalculations.ThermalAnalysisAsync
- uid: System.Threading.Tasks.Task{CircuitTool.Async.ThermalResult}
  commentId: T:System.Threading.Tasks.Task{CircuitTool.Async.ThermalResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ThermalResult>
  nameWithType: Task<ThermalResult>
  fullName: System.Threading.Tasks.Task<CircuitTool.Async.ThermalResult>
  nameWithType.vb: Task(Of ThermalResult)
  fullName.vb: System.Threading.Tasks.Task(Of CircuitTool.Async.ThermalResult)
  name.vb: Task(Of ThermalResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: CircuitTool.Async.ThermalResult
    name: ThermalResult
    href: CircuitTool.Async.ThermalResult.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: CircuitTool.Async.ThermalResult
    name: ThermalResult
    href: CircuitTool.Async.ThermalResult.html
  - name: )
