### YamlMime:ManagedReference
items:
- uid: CircuitTool.Units.Voltage
  commentId: T:CircuitTool.Units.Voltage
  id: Voltage
  parent: CircuitTool.Units
  children:
  - CircuitTool.Units.Voltage.#ctor(System.Double,CircuitTool.Units.VoltageUnit)
  - CircuitTool.Units.Voltage.CompareTo(CircuitTool.Units.Voltage)
  - CircuitTool.Units.Voltage.Equals(CircuitTool.Units.Voltage)
  - CircuitTool.Units.Voltage.Equals(System.Object)
  - CircuitTool.Units.Voltage.GetHashCode
  - CircuitTool.Units.Voltage.GetValue(CircuitTool.Units.VoltageUnit)
  - CircuitTool.Units.Voltage.Kilovolts
  - CircuitTool.Units.Voltage.Millivolts
  - CircuitTool.Units.Voltage.ToString
  - CircuitTool.Units.Voltage.ToString(CircuitTool.Units.VoltageUnit)
  - CircuitTool.Units.Voltage.Volts
  - CircuitTool.Units.Voltage.op_Addition(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  - CircuitTool.Units.Voltage.op_Division(CircuitTool.Units.Voltage,System.Double)
  - CircuitTool.Units.Voltage.op_Equality(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  - CircuitTool.Units.Voltage.op_GreaterThan(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  - CircuitTool.Units.Voltage.op_GreaterThanOrEqual(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  - CircuitTool.Units.Voltage.op_Implicit(CircuitTool.Units.Voltage)~System.Double
  - CircuitTool.Units.Voltage.op_Implicit(System.Double)~CircuitTool.Units.Voltage
  - CircuitTool.Units.Voltage.op_Inequality(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  - CircuitTool.Units.Voltage.op_LessThan(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  - CircuitTool.Units.Voltage.op_LessThanOrEqual(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  - CircuitTool.Units.Voltage.op_Multiply(CircuitTool.Units.Voltage,System.Double)
  - CircuitTool.Units.Voltage.op_Subtraction(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  langs:
  - csharp
  - vb
  name: Voltage
  nameWithType: Voltage
  fullName: CircuitTool.Units.Voltage
  type: Struct
  source:
    remote:
      path: src/Units/VoltageUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Voltage
    path: ../src/Units/VoltageUnit.cs
    startLine: 27
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  summary: Represents a strongly-typed voltage measurement with automatic unit conversion
  example: []
  syntax:
    content: 'public readonly struct Voltage : IEquatable<Voltage>, IComparable<Voltage>'
    content.vb: Public Structure Voltage Implements IEquatable(Of Voltage), IComparable(Of Voltage)
  implements:
  - System.IEquatable{CircuitTool.Units.Voltage}
  - System.IComparable{CircuitTool.Units.Voltage}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: CircuitTool.Units.Voltage.#ctor(System.Double,CircuitTool.Units.VoltageUnit)
  commentId: M:CircuitTool.Units.Voltage.#ctor(System.Double,CircuitTool.Units.VoltageUnit)
  id: '#ctor(System.Double,CircuitTool.Units.VoltageUnit)'
  parent: CircuitTool.Units.Voltage
  langs:
  - csharp
  - vb
  name: Voltage(double, VoltageUnit)
  nameWithType: Voltage.Voltage(double, VoltageUnit)
  fullName: CircuitTool.Units.Voltage.Voltage(double, CircuitTool.Units.VoltageUnit)
  type: Constructor
  source:
    remote:
      path: src/Units/VoltageUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: .ctor
    path: ../src/Units/VoltageUnit.cs
    startLine: 36
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  summary: Creates a new voltage measurement
  example: []
  syntax:
    content: public Voltage(double value, VoltageUnit unit)
    parameters:
    - id: value
      type: System.Double
      description: The value in the specified unit
    - id: unit
      type: CircuitTool.Units.VoltageUnit
      description: The unit of measurement
    content.vb: Public Sub New(value As Double, unit As VoltageUnit)
  overload: CircuitTool.Units.Voltage.#ctor*
  nameWithType.vb: Voltage.New(Double, VoltageUnit)
  fullName.vb: CircuitTool.Units.Voltage.New(Double, CircuitTool.Units.VoltageUnit)
  name.vb: New(Double, VoltageUnit)
- uid: CircuitTool.Units.Voltage.Volts
  commentId: P:CircuitTool.Units.Voltage.Volts
  id: Volts
  parent: CircuitTool.Units.Voltage
  langs:
  - csharp
  - vb
  name: Volts
  nameWithType: Voltage.Volts
  fullName: CircuitTool.Units.Voltage.Volts
  type: Property
  source:
    remote:
      path: src/Units/VoltageUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Volts
    path: ../src/Units/VoltageUnit.cs
    startLine: 44
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  summary: Gets the voltage value in volts
  example: []
  syntax:
    content: public double Volts { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Volts As Double
  overload: CircuitTool.Units.Voltage.Volts*
- uid: CircuitTool.Units.Voltage.Millivolts
  commentId: P:CircuitTool.Units.Voltage.Millivolts
  id: Millivolts
  parent: CircuitTool.Units.Voltage
  langs:
  - csharp
  - vb
  name: Millivolts
  nameWithType: Voltage.Millivolts
  fullName: CircuitTool.Units.Voltage.Millivolts
  type: Property
  source:
    remote:
      path: src/Units/VoltageUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Millivolts
    path: ../src/Units/VoltageUnit.cs
    startLine: 49
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  summary: Gets the voltage value in millivolts
  example: []
  syntax:
    content: public double Millivolts { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Millivolts As Double
  overload: CircuitTool.Units.Voltage.Millivolts*
- uid: CircuitTool.Units.Voltage.Kilovolts
  commentId: P:CircuitTool.Units.Voltage.Kilovolts
  id: Kilovolts
  parent: CircuitTool.Units.Voltage
  langs:
  - csharp
  - vb
  name: Kilovolts
  nameWithType: Voltage.Kilovolts
  fullName: CircuitTool.Units.Voltage.Kilovolts
  type: Property
  source:
    remote:
      path: src/Units/VoltageUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Kilovolts
    path: ../src/Units/VoltageUnit.cs
    startLine: 54
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  summary: Gets the voltage value in kilovolts
  example: []
  syntax:
    content: public double Kilovolts { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Kilovolts As Double
  overload: CircuitTool.Units.Voltage.Kilovolts*
- uid: CircuitTool.Units.Voltage.GetValue(CircuitTool.Units.VoltageUnit)
  commentId: M:CircuitTool.Units.Voltage.GetValue(CircuitTool.Units.VoltageUnit)
  id: GetValue(CircuitTool.Units.VoltageUnit)
  parent: CircuitTool.Units.Voltage
  langs:
  - csharp
  - vb
  name: GetValue(VoltageUnit)
  nameWithType: Voltage.GetValue(VoltageUnit)
  fullName: CircuitTool.Units.Voltage.GetValue(CircuitTool.Units.VoltageUnit)
  type: Method
  source:
    remote:
      path: src/Units/VoltageUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: GetValue
    path: ../src/Units/VoltageUnit.cs
    startLine: 61
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  summary: Gets the voltage value in the specified unit
  example: []
  syntax:
    content: public double GetValue(VoltageUnit unit)
    parameters:
    - id: unit
      type: CircuitTool.Units.VoltageUnit
      description: The desired unit
    return:
      type: System.Double
      description: The voltage value in the specified unit
    content.vb: Public Function GetValue(unit As VoltageUnit) As Double
  overload: CircuitTool.Units.Voltage.GetValue*
- uid: CircuitTool.Units.Voltage.op_Addition(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  commentId: M:CircuitTool.Units.Voltage.op_Addition(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  id: op_Addition(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  parent: CircuitTool.Units.Voltage
  langs:
  - csharp
  - vb
  name: operator +(Voltage, Voltage)
  nameWithType: Voltage.operator +(Voltage, Voltage)
  fullName: CircuitTool.Units.Voltage.operator +(CircuitTool.Units.Voltage, CircuitTool.Units.Voltage)
  type: Operator
  source:
    remote:
      path: src/Units/VoltageUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Addition
    path: ../src/Units/VoltageUnit.cs
    startLine: 90
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  syntax:
    content: public static Voltage operator +(Voltage left, Voltage right)
    parameters:
    - id: left
      type: CircuitTool.Units.Voltage
    - id: right
      type: CircuitTool.Units.Voltage
    return:
      type: CircuitTool.Units.Voltage
    content.vb: Public Shared Operator +(left As Voltage, right As Voltage) As Voltage
  overload: CircuitTool.Units.Voltage.op_Addition*
  nameWithType.vb: Voltage.+(Voltage, Voltage)
  fullName.vb: CircuitTool.Units.Voltage.+(CircuitTool.Units.Voltage, CircuitTool.Units.Voltage)
  name.vb: +(Voltage, Voltage)
- uid: CircuitTool.Units.Voltage.op_Subtraction(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  commentId: M:CircuitTool.Units.Voltage.op_Subtraction(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  id: op_Subtraction(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  parent: CircuitTool.Units.Voltage
  langs:
  - csharp
  - vb
  name: operator -(Voltage, Voltage)
  nameWithType: Voltage.operator -(Voltage, Voltage)
  fullName: CircuitTool.Units.Voltage.operator -(CircuitTool.Units.Voltage, CircuitTool.Units.Voltage)
  type: Operator
  source:
    remote:
      path: src/Units/VoltageUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Subtraction
    path: ../src/Units/VoltageUnit.cs
    startLine: 91
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  syntax:
    content: public static Voltage operator -(Voltage left, Voltage right)
    parameters:
    - id: left
      type: CircuitTool.Units.Voltage
    - id: right
      type: CircuitTool.Units.Voltage
    return:
      type: CircuitTool.Units.Voltage
    content.vb: Public Shared Operator -(left As Voltage, right As Voltage) As Voltage
  overload: CircuitTool.Units.Voltage.op_Subtraction*
  nameWithType.vb: Voltage.-(Voltage, Voltage)
  fullName.vb: CircuitTool.Units.Voltage.-(CircuitTool.Units.Voltage, CircuitTool.Units.Voltage)
  name.vb: -(Voltage, Voltage)
- uid: CircuitTool.Units.Voltage.op_Multiply(CircuitTool.Units.Voltage,System.Double)
  commentId: M:CircuitTool.Units.Voltage.op_Multiply(CircuitTool.Units.Voltage,System.Double)
  id: op_Multiply(CircuitTool.Units.Voltage,System.Double)
  parent: CircuitTool.Units.Voltage
  langs:
  - csharp
  - vb
  name: operator *(Voltage, double)
  nameWithType: Voltage.operator *(Voltage, double)
  fullName: CircuitTool.Units.Voltage.operator *(CircuitTool.Units.Voltage, double)
  type: Operator
  source:
    remote:
      path: src/Units/VoltageUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Multiply
    path: ../src/Units/VoltageUnit.cs
    startLine: 92
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  syntax:
    content: public static Voltage operator *(Voltage voltage, double multiplier)
    parameters:
    - id: voltage
      type: CircuitTool.Units.Voltage
    - id: multiplier
      type: System.Double
    return:
      type: CircuitTool.Units.Voltage
    content.vb: Public Shared Operator *(voltage As Voltage, multiplier As Double) As Voltage
  overload: CircuitTool.Units.Voltage.op_Multiply*
  nameWithType.vb: Voltage.*(Voltage, Double)
  fullName.vb: CircuitTool.Units.Voltage.*(CircuitTool.Units.Voltage, Double)
  name.vb: '*(Voltage, Double)'
- uid: CircuitTool.Units.Voltage.op_Division(CircuitTool.Units.Voltage,System.Double)
  commentId: M:CircuitTool.Units.Voltage.op_Division(CircuitTool.Units.Voltage,System.Double)
  id: op_Division(CircuitTool.Units.Voltage,System.Double)
  parent: CircuitTool.Units.Voltage
  langs:
  - csharp
  - vb
  name: operator /(Voltage, double)
  nameWithType: Voltage.operator /(Voltage, double)
  fullName: CircuitTool.Units.Voltage.operator /(CircuitTool.Units.Voltage, double)
  type: Operator
  source:
    remote:
      path: src/Units/VoltageUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Division
    path: ../src/Units/VoltageUnit.cs
    startLine: 93
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  syntax:
    content: public static Voltage operator /(Voltage voltage, double divisor)
    parameters:
    - id: voltage
      type: CircuitTool.Units.Voltage
    - id: divisor
      type: System.Double
    return:
      type: CircuitTool.Units.Voltage
    content.vb: Public Shared Operator /(voltage As Voltage, divisor As Double) As Voltage
  overload: CircuitTool.Units.Voltage.op_Division*
  nameWithType.vb: Voltage./(Voltage, Double)
  fullName.vb: CircuitTool.Units.Voltage./(CircuitTool.Units.Voltage, Double)
  name.vb: /(Voltage, Double)
- uid: CircuitTool.Units.Voltage.op_Equality(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  commentId: M:CircuitTool.Units.Voltage.op_Equality(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  id: op_Equality(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  parent: CircuitTool.Units.Voltage
  langs:
  - csharp
  - vb
  name: operator ==(Voltage, Voltage)
  nameWithType: Voltage.operator ==(Voltage, Voltage)
  fullName: CircuitTool.Units.Voltage.operator ==(CircuitTool.Units.Voltage, CircuitTool.Units.Voltage)
  type: Operator
  source:
    remote:
      path: src/Units/VoltageUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Equality
    path: ../src/Units/VoltageUnit.cs
    startLine: 96
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  syntax:
    content: public static bool operator ==(Voltage left, Voltage right)
    parameters:
    - id: left
      type: CircuitTool.Units.Voltage
    - id: right
      type: CircuitTool.Units.Voltage
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As Voltage, right As Voltage) As Boolean
  overload: CircuitTool.Units.Voltage.op_Equality*
  nameWithType.vb: Voltage.=(Voltage, Voltage)
  fullName.vb: CircuitTool.Units.Voltage.=(CircuitTool.Units.Voltage, CircuitTool.Units.Voltage)
  name.vb: =(Voltage, Voltage)
- uid: CircuitTool.Units.Voltage.op_Inequality(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  commentId: M:CircuitTool.Units.Voltage.op_Inequality(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  id: op_Inequality(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  parent: CircuitTool.Units.Voltage
  langs:
  - csharp
  - vb
  name: operator !=(Voltage, Voltage)
  nameWithType: Voltage.operator !=(Voltage, Voltage)
  fullName: CircuitTool.Units.Voltage.operator !=(CircuitTool.Units.Voltage, CircuitTool.Units.Voltage)
  type: Operator
  source:
    remote:
      path: src/Units/VoltageUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Inequality
    path: ../src/Units/VoltageUnit.cs
    startLine: 97
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  syntax:
    content: public static bool operator !=(Voltage left, Voltage right)
    parameters:
    - id: left
      type: CircuitTool.Units.Voltage
    - id: right
      type: CircuitTool.Units.Voltage
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As Voltage, right As Voltage) As Boolean
  overload: CircuitTool.Units.Voltage.op_Inequality*
  nameWithType.vb: Voltage.<>(Voltage, Voltage)
  fullName.vb: CircuitTool.Units.Voltage.<>(CircuitTool.Units.Voltage, CircuitTool.Units.Voltage)
  name.vb: <>(Voltage, Voltage)
- uid: CircuitTool.Units.Voltage.op_LessThan(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  commentId: M:CircuitTool.Units.Voltage.op_LessThan(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  id: op_LessThan(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  parent: CircuitTool.Units.Voltage
  langs:
  - csharp
  - vb
  name: operator <(Voltage, Voltage)
  nameWithType: Voltage.operator <(Voltage, Voltage)
  fullName: CircuitTool.Units.Voltage.operator <(CircuitTool.Units.Voltage, CircuitTool.Units.Voltage)
  type: Operator
  source:
    remote:
      path: src/Units/VoltageUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_LessThan
    path: ../src/Units/VoltageUnit.cs
    startLine: 98
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  syntax:
    content: public static bool operator <(Voltage left, Voltage right)
    parameters:
    - id: left
      type: CircuitTool.Units.Voltage
    - id: right
      type: CircuitTool.Units.Voltage
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <(left As Voltage, right As Voltage) As Boolean
  overload: CircuitTool.Units.Voltage.op_LessThan*
  nameWithType.vb: Voltage.<(Voltage, Voltage)
  fullName.vb: CircuitTool.Units.Voltage.<(CircuitTool.Units.Voltage, CircuitTool.Units.Voltage)
  name.vb: <(Voltage, Voltage)
- uid: CircuitTool.Units.Voltage.op_GreaterThan(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  commentId: M:CircuitTool.Units.Voltage.op_GreaterThan(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  id: op_GreaterThan(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  parent: CircuitTool.Units.Voltage
  langs:
  - csharp
  - vb
  name: operator >(Voltage, Voltage)
  nameWithType: Voltage.operator >(Voltage, Voltage)
  fullName: CircuitTool.Units.Voltage.operator >(CircuitTool.Units.Voltage, CircuitTool.Units.Voltage)
  type: Operator
  source:
    remote:
      path: src/Units/VoltageUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_GreaterThan
    path: ../src/Units/VoltageUnit.cs
    startLine: 99
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  syntax:
    content: public static bool operator >(Voltage left, Voltage right)
    parameters:
    - id: left
      type: CircuitTool.Units.Voltage
    - id: right
      type: CircuitTool.Units.Voltage
    return:
      type: System.Boolean
    content.vb: Public Shared Operator >(left As Voltage, right As Voltage) As Boolean
  overload: CircuitTool.Units.Voltage.op_GreaterThan*
  nameWithType.vb: Voltage.>(Voltage, Voltage)
  fullName.vb: CircuitTool.Units.Voltage.>(CircuitTool.Units.Voltage, CircuitTool.Units.Voltage)
  name.vb: '>(Voltage, Voltage)'
- uid: CircuitTool.Units.Voltage.op_LessThanOrEqual(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  commentId: M:CircuitTool.Units.Voltage.op_LessThanOrEqual(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  id: op_LessThanOrEqual(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  parent: CircuitTool.Units.Voltage
  langs:
  - csharp
  - vb
  name: operator <=(Voltage, Voltage)
  nameWithType: Voltage.operator <=(Voltage, Voltage)
  fullName: CircuitTool.Units.Voltage.operator <=(CircuitTool.Units.Voltage, CircuitTool.Units.Voltage)
  type: Operator
  source:
    remote:
      path: src/Units/VoltageUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_LessThanOrEqual
    path: ../src/Units/VoltageUnit.cs
    startLine: 100
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  syntax:
    content: public static bool operator <=(Voltage left, Voltage right)
    parameters:
    - id: left
      type: CircuitTool.Units.Voltage
    - id: right
      type: CircuitTool.Units.Voltage
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <=(left As Voltage, right As Voltage) As Boolean
  overload: CircuitTool.Units.Voltage.op_LessThanOrEqual*
  nameWithType.vb: Voltage.<=(Voltage, Voltage)
  fullName.vb: CircuitTool.Units.Voltage.<=(CircuitTool.Units.Voltage, CircuitTool.Units.Voltage)
  name.vb: <=(Voltage, Voltage)
- uid: CircuitTool.Units.Voltage.op_GreaterThanOrEqual(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  commentId: M:CircuitTool.Units.Voltage.op_GreaterThanOrEqual(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  id: op_GreaterThanOrEqual(CircuitTool.Units.Voltage,CircuitTool.Units.Voltage)
  parent: CircuitTool.Units.Voltage
  langs:
  - csharp
  - vb
  name: operator >=(Voltage, Voltage)
  nameWithType: Voltage.operator >=(Voltage, Voltage)
  fullName: CircuitTool.Units.Voltage.operator >=(CircuitTool.Units.Voltage, CircuitTool.Units.Voltage)
  type: Operator
  source:
    remote:
      path: src/Units/VoltageUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_GreaterThanOrEqual
    path: ../src/Units/VoltageUnit.cs
    startLine: 101
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  syntax:
    content: public static bool operator >=(Voltage left, Voltage right)
    parameters:
    - id: left
      type: CircuitTool.Units.Voltage
    - id: right
      type: CircuitTool.Units.Voltage
    return:
      type: System.Boolean
    content.vb: Public Shared Operator >=(left As Voltage, right As Voltage) As Boolean
  overload: CircuitTool.Units.Voltage.op_GreaterThanOrEqual*
  nameWithType.vb: Voltage.>=(Voltage, Voltage)
  fullName.vb: CircuitTool.Units.Voltage.>=(CircuitTool.Units.Voltage, CircuitTool.Units.Voltage)
  name.vb: '>=(Voltage, Voltage)'
- uid: CircuitTool.Units.Voltage.op_Implicit(System.Double)~CircuitTool.Units.Voltage
  commentId: M:CircuitTool.Units.Voltage.op_Implicit(System.Double)~CircuitTool.Units.Voltage
  id: op_Implicit(System.Double)~CircuitTool.Units.Voltage
  parent: CircuitTool.Units.Voltage
  langs:
  - csharp
  - vb
  name: implicit operator Voltage(double)
  nameWithType: Voltage.implicit operator Voltage(double)
  fullName: CircuitTool.Units.Voltage.implicit operator CircuitTool.Units.Voltage(double)
  type: Operator
  source:
    remote:
      path: src/Units/VoltageUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Implicit
    path: ../src/Units/VoltageUnit.cs
    startLine: 104
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  syntax:
    content: public static implicit operator Voltage(double volts)
    parameters:
    - id: volts
      type: System.Double
    return:
      type: CircuitTool.Units.Voltage
    content.vb: Public Shared Widening Operator CType(volts As Double) As Voltage
  overload: CircuitTool.Units.Voltage.op_Implicit*
  nameWithType.vb: Voltage.CType(Double)
  fullName.vb: CircuitTool.Units.Voltage.CType(Double)
  name.vb: CType(Double)
- uid: CircuitTool.Units.Voltage.op_Implicit(CircuitTool.Units.Voltage)~System.Double
  commentId: M:CircuitTool.Units.Voltage.op_Implicit(CircuitTool.Units.Voltage)~System.Double
  id: op_Implicit(CircuitTool.Units.Voltage)~System.Double
  parent: CircuitTool.Units.Voltage
  langs:
  - csharp
  - vb
  name: implicit operator double(Voltage)
  nameWithType: Voltage.implicit operator double(Voltage)
  fullName: CircuitTool.Units.Voltage.implicit operator double(CircuitTool.Units.Voltage)
  type: Operator
  source:
    remote:
      path: src/Units/VoltageUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Implicit
    path: ../src/Units/VoltageUnit.cs
    startLine: 105
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  syntax:
    content: public static implicit operator double(Voltage voltage)
    parameters:
    - id: voltage
      type: CircuitTool.Units.Voltage
    return:
      type: System.Double
    content.vb: Public Shared Widening Operator CType(voltage As Voltage) As Double
  overload: CircuitTool.Units.Voltage.op_Implicit*
  nameWithType.vb: Voltage.CType(Voltage)
  fullName.vb: CircuitTool.Units.Voltage.CType(CircuitTool.Units.Voltage)
  name.vb: CType(Voltage)
- uid: CircuitTool.Units.Voltage.Equals(CircuitTool.Units.Voltage)
  commentId: M:CircuitTool.Units.Voltage.Equals(CircuitTool.Units.Voltage)
  id: Equals(CircuitTool.Units.Voltage)
  parent: CircuitTool.Units.Voltage
  langs:
  - csharp
  - vb
  name: Equals(Voltage)
  nameWithType: Voltage.Equals(Voltage)
  fullName: CircuitTool.Units.Voltage.Equals(CircuitTool.Units.Voltage)
  type: Method
  source:
    remote:
      path: src/Units/VoltageUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Equals
    path: ../src/Units/VoltageUnit.cs
    startLine: 107
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(Voltage other)
    parameters:
    - id: other
      type: CircuitTool.Units.Voltage
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As Voltage) As Boolean
  overload: CircuitTool.Units.Voltage.Equals*
  implements:
  - System.IEquatable{CircuitTool.Units.Voltage}.Equals(CircuitTool.Units.Voltage)
- uid: CircuitTool.Units.Voltage.Equals(System.Object)
  commentId: M:CircuitTool.Units.Voltage.Equals(System.Object)
  id: Equals(System.Object)
  parent: CircuitTool.Units.Voltage
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: Voltage.Equals(object?)
  fullName: CircuitTool.Units.Voltage.Equals(object?)
  type: Method
  source:
    remote:
      path: src/Units/VoltageUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Equals
    path: ../src/Units/VoltageUnit.cs
    startLine: 108
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: CircuitTool.Units.Voltage.Equals*
  nameWithType.vb: Voltage.Equals(Object)
  fullName.vb: CircuitTool.Units.Voltage.Equals(Object)
  name.vb: Equals(Object)
- uid: CircuitTool.Units.Voltage.GetHashCode
  commentId: M:CircuitTool.Units.Voltage.GetHashCode
  id: GetHashCode
  parent: CircuitTool.Units.Voltage
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Voltage.GetHashCode()
  fullName: CircuitTool.Units.Voltage.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Units/VoltageUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: GetHashCode
    path: ../src/Units/VoltageUnit.cs
    startLine: 109
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: CircuitTool.Units.Voltage.GetHashCode*
- uid: CircuitTool.Units.Voltage.CompareTo(CircuitTool.Units.Voltage)
  commentId: M:CircuitTool.Units.Voltage.CompareTo(CircuitTool.Units.Voltage)
  id: CompareTo(CircuitTool.Units.Voltage)
  parent: CircuitTool.Units.Voltage
  langs:
  - csharp
  - vb
  name: CompareTo(Voltage)
  nameWithType: Voltage.CompareTo(Voltage)
  fullName: CircuitTool.Units.Voltage.CompareTo(CircuitTool.Units.Voltage)
  type: Method
  source:
    remote:
      path: src/Units/VoltageUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: CompareTo
    path: ../src/Units/VoltageUnit.cs
    startLine: 110
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  summary: Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
  example: []
  syntax:
    content: public int CompareTo(Voltage other)
    parameters:
    - id: other
      type: CircuitTool.Units.Voltage
      description: An object to compare with this instance.
    return:
      type: System.Int32
      description: >-
        A value that indicates the relative order of the objects being compared. The return value has these meanings:  

         <table><thead><tr><th class="term"> Value</th><th class="description"> Meaning</th></tr></thead><tbody><tr><td class="term"> Less than zero</td><td class="description"> This instance precedes <code class="paramref">other</code> in the sort order.</td></tr><tr><td class="term"> Zero</td><td class="description"> This instance occurs in the same position in the sort order as <code class="paramref">other</code>.</td></tr><tr><td class="term"> Greater than zero</td><td class="description"> This instance follows <code class="paramref">other</code> in the sort order.</td></tr></tbody></table>
    content.vb: Public Function CompareTo(other As Voltage) As Integer
  overload: CircuitTool.Units.Voltage.CompareTo*
  implements:
  - System.IComparable{CircuitTool.Units.Voltage}.CompareTo(CircuitTool.Units.Voltage)
- uid: CircuitTool.Units.Voltage.ToString
  commentId: M:CircuitTool.Units.Voltage.ToString
  id: ToString
  parent: CircuitTool.Units.Voltage
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Voltage.ToString()
  fullName: CircuitTool.Units.Voltage.ToString()
  type: Method
  source:
    remote:
      path: src/Units/VoltageUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ToString
    path: ../src/Units/VoltageUnit.cs
    startLine: 112
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  summary: Returns the fully qualified type name of this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The fully qualified type name.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: CircuitTool.Units.Voltage.ToString*
- uid: CircuitTool.Units.Voltage.ToString(CircuitTool.Units.VoltageUnit)
  commentId: M:CircuitTool.Units.Voltage.ToString(CircuitTool.Units.VoltageUnit)
  id: ToString(CircuitTool.Units.VoltageUnit)
  parent: CircuitTool.Units.Voltage
  langs:
  - csharp
  - vb
  name: ToString(VoltageUnit)
  nameWithType: Voltage.ToString(VoltageUnit)
  fullName: CircuitTool.Units.Voltage.ToString(CircuitTool.Units.VoltageUnit)
  type: Method
  source:
    remote:
      path: src/Units/VoltageUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ToString
    path: ../src/Units/VoltageUnit.cs
    startLine: 113
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  syntax:
    content: public string ToString(VoltageUnit unit)
    parameters:
    - id: unit
      type: CircuitTool.Units.VoltageUnit
    return:
      type: System.String
    content.vb: Public Function ToString(unit As VoltageUnit) As String
  overload: CircuitTool.Units.Voltage.ToString*
references:
- uid: CircuitTool.Units
  commentId: N:CircuitTool.Units
  href: CircuitTool.html
  name: CircuitTool.Units
  nameWithType: CircuitTool.Units
  fullName: CircuitTool.Units
  spec.csharp:
  - uid: CircuitTool
    name: CircuitTool
    href: CircuitTool.html
  - name: .
  - uid: CircuitTool.Units
    name: Units
    href: CircuitTool.Units.html
  spec.vb:
  - uid: CircuitTool
    name: CircuitTool
    href: CircuitTool.html
  - name: .
  - uid: CircuitTool.Units
    name: Units
    href: CircuitTool.Units.html
- uid: System.IEquatable{CircuitTool.Units.Voltage}
  commentId: T:System.IEquatable{CircuitTool.Units.Voltage}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Voltage>
  nameWithType: IEquatable<Voltage>
  fullName: System.IEquatable<CircuitTool.Units.Voltage>
  nameWithType.vb: IEquatable(Of Voltage)
  fullName.vb: System.IEquatable(Of CircuitTool.Units.Voltage)
  name.vb: IEquatable(Of Voltage)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: CircuitTool.Units.Voltage
    name: Voltage
    href: CircuitTool.Units.Voltage.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: CircuitTool.Units.Voltage
    name: Voltage
    href: CircuitTool.Units.Voltage.html
  - name: )
- uid: System.IComparable{CircuitTool.Units.Voltage}
  commentId: T:System.IComparable{CircuitTool.Units.Voltage}
  parent: System
  definition: System.IComparable`1
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  name: IComparable<Voltage>
  nameWithType: IComparable<Voltage>
  fullName: System.IComparable<CircuitTool.Units.Voltage>
  nameWithType.vb: IComparable(Of Voltage)
  fullName.vb: System.IComparable(Of CircuitTool.Units.Voltage)
  name.vb: IComparable(Of Voltage)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - uid: CircuitTool.Units.Voltage
    name: Voltage
    href: CircuitTool.Units.Voltage.html
  - name: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - uid: CircuitTool.Units.Voltage
    name: Voltage
    href: CircuitTool.Units.Voltage.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: CircuitTool.Units.Voltage.#ctor*
  commentId: Overload:CircuitTool.Units.Voltage.#ctor
  href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage__ctor_System_Double_CircuitTool_Units_VoltageUnit_
  name: Voltage
  nameWithType: Voltage.Voltage
  fullName: CircuitTool.Units.Voltage.Voltage
  nameWithType.vb: Voltage.New
  fullName.vb: CircuitTool.Units.Voltage.New
  name.vb: New
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: CircuitTool.Units.VoltageUnit
  commentId: T:CircuitTool.Units.VoltageUnit
  parent: CircuitTool.Units
  href: CircuitTool.Units.VoltageUnit.html
  name: VoltageUnit
  nameWithType: VoltageUnit
  fullName: CircuitTool.Units.VoltageUnit
- uid: CircuitTool.Units.Voltage.Volts*
  commentId: Overload:CircuitTool.Units.Voltage.Volts
  href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_Volts
  name: Volts
  nameWithType: Voltage.Volts
  fullName: CircuitTool.Units.Voltage.Volts
- uid: CircuitTool.Units.Voltage.Millivolts*
  commentId: Overload:CircuitTool.Units.Voltage.Millivolts
  href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_Millivolts
  name: Millivolts
  nameWithType: Voltage.Millivolts
  fullName: CircuitTool.Units.Voltage.Millivolts
- uid: CircuitTool.Units.Voltage.Kilovolts*
  commentId: Overload:CircuitTool.Units.Voltage.Kilovolts
  href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_Kilovolts
  name: Kilovolts
  nameWithType: Voltage.Kilovolts
  fullName: CircuitTool.Units.Voltage.Kilovolts
- uid: CircuitTool.Units.Voltage.GetValue*
  commentId: Overload:CircuitTool.Units.Voltage.GetValue
  href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_GetValue_CircuitTool_Units_VoltageUnit_
  name: GetValue
  nameWithType: Voltage.GetValue
  fullName: CircuitTool.Units.Voltage.GetValue
- uid: CircuitTool.Units.Voltage.op_Addition*
  commentId: Overload:CircuitTool.Units.Voltage.op_Addition
  href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_op_Addition_CircuitTool_Units_Voltage_CircuitTool_Units_Voltage_
  name: operator +
  nameWithType: Voltage.operator +
  fullName: CircuitTool.Units.Voltage.operator +
  nameWithType.vb: Voltage.+
  fullName.vb: CircuitTool.Units.Voltage.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.Units.Voltage.op_Addition*
    name: +
    href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_op_Addition_CircuitTool_Units_Voltage_CircuitTool_Units_Voltage_
- uid: CircuitTool.Units.Voltage
  commentId: T:CircuitTool.Units.Voltage
  parent: CircuitTool.Units
  href: CircuitTool.Units.Voltage.html
  name: Voltage
  nameWithType: Voltage
  fullName: CircuitTool.Units.Voltage
- uid: CircuitTool.Units.Voltage.op_Subtraction*
  commentId: Overload:CircuitTool.Units.Voltage.op_Subtraction
  href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_op_Subtraction_CircuitTool_Units_Voltage_CircuitTool_Units_Voltage_
  name: operator -
  nameWithType: Voltage.operator -
  fullName: CircuitTool.Units.Voltage.operator -
  nameWithType.vb: Voltage.-
  fullName.vb: CircuitTool.Units.Voltage.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.Units.Voltage.op_Subtraction*
    name: '-'
    href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_op_Subtraction_CircuitTool_Units_Voltage_CircuitTool_Units_Voltage_
- uid: CircuitTool.Units.Voltage.op_Multiply*
  commentId: Overload:CircuitTool.Units.Voltage.op_Multiply
  href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_op_Multiply_CircuitTool_Units_Voltage_System_Double_
  name: operator *
  nameWithType: Voltage.operator *
  fullName: CircuitTool.Units.Voltage.operator *
  nameWithType.vb: Voltage.*
  fullName.vb: CircuitTool.Units.Voltage.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.Units.Voltage.op_Multiply*
    name: '*'
    href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_op_Multiply_CircuitTool_Units_Voltage_System_Double_
- uid: CircuitTool.Units.Voltage.op_Division*
  commentId: Overload:CircuitTool.Units.Voltage.op_Division
  href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_op_Division_CircuitTool_Units_Voltage_System_Double_
  name: operator /
  nameWithType: Voltage.operator /
  fullName: CircuitTool.Units.Voltage.operator /
  nameWithType.vb: Voltage./
  fullName.vb: CircuitTool.Units.Voltage./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.Units.Voltage.op_Division*
    name: /
    href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_op_Division_CircuitTool_Units_Voltage_System_Double_
- uid: CircuitTool.Units.Voltage.op_Equality*
  commentId: Overload:CircuitTool.Units.Voltage.op_Equality
  href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_op_Equality_CircuitTool_Units_Voltage_CircuitTool_Units_Voltage_
  name: operator ==
  nameWithType: Voltage.operator ==
  fullName: CircuitTool.Units.Voltage.operator ==
  nameWithType.vb: Voltage.=
  fullName.vb: CircuitTool.Units.Voltage.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.Units.Voltage.op_Equality*
    name: ==
    href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_op_Equality_CircuitTool_Units_Voltage_CircuitTool_Units_Voltage_
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: CircuitTool.Units.Voltage.op_Inequality*
  commentId: Overload:CircuitTool.Units.Voltage.op_Inequality
  href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_op_Inequality_CircuitTool_Units_Voltage_CircuitTool_Units_Voltage_
  name: operator !=
  nameWithType: Voltage.operator !=
  fullName: CircuitTool.Units.Voltage.operator !=
  nameWithType.vb: Voltage.<>
  fullName.vb: CircuitTool.Units.Voltage.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.Units.Voltage.op_Inequality*
    name: '!='
    href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_op_Inequality_CircuitTool_Units_Voltage_CircuitTool_Units_Voltage_
- uid: CircuitTool.Units.Voltage.op_LessThan*
  commentId: Overload:CircuitTool.Units.Voltage.op_LessThan
  href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_op_LessThan_CircuitTool_Units_Voltage_CircuitTool_Units_Voltage_
  name: operator <
  nameWithType: Voltage.operator <
  fullName: CircuitTool.Units.Voltage.operator <
  nameWithType.vb: Voltage.<
  fullName.vb: CircuitTool.Units.Voltage.<
  name.vb: <
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.Units.Voltage.op_LessThan*
    name: <
    href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_op_LessThan_CircuitTool_Units_Voltage_CircuitTool_Units_Voltage_
- uid: CircuitTool.Units.Voltage.op_GreaterThan*
  commentId: Overload:CircuitTool.Units.Voltage.op_GreaterThan
  href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_op_GreaterThan_CircuitTool_Units_Voltage_CircuitTool_Units_Voltage_
  name: operator >
  nameWithType: Voltage.operator >
  fullName: CircuitTool.Units.Voltage.operator >
  nameWithType.vb: Voltage.>
  fullName.vb: CircuitTool.Units.Voltage.>
  name.vb: '>'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.Units.Voltage.op_GreaterThan*
    name: '>'
    href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_op_GreaterThan_CircuitTool_Units_Voltage_CircuitTool_Units_Voltage_
- uid: CircuitTool.Units.Voltage.op_LessThanOrEqual*
  commentId: Overload:CircuitTool.Units.Voltage.op_LessThanOrEqual
  href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_op_LessThanOrEqual_CircuitTool_Units_Voltage_CircuitTool_Units_Voltage_
  name: operator <=
  nameWithType: Voltage.operator <=
  fullName: CircuitTool.Units.Voltage.operator <=
  nameWithType.vb: Voltage.<=
  fullName.vb: CircuitTool.Units.Voltage.<=
  name.vb: <=
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.Units.Voltage.op_LessThanOrEqual*
    name: <=
    href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_op_LessThanOrEqual_CircuitTool_Units_Voltage_CircuitTool_Units_Voltage_
- uid: CircuitTool.Units.Voltage.op_GreaterThanOrEqual*
  commentId: Overload:CircuitTool.Units.Voltage.op_GreaterThanOrEqual
  href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_op_GreaterThanOrEqual_CircuitTool_Units_Voltage_CircuitTool_Units_Voltage_
  name: operator >=
  nameWithType: Voltage.operator >=
  fullName: CircuitTool.Units.Voltage.operator >=
  nameWithType.vb: Voltage.>=
  fullName.vb: CircuitTool.Units.Voltage.>=
  name.vb: '>='
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.Units.Voltage.op_GreaterThanOrEqual*
    name: '>='
    href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_op_GreaterThanOrEqual_CircuitTool_Units_Voltage_CircuitTool_Units_Voltage_
- uid: CircuitTool.Units.Voltage.op_Implicit*
  commentId: Overload:CircuitTool.Units.Voltage.op_Implicit
  name: implicit operator
  nameWithType: Voltage.implicit operator
  fullName: CircuitTool.Units.Voltage.implicit operator
  nameWithType.vb: Voltage.CType
  fullName.vb: CircuitTool.Units.Voltage.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: CircuitTool.Units.Voltage.Equals*
  commentId: Overload:CircuitTool.Units.Voltage.Equals
  href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_Equals_CircuitTool_Units_Voltage_
  name: Equals
  nameWithType: Voltage.Equals
  fullName: CircuitTool.Units.Voltage.Equals
- uid: System.IEquatable{CircuitTool.Units.Voltage}.Equals(CircuitTool.Units.Voltage)
  commentId: M:System.IEquatable{CircuitTool.Units.Voltage}.Equals(CircuitTool.Units.Voltage)
  parent: System.IEquatable{CircuitTool.Units.Voltage}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Voltage)
  nameWithType: IEquatable<Voltage>.Equals(Voltage)
  fullName: System.IEquatable<CircuitTool.Units.Voltage>.Equals(CircuitTool.Units.Voltage)
  nameWithType.vb: IEquatable(Of Voltage).Equals(Voltage)
  fullName.vb: System.IEquatable(Of CircuitTool.Units.Voltage).Equals(CircuitTool.Units.Voltage)
  spec.csharp:
  - uid: System.IEquatable{CircuitTool.Units.Voltage}.Equals(CircuitTool.Units.Voltage)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: CircuitTool.Units.Voltage
    name: Voltage
    href: CircuitTool.Units.Voltage.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{CircuitTool.Units.Voltage}.Equals(CircuitTool.Units.Voltage)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: CircuitTool.Units.Voltage
    name: Voltage
    href: CircuitTool.Units.Voltage.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: CircuitTool.Units.Voltage.GetHashCode*
  commentId: Overload:CircuitTool.Units.Voltage.GetHashCode
  href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_GetHashCode
  name: GetHashCode
  nameWithType: Voltage.GetHashCode
  fullName: CircuitTool.Units.Voltage.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: CircuitTool.Units.Voltage.CompareTo*
  commentId: Overload:CircuitTool.Units.Voltage.CompareTo
  href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_CompareTo_CircuitTool_Units_Voltage_
  name: CompareTo
  nameWithType: Voltage.CompareTo
  fullName: CircuitTool.Units.Voltage.CompareTo
- uid: System.IComparable{CircuitTool.Units.Voltage}.CompareTo(CircuitTool.Units.Voltage)
  commentId: M:System.IComparable{CircuitTool.Units.Voltage}.CompareTo(CircuitTool.Units.Voltage)
  parent: System.IComparable{CircuitTool.Units.Voltage}
  definition: System.IComparable`1.CompareTo(`0)
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  name: CompareTo(Voltage)
  nameWithType: IComparable<Voltage>.CompareTo(Voltage)
  fullName: System.IComparable<CircuitTool.Units.Voltage>.CompareTo(CircuitTool.Units.Voltage)
  nameWithType.vb: IComparable(Of Voltage).CompareTo(Voltage)
  fullName.vb: System.IComparable(Of CircuitTool.Units.Voltage).CompareTo(CircuitTool.Units.Voltage)
  spec.csharp:
  - uid: System.IComparable{CircuitTool.Units.Voltage}.CompareTo(CircuitTool.Units.Voltage)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - uid: CircuitTool.Units.Voltage
    name: Voltage
    href: CircuitTool.Units.Voltage.html
  - name: )
  spec.vb:
  - uid: System.IComparable{CircuitTool.Units.Voltage}.CompareTo(CircuitTool.Units.Voltage)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - uid: CircuitTool.Units.Voltage
    name: Voltage
    href: CircuitTool.Units.Voltage.html
  - name: )
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: CircuitTool.Units.Voltage.ToString*
  commentId: Overload:CircuitTool.Units.Voltage.ToString
  href: CircuitTool.Units.Voltage.html#CircuitTool_Units_Voltage_ToString
  name: ToString
  nameWithType: Voltage.ToString
  fullName: CircuitTool.Units.Voltage.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
