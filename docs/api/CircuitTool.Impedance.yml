### YamlMime:ManagedReference
items:
- uid: CircuitTool.Impedance
  commentId: T:CircuitTool.Impedance
  id: Impedance
  parent: CircuitTool
  children:
  - CircuitTool.Impedance.#ctor(System.Double,System.Double)
  - CircuitTool.Impedance.#ctor(System.Numerics.Complex)
  - CircuitTool.Impedance.Admittance
  - CircuitTool.Impedance.Capacitor(System.Double,System.Double)
  - CircuitTool.Impedance.Complex
  - CircuitTool.Impedance.Equals(CircuitTool.Impedance)
  - CircuitTool.Impedance.Equals(System.Object)
  - CircuitTool.Impedance.FromPolar(System.Double,System.Double)
  - CircuitTool.Impedance.GetHashCode
  - CircuitTool.Impedance.Inductor(System.Double,System.Double)
  - CircuitTool.Impedance.Magnitude
  - CircuitTool.Impedance.Parallel(CircuitTool.Impedance,CircuitTool.Impedance)
  - CircuitTool.Impedance.Phase
  - CircuitTool.Impedance.PhaseDegrees
  - CircuitTool.Impedance.Reactance
  - CircuitTool.Impedance.Resistance
  - CircuitTool.Impedance.Resistor(System.Double)
  - CircuitTool.Impedance.Series(CircuitTool.Impedance,CircuitTool.Impedance)
  - CircuitTool.Impedance.ToString
  - CircuitTool.Impedance.ToString(System.String)
  - CircuitTool.Impedance.op_Addition(CircuitTool.Impedance,CircuitTool.Impedance)
  - CircuitTool.Impedance.op_Division(CircuitTool.Impedance,System.Double)
  - CircuitTool.Impedance.op_Equality(CircuitTool.Impedance,CircuitTool.Impedance)
  - CircuitTool.Impedance.op_Inequality(CircuitTool.Impedance,CircuitTool.Impedance)
  - CircuitTool.Impedance.op_Multiply(CircuitTool.Impedance,System.Double)
  - CircuitTool.Impedance.op_Multiply(System.Double,CircuitTool.Impedance)
  - CircuitTool.Impedance.op_Subtraction(CircuitTool.Impedance,CircuitTool.Impedance)
  langs:
  - csharp
  - vb
  name: Impedance
  nameWithType: Impedance
  fullName: CircuitTool.Impedance
  type: Struct
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Impedance
    path: ../src/ACTypes.cs
    startLine: 171
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Represents complex impedance for AC circuit analysis
  example: []
  syntax:
    content: 'public readonly struct Impedance : IEquatable<Impedance>'
    content.vb: Public Structure Impedance Implements IEquatable(Of Impedance)
  implements:
  - System.IEquatable{CircuitTool.Impedance}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: CircuitTool.Impedance.FromPolar(System.Double,System.Double)
  commentId: M:CircuitTool.Impedance.FromPolar(System.Double,System.Double)
  id: FromPolar(System.Double,System.Double)
  parent: CircuitTool.Impedance
  langs:
  - csharp
  - vb
  name: FromPolar(double, double)
  nameWithType: Impedance.FromPolar(double, double)
  fullName: CircuitTool.Impedance.FromPolar(double, double)
  type: Method
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: FromPolar
    path: ../src/ACTypes.cs
    startLine: 180
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Creates a new impedance from magnitude and phase
  example: []
  syntax:
    content: public static Impedance FromPolar(double magnitude, double phase)
    parameters:
    - id: magnitude
      type: System.Double
      description: Magnitude in ohms
    - id: phase
      type: System.Double
      description: Phase angle in radians
    return:
      type: CircuitTool.Impedance
    content.vb: Public Shared Function FromPolar(magnitude As Double, phase As Double) As Impedance
  overload: CircuitTool.Impedance.FromPolar*
  nameWithType.vb: Impedance.FromPolar(Double, Double)
  fullName.vb: CircuitTool.Impedance.FromPolar(Double, Double)
  name.vb: FromPolar(Double, Double)
- uid: CircuitTool.Impedance.#ctor(System.Double,System.Double)
  commentId: M:CircuitTool.Impedance.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: CircuitTool.Impedance
  langs:
  - csharp
  - vb
  name: Impedance(double, double)
  nameWithType: Impedance.Impedance(double, double)
  fullName: CircuitTool.Impedance.Impedance(double, double)
  type: Constructor
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: .ctor
    path: ../src/ACTypes.cs
    startLine: 190
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Creates a new impedance from resistance and reactance
  example: []
  syntax:
    content: public Impedance(double resistance, double reactance)
    parameters:
    - id: resistance
      type: System.Double
      description: Resistance in ohms
    - id: reactance
      type: System.Double
      description: Reactance in ohms
    content.vb: Public Sub New(resistance As Double, reactance As Double)
  overload: CircuitTool.Impedance.#ctor*
  nameWithType.vb: Impedance.New(Double, Double)
  fullName.vb: CircuitTool.Impedance.New(Double, Double)
  name.vb: New(Double, Double)
- uid: CircuitTool.Impedance.#ctor(System.Numerics.Complex)
  commentId: M:CircuitTool.Impedance.#ctor(System.Numerics.Complex)
  id: '#ctor(System.Numerics.Complex)'
  parent: CircuitTool.Impedance
  langs:
  - csharp
  - vb
  name: Impedance(Complex)
  nameWithType: Impedance.Impedance(Complex)
  fullName: CircuitTool.Impedance.Impedance(System.Numerics.Complex)
  type: Constructor
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: .ctor
    path: ../src/ACTypes.cs
    startLine: 199
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Creates a new impedance from a complex number
  example: []
  syntax:
    content: public Impedance(Complex complex)
    parameters:
    - id: complex
      type: System.Numerics.Complex
      description: Complex representation
    content.vb: Public Sub New(complex As Complex)
  overload: CircuitTool.Impedance.#ctor*
  nameWithType.vb: Impedance.New(Complex)
  fullName.vb: CircuitTool.Impedance.New(System.Numerics.Complex)
  name.vb: New(Complex)
- uid: CircuitTool.Impedance.Magnitude
  commentId: P:CircuitTool.Impedance.Magnitude
  id: Magnitude
  parent: CircuitTool.Impedance
  langs:
  - csharp
  - vb
  name: Magnitude
  nameWithType: Impedance.Magnitude
  fullName: CircuitTool.Impedance.Magnitude
  type: Property
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Magnitude
    path: ../src/ACTypes.cs
    startLine: 207
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Gets the magnitude in ohms
  example: []
  syntax:
    content: public double Magnitude { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Magnitude As Double
  overload: CircuitTool.Impedance.Magnitude*
- uid: CircuitTool.Impedance.Phase
  commentId: P:CircuitTool.Impedance.Phase
  id: Phase
  parent: CircuitTool.Impedance
  langs:
  - csharp
  - vb
  name: Phase
  nameWithType: Impedance.Phase
  fullName: CircuitTool.Impedance.Phase
  type: Property
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Phase
    path: ../src/ACTypes.cs
    startLine: 212
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Gets the phase angle in radians
  example: []
  syntax:
    content: public double Phase { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Phase As Double
  overload: CircuitTool.Impedance.Phase*
- uid: CircuitTool.Impedance.PhaseDegrees
  commentId: P:CircuitTool.Impedance.PhaseDegrees
  id: PhaseDegrees
  parent: CircuitTool.Impedance
  langs:
  - csharp
  - vb
  name: PhaseDegrees
  nameWithType: Impedance.PhaseDegrees
  fullName: CircuitTool.Impedance.PhaseDegrees
  type: Property
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: PhaseDegrees
    path: ../src/ACTypes.cs
    startLine: 217
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Gets the phase angle in degrees
  example: []
  syntax:
    content: public double PhaseDegrees { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property PhaseDegrees As Double
  overload: CircuitTool.Impedance.PhaseDegrees*
- uid: CircuitTool.Impedance.Resistance
  commentId: P:CircuitTool.Impedance.Resistance
  id: Resistance
  parent: CircuitTool.Impedance
  langs:
  - csharp
  - vb
  name: Resistance
  nameWithType: Impedance.Resistance
  fullName: CircuitTool.Impedance.Resistance
  type: Property
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Resistance
    path: ../src/ACTypes.cs
    startLine: 222
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Gets the resistance component in ohms
  example: []
  syntax:
    content: public double Resistance { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Resistance As Double
  overload: CircuitTool.Impedance.Resistance*
- uid: CircuitTool.Impedance.Reactance
  commentId: P:CircuitTool.Impedance.Reactance
  id: Reactance
  parent: CircuitTool.Impedance
  langs:
  - csharp
  - vb
  name: Reactance
  nameWithType: Impedance.Reactance
  fullName: CircuitTool.Impedance.Reactance
  type: Property
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Reactance
    path: ../src/ACTypes.cs
    startLine: 227
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Gets the reactance component in ohms
  example: []
  syntax:
    content: public double Reactance { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Reactance As Double
  overload: CircuitTool.Impedance.Reactance*
- uid: CircuitTool.Impedance.Complex
  commentId: P:CircuitTool.Impedance.Complex
  id: Complex
  parent: CircuitTool.Impedance
  langs:
  - csharp
  - vb
  name: Complex
  nameWithType: Impedance.Complex
  fullName: CircuitTool.Impedance.Complex
  type: Property
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Complex
    path: ../src/ACTypes.cs
    startLine: 232
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Gets the complex number representation
  example: []
  syntax:
    content: public Complex Complex { get; }
    parameters: []
    return:
      type: System.Numerics.Complex
    content.vb: Public ReadOnly Property Complex As Complex
  overload: CircuitTool.Impedance.Complex*
- uid: CircuitTool.Impedance.Admittance
  commentId: P:CircuitTool.Impedance.Admittance
  id: Admittance
  parent: CircuitTool.Impedance
  langs:
  - csharp
  - vb
  name: Admittance
  nameWithType: Impedance.Admittance
  fullName: CircuitTool.Impedance.Admittance
  type: Property
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Admittance
    path: ../src/ACTypes.cs
    startLine: 237
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Gets the admittance (1/Z)
  example: []
  syntax:
    content: public Admittance Admittance { get; }
    parameters: []
    return:
      type: CircuitTool.Admittance
    content.vb: Public ReadOnly Property Admittance As Admittance
  overload: CircuitTool.Impedance.Admittance*
- uid: CircuitTool.Impedance.Resistor(System.Double)
  commentId: M:CircuitTool.Impedance.Resistor(System.Double)
  id: Resistor(System.Double)
  parent: CircuitTool.Impedance
  langs:
  - csharp
  - vb
  name: Resistor(double)
  nameWithType: Impedance.Resistor(double)
  fullName: CircuitTool.Impedance.Resistor(double)
  type: Method
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Resistor
    path: ../src/ACTypes.cs
    startLine: 243
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Creates impedance for a resistor
  example: []
  syntax:
    content: public static Impedance Resistor(double resistance)
    parameters:
    - id: resistance
      type: System.Double
      description: Resistance in ohms
    return:
      type: CircuitTool.Impedance
    content.vb: Public Shared Function Resistor(resistance As Double) As Impedance
  overload: CircuitTool.Impedance.Resistor*
  nameWithType.vb: Impedance.Resistor(Double)
  fullName.vb: CircuitTool.Impedance.Resistor(Double)
  name.vb: Resistor(Double)
- uid: CircuitTool.Impedance.Capacitor(System.Double,System.Double)
  commentId: M:CircuitTool.Impedance.Capacitor(System.Double,System.Double)
  id: Capacitor(System.Double,System.Double)
  parent: CircuitTool.Impedance
  langs:
  - csharp
  - vb
  name: Capacitor(double, double)
  nameWithType: Impedance.Capacitor(double, double)
  fullName: CircuitTool.Impedance.Capacitor(double, double)
  type: Method
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Capacitor
    path: ../src/ACTypes.cs
    startLine: 250
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Creates impedance for a capacitor at given frequency
  example: []
  syntax:
    content: public static Impedance Capacitor(double capacitance, double frequency)
    parameters:
    - id: capacitance
      type: System.Double
      description: Capacitance in farads
    - id: frequency
      type: System.Double
      description: Frequency in hertz
    return:
      type: CircuitTool.Impedance
    content.vb: Public Shared Function Capacitor(capacitance As Double, frequency As Double) As Impedance
  overload: CircuitTool.Impedance.Capacitor*
  nameWithType.vb: Impedance.Capacitor(Double, Double)
  fullName.vb: CircuitTool.Impedance.Capacitor(Double, Double)
  name.vb: Capacitor(Double, Double)
- uid: CircuitTool.Impedance.Inductor(System.Double,System.Double)
  commentId: M:CircuitTool.Impedance.Inductor(System.Double,System.Double)
  id: Inductor(System.Double,System.Double)
  parent: CircuitTool.Impedance
  langs:
  - csharp
  - vb
  name: Inductor(double, double)
  nameWithType: Impedance.Inductor(double, double)
  fullName: CircuitTool.Impedance.Inductor(double, double)
  type: Method
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Inductor
    path: ../src/ACTypes.cs
    startLine: 261
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Creates impedance for an inductor at given frequency
  example: []
  syntax:
    content: public static Impedance Inductor(double inductance, double frequency)
    parameters:
    - id: inductance
      type: System.Double
      description: Inductance in henries
    - id: frequency
      type: System.Double
      description: Frequency in hertz
    return:
      type: CircuitTool.Impedance
    content.vb: Public Shared Function Inductor(inductance As Double, frequency As Double) As Impedance
  overload: CircuitTool.Impedance.Inductor*
  nameWithType.vb: Impedance.Inductor(Double, Double)
  fullName.vb: CircuitTool.Impedance.Inductor(Double, Double)
  name.vb: Inductor(Double, Double)
- uid: CircuitTool.Impedance.op_Addition(CircuitTool.Impedance,CircuitTool.Impedance)
  commentId: M:CircuitTool.Impedance.op_Addition(CircuitTool.Impedance,CircuitTool.Impedance)
  id: op_Addition(CircuitTool.Impedance,CircuitTool.Impedance)
  parent: CircuitTool.Impedance
  langs:
  - csharp
  - vb
  name: operator +(Impedance, Impedance)
  nameWithType: Impedance.operator +(Impedance, Impedance)
  fullName: CircuitTool.Impedance.operator +(CircuitTool.Impedance, CircuitTool.Impedance)
  type: Operator
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Addition
    path: ../src/ACTypes.cs
    startLine: 267
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  syntax:
    content: public static Impedance operator +(Impedance left, Impedance right)
    parameters:
    - id: left
      type: CircuitTool.Impedance
    - id: right
      type: CircuitTool.Impedance
    return:
      type: CircuitTool.Impedance
    content.vb: Public Shared Operator +(left As Impedance, right As Impedance) As Impedance
  overload: CircuitTool.Impedance.op_Addition*
  nameWithType.vb: Impedance.+(Impedance, Impedance)
  fullName.vb: CircuitTool.Impedance.+(CircuitTool.Impedance, CircuitTool.Impedance)
  name.vb: +(Impedance, Impedance)
- uid: CircuitTool.Impedance.op_Subtraction(CircuitTool.Impedance,CircuitTool.Impedance)
  commentId: M:CircuitTool.Impedance.op_Subtraction(CircuitTool.Impedance,CircuitTool.Impedance)
  id: op_Subtraction(CircuitTool.Impedance,CircuitTool.Impedance)
  parent: CircuitTool.Impedance
  langs:
  - csharp
  - vb
  name: operator -(Impedance, Impedance)
  nameWithType: Impedance.operator -(Impedance, Impedance)
  fullName: CircuitTool.Impedance.operator -(CircuitTool.Impedance, CircuitTool.Impedance)
  type: Operator
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Subtraction
    path: ../src/ACTypes.cs
    startLine: 268
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  syntax:
    content: public static Impedance operator -(Impedance left, Impedance right)
    parameters:
    - id: left
      type: CircuitTool.Impedance
    - id: right
      type: CircuitTool.Impedance
    return:
      type: CircuitTool.Impedance
    content.vb: Public Shared Operator -(left As Impedance, right As Impedance) As Impedance
  overload: CircuitTool.Impedance.op_Subtraction*
  nameWithType.vb: Impedance.-(Impedance, Impedance)
  fullName.vb: CircuitTool.Impedance.-(CircuitTool.Impedance, CircuitTool.Impedance)
  name.vb: -(Impedance, Impedance)
- uid: CircuitTool.Impedance.op_Multiply(CircuitTool.Impedance,System.Double)
  commentId: M:CircuitTool.Impedance.op_Multiply(CircuitTool.Impedance,System.Double)
  id: op_Multiply(CircuitTool.Impedance,System.Double)
  parent: CircuitTool.Impedance
  langs:
  - csharp
  - vb
  name: operator *(Impedance, double)
  nameWithType: Impedance.operator *(Impedance, double)
  fullName: CircuitTool.Impedance.operator *(CircuitTool.Impedance, double)
  type: Operator
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Multiply
    path: ../src/ACTypes.cs
    startLine: 269
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  syntax:
    content: public static Impedance operator *(Impedance impedance, double scalar)
    parameters:
    - id: impedance
      type: CircuitTool.Impedance
    - id: scalar
      type: System.Double
    return:
      type: CircuitTool.Impedance
    content.vb: Public Shared Operator *(impedance As Impedance, scalar As Double) As Impedance
  overload: CircuitTool.Impedance.op_Multiply*
  nameWithType.vb: Impedance.*(Impedance, Double)
  fullName.vb: CircuitTool.Impedance.*(CircuitTool.Impedance, Double)
  name.vb: '*(Impedance, Double)'
- uid: CircuitTool.Impedance.op_Multiply(System.Double,CircuitTool.Impedance)
  commentId: M:CircuitTool.Impedance.op_Multiply(System.Double,CircuitTool.Impedance)
  id: op_Multiply(System.Double,CircuitTool.Impedance)
  parent: CircuitTool.Impedance
  langs:
  - csharp
  - vb
  name: operator *(double, Impedance)
  nameWithType: Impedance.operator *(double, Impedance)
  fullName: CircuitTool.Impedance.operator *(double, CircuitTool.Impedance)
  type: Operator
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Multiply
    path: ../src/ACTypes.cs
    startLine: 270
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  syntax:
    content: public static Impedance operator *(double scalar, Impedance impedance)
    parameters:
    - id: scalar
      type: System.Double
    - id: impedance
      type: CircuitTool.Impedance
    return:
      type: CircuitTool.Impedance
    content.vb: Public Shared Operator *(scalar As Double, impedance As Impedance) As Impedance
  overload: CircuitTool.Impedance.op_Multiply*
  nameWithType.vb: Impedance.*(Double, Impedance)
  fullName.vb: CircuitTool.Impedance.*(Double, CircuitTool.Impedance)
  name.vb: '*(Double, Impedance)'
- uid: CircuitTool.Impedance.op_Division(CircuitTool.Impedance,System.Double)
  commentId: M:CircuitTool.Impedance.op_Division(CircuitTool.Impedance,System.Double)
  id: op_Division(CircuitTool.Impedance,System.Double)
  parent: CircuitTool.Impedance
  langs:
  - csharp
  - vb
  name: operator /(Impedance, double)
  nameWithType: Impedance.operator /(Impedance, double)
  fullName: CircuitTool.Impedance.operator /(CircuitTool.Impedance, double)
  type: Operator
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Division
    path: ../src/ACTypes.cs
    startLine: 271
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  syntax:
    content: public static Impedance operator /(Impedance impedance, double scalar)
    parameters:
    - id: impedance
      type: CircuitTool.Impedance
    - id: scalar
      type: System.Double
    return:
      type: CircuitTool.Impedance
    content.vb: Public Shared Operator /(impedance As Impedance, scalar As Double) As Impedance
  overload: CircuitTool.Impedance.op_Division*
  nameWithType.vb: Impedance./(Impedance, Double)
  fullName.vb: CircuitTool.Impedance./(CircuitTool.Impedance, Double)
  name.vb: /(Impedance, Double)
- uid: CircuitTool.Impedance.Parallel(CircuitTool.Impedance,CircuitTool.Impedance)
  commentId: M:CircuitTool.Impedance.Parallel(CircuitTool.Impedance,CircuitTool.Impedance)
  id: Parallel(CircuitTool.Impedance,CircuitTool.Impedance)
  parent: CircuitTool.Impedance
  langs:
  - csharp
  - vb
  name: Parallel(Impedance, Impedance)
  nameWithType: Impedance.Parallel(Impedance, Impedance)
  fullName: CircuitTool.Impedance.Parallel(CircuitTool.Impedance, CircuitTool.Impedance)
  type: Method
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Parallel
    path: ../src/ACTypes.cs
    startLine: 276
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Parallel combination of impedances
  example: []
  syntax:
    content: public static Impedance Parallel(Impedance z1, Impedance z2)
    parameters:
    - id: z1
      type: CircuitTool.Impedance
    - id: z2
      type: CircuitTool.Impedance
    return:
      type: CircuitTool.Impedance
    content.vb: Public Shared Function Parallel(z1 As Impedance, z2 As Impedance) As Impedance
  overload: CircuitTool.Impedance.Parallel*
- uid: CircuitTool.Impedance.Series(CircuitTool.Impedance,CircuitTool.Impedance)
  commentId: M:CircuitTool.Impedance.Series(CircuitTool.Impedance,CircuitTool.Impedance)
  id: Series(CircuitTool.Impedance,CircuitTool.Impedance)
  parent: CircuitTool.Impedance
  langs:
  - csharp
  - vb
  name: Series(Impedance, Impedance)
  nameWithType: Impedance.Series(Impedance, Impedance)
  fullName: CircuitTool.Impedance.Series(CircuitTool.Impedance, CircuitTool.Impedance)
  type: Method
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Series
    path: ../src/ACTypes.cs
    startLine: 281
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Series combination of impedances
  example: []
  syntax:
    content: public static Impedance Series(Impedance z1, Impedance z2)
    parameters:
    - id: z1
      type: CircuitTool.Impedance
    - id: z2
      type: CircuitTool.Impedance
    return:
      type: CircuitTool.Impedance
    content.vb: Public Shared Function Series(z1 As Impedance, z2 As Impedance) As Impedance
  overload: CircuitTool.Impedance.Series*
- uid: CircuitTool.Impedance.op_Equality(CircuitTool.Impedance,CircuitTool.Impedance)
  commentId: M:CircuitTool.Impedance.op_Equality(CircuitTool.Impedance,CircuitTool.Impedance)
  id: op_Equality(CircuitTool.Impedance,CircuitTool.Impedance)
  parent: CircuitTool.Impedance
  langs:
  - csharp
  - vb
  name: operator ==(Impedance, Impedance)
  nameWithType: Impedance.operator ==(Impedance, Impedance)
  fullName: CircuitTool.Impedance.operator ==(CircuitTool.Impedance, CircuitTool.Impedance)
  type: Operator
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Equality
    path: ../src/ACTypes.cs
    startLine: 283
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  syntax:
    content: public static bool operator ==(Impedance left, Impedance right)
    parameters:
    - id: left
      type: CircuitTool.Impedance
    - id: right
      type: CircuitTool.Impedance
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As Impedance, right As Impedance) As Boolean
  overload: CircuitTool.Impedance.op_Equality*
  nameWithType.vb: Impedance.=(Impedance, Impedance)
  fullName.vb: CircuitTool.Impedance.=(CircuitTool.Impedance, CircuitTool.Impedance)
  name.vb: =(Impedance, Impedance)
- uid: CircuitTool.Impedance.op_Inequality(CircuitTool.Impedance,CircuitTool.Impedance)
  commentId: M:CircuitTool.Impedance.op_Inequality(CircuitTool.Impedance,CircuitTool.Impedance)
  id: op_Inequality(CircuitTool.Impedance,CircuitTool.Impedance)
  parent: CircuitTool.Impedance
  langs:
  - csharp
  - vb
  name: operator !=(Impedance, Impedance)
  nameWithType: Impedance.operator !=(Impedance, Impedance)
  fullName: CircuitTool.Impedance.operator !=(CircuitTool.Impedance, CircuitTool.Impedance)
  type: Operator
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Inequality
    path: ../src/ACTypes.cs
    startLine: 284
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  syntax:
    content: public static bool operator !=(Impedance left, Impedance right)
    parameters:
    - id: left
      type: CircuitTool.Impedance
    - id: right
      type: CircuitTool.Impedance
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As Impedance, right As Impedance) As Boolean
  overload: CircuitTool.Impedance.op_Inequality*
  nameWithType.vb: Impedance.<>(Impedance, Impedance)
  fullName.vb: CircuitTool.Impedance.<>(CircuitTool.Impedance, CircuitTool.Impedance)
  name.vb: <>(Impedance, Impedance)
- uid: CircuitTool.Impedance.Equals(CircuitTool.Impedance)
  commentId: M:CircuitTool.Impedance.Equals(CircuitTool.Impedance)
  id: Equals(CircuitTool.Impedance)
  parent: CircuitTool.Impedance
  langs:
  - csharp
  - vb
  name: Equals(Impedance)
  nameWithType: Impedance.Equals(Impedance)
  fullName: CircuitTool.Impedance.Equals(CircuitTool.Impedance)
  type: Method
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Equals
    path: ../src/ACTypes.cs
    startLine: 286
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(Impedance other)
    parameters:
    - id: other
      type: CircuitTool.Impedance
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As Impedance) As Boolean
  overload: CircuitTool.Impedance.Equals*
  implements:
  - System.IEquatable{CircuitTool.Impedance}.Equals(CircuitTool.Impedance)
- uid: CircuitTool.Impedance.Equals(System.Object)
  commentId: M:CircuitTool.Impedance.Equals(System.Object)
  id: Equals(System.Object)
  parent: CircuitTool.Impedance
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: Impedance.Equals(object?)
  fullName: CircuitTool.Impedance.Equals(object?)
  type: Method
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Equals
    path: ../src/ACTypes.cs
    startLine: 287
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: CircuitTool.Impedance.Equals*
  nameWithType.vb: Impedance.Equals(Object)
  fullName.vb: CircuitTool.Impedance.Equals(Object)
  name.vb: Equals(Object)
- uid: CircuitTool.Impedance.GetHashCode
  commentId: M:CircuitTool.Impedance.GetHashCode
  id: GetHashCode
  parent: CircuitTool.Impedance
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Impedance.GetHashCode()
  fullName: CircuitTool.Impedance.GetHashCode()
  type: Method
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: GetHashCode
    path: ../src/ACTypes.cs
    startLine: 288
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: CircuitTool.Impedance.GetHashCode*
- uid: CircuitTool.Impedance.ToString
  commentId: M:CircuitTool.Impedance.ToString
  id: ToString
  parent: CircuitTool.Impedance
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Impedance.ToString()
  fullName: CircuitTool.Impedance.ToString()
  type: Method
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ToString
    path: ../src/ACTypes.cs
    startLine: 290
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Returns the fully qualified type name of this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The fully qualified type name.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: CircuitTool.Impedance.ToString*
- uid: CircuitTool.Impedance.ToString(System.String)
  commentId: M:CircuitTool.Impedance.ToString(System.String)
  id: ToString(System.String)
  parent: CircuitTool.Impedance
  langs:
  - csharp
  - vb
  name: ToString(string)
  nameWithType: Impedance.ToString(string)
  fullName: CircuitTool.Impedance.ToString(string)
  type: Method
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ToString
    path: ../src/ACTypes.cs
    startLine: 291
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  syntax:
    content: public string ToString(string format)
    parameters:
    - id: format
      type: System.String
    return:
      type: System.String
    content.vb: Public Function ToString(format As String) As String
  overload: CircuitTool.Impedance.ToString*
  nameWithType.vb: Impedance.ToString(String)
  fullName.vb: CircuitTool.Impedance.ToString(String)
  name.vb: ToString(String)
references:
- uid: CircuitTool
  commentId: N:CircuitTool
  href: CircuitTool.html
  name: CircuitTool
  nameWithType: CircuitTool
  fullName: CircuitTool
- uid: System.IEquatable{CircuitTool.Impedance}
  commentId: T:System.IEquatable{CircuitTool.Impedance}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Impedance>
  nameWithType: IEquatable<Impedance>
  fullName: System.IEquatable<CircuitTool.Impedance>
  nameWithType.vb: IEquatable(Of Impedance)
  fullName.vb: System.IEquatable(Of CircuitTool.Impedance)
  name.vb: IEquatable(Of Impedance)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: CircuitTool.Impedance
    name: Impedance
    href: CircuitTool.Impedance.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: CircuitTool.Impedance
    name: Impedance
    href: CircuitTool.Impedance.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: CircuitTool.Impedance.FromPolar*
  commentId: Overload:CircuitTool.Impedance.FromPolar
  href: CircuitTool.Impedance.html#CircuitTool_Impedance_FromPolar_System_Double_System_Double_
  name: FromPolar
  nameWithType: Impedance.FromPolar
  fullName: CircuitTool.Impedance.FromPolar
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: CircuitTool.Impedance
  commentId: T:CircuitTool.Impedance
  parent: CircuitTool
  href: CircuitTool.Impedance.html
  name: Impedance
  nameWithType: Impedance
  fullName: CircuitTool.Impedance
- uid: CircuitTool.Impedance.#ctor*
  commentId: Overload:CircuitTool.Impedance.#ctor
  href: CircuitTool.Impedance.html#CircuitTool_Impedance__ctor_System_Double_System_Double_
  name: Impedance
  nameWithType: Impedance.Impedance
  fullName: CircuitTool.Impedance.Impedance
  nameWithType.vb: Impedance.New
  fullName.vb: CircuitTool.Impedance.New
  name.vb: New
- uid: System.Numerics.Complex
  commentId: T:System.Numerics.Complex
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.complex
  name: Complex
  nameWithType: Complex
  fullName: System.Numerics.Complex
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: CircuitTool.Impedance.Magnitude*
  commentId: Overload:CircuitTool.Impedance.Magnitude
  href: CircuitTool.Impedance.html#CircuitTool_Impedance_Magnitude
  name: Magnitude
  nameWithType: Impedance.Magnitude
  fullName: CircuitTool.Impedance.Magnitude
- uid: CircuitTool.Impedance.Phase*
  commentId: Overload:CircuitTool.Impedance.Phase
  href: CircuitTool.Impedance.html#CircuitTool_Impedance_Phase
  name: Phase
  nameWithType: Impedance.Phase
  fullName: CircuitTool.Impedance.Phase
- uid: CircuitTool.Impedance.PhaseDegrees*
  commentId: Overload:CircuitTool.Impedance.PhaseDegrees
  href: CircuitTool.Impedance.html#CircuitTool_Impedance_PhaseDegrees
  name: PhaseDegrees
  nameWithType: Impedance.PhaseDegrees
  fullName: CircuitTool.Impedance.PhaseDegrees
- uid: CircuitTool.Impedance.Resistance*
  commentId: Overload:CircuitTool.Impedance.Resistance
  href: CircuitTool.Impedance.html#CircuitTool_Impedance_Resistance
  name: Resistance
  nameWithType: Impedance.Resistance
  fullName: CircuitTool.Impedance.Resistance
- uid: CircuitTool.Impedance.Reactance*
  commentId: Overload:CircuitTool.Impedance.Reactance
  href: CircuitTool.Impedance.html#CircuitTool_Impedance_Reactance
  name: Reactance
  nameWithType: Impedance.Reactance
  fullName: CircuitTool.Impedance.Reactance
- uid: CircuitTool.Impedance.Complex*
  commentId: Overload:CircuitTool.Impedance.Complex
  href: CircuitTool.Impedance.html#CircuitTool_Impedance_Complex
  name: Complex
  nameWithType: Impedance.Complex
  fullName: CircuitTool.Impedance.Complex
- uid: CircuitTool.Impedance.Admittance*
  commentId: Overload:CircuitTool.Impedance.Admittance
  href: CircuitTool.Impedance.html#CircuitTool_Impedance_Admittance
  name: Admittance
  nameWithType: Impedance.Admittance
  fullName: CircuitTool.Impedance.Admittance
- uid: CircuitTool.Admittance
  commentId: T:CircuitTool.Admittance
  parent: CircuitTool
  href: CircuitTool.Admittance.html
  name: Admittance
  nameWithType: Admittance
  fullName: CircuitTool.Admittance
- uid: CircuitTool.Impedance.Resistor*
  commentId: Overload:CircuitTool.Impedance.Resistor
  href: CircuitTool.Impedance.html#CircuitTool_Impedance_Resistor_System_Double_
  name: Resistor
  nameWithType: Impedance.Resistor
  fullName: CircuitTool.Impedance.Resistor
- uid: CircuitTool.Impedance.Capacitor*
  commentId: Overload:CircuitTool.Impedance.Capacitor
  href: CircuitTool.Impedance.html#CircuitTool_Impedance_Capacitor_System_Double_System_Double_
  name: Capacitor
  nameWithType: Impedance.Capacitor
  fullName: CircuitTool.Impedance.Capacitor
- uid: CircuitTool.Impedance.Inductor*
  commentId: Overload:CircuitTool.Impedance.Inductor
  href: CircuitTool.Impedance.html#CircuitTool_Impedance_Inductor_System_Double_System_Double_
  name: Inductor
  nameWithType: Impedance.Inductor
  fullName: CircuitTool.Impedance.Inductor
- uid: CircuitTool.Impedance.op_Addition*
  commentId: Overload:CircuitTool.Impedance.op_Addition
  href: CircuitTool.Impedance.html#CircuitTool_Impedance_op_Addition_CircuitTool_Impedance_CircuitTool_Impedance_
  name: operator +
  nameWithType: Impedance.operator +
  fullName: CircuitTool.Impedance.operator +
  nameWithType.vb: Impedance.+
  fullName.vb: CircuitTool.Impedance.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.Impedance.op_Addition*
    name: +
    href: CircuitTool.Impedance.html#CircuitTool_Impedance_op_Addition_CircuitTool_Impedance_CircuitTool_Impedance_
- uid: CircuitTool.Impedance.op_Subtraction*
  commentId: Overload:CircuitTool.Impedance.op_Subtraction
  href: CircuitTool.Impedance.html#CircuitTool_Impedance_op_Subtraction_CircuitTool_Impedance_CircuitTool_Impedance_
  name: operator -
  nameWithType: Impedance.operator -
  fullName: CircuitTool.Impedance.operator -
  nameWithType.vb: Impedance.-
  fullName.vb: CircuitTool.Impedance.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.Impedance.op_Subtraction*
    name: '-'
    href: CircuitTool.Impedance.html#CircuitTool_Impedance_op_Subtraction_CircuitTool_Impedance_CircuitTool_Impedance_
- uid: CircuitTool.Impedance.op_Multiply*
  commentId: Overload:CircuitTool.Impedance.op_Multiply
  href: CircuitTool.Impedance.html#CircuitTool_Impedance_op_Multiply_CircuitTool_Impedance_System_Double_
  name: operator *
  nameWithType: Impedance.operator *
  fullName: CircuitTool.Impedance.operator *
  nameWithType.vb: Impedance.*
  fullName.vb: CircuitTool.Impedance.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.Impedance.op_Multiply*
    name: '*'
    href: CircuitTool.Impedance.html#CircuitTool_Impedance_op_Multiply_CircuitTool_Impedance_System_Double_
- uid: CircuitTool.Impedance.op_Division*
  commentId: Overload:CircuitTool.Impedance.op_Division
  href: CircuitTool.Impedance.html#CircuitTool_Impedance_op_Division_CircuitTool_Impedance_System_Double_
  name: operator /
  nameWithType: Impedance.operator /
  fullName: CircuitTool.Impedance.operator /
  nameWithType.vb: Impedance./
  fullName.vb: CircuitTool.Impedance./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.Impedance.op_Division*
    name: /
    href: CircuitTool.Impedance.html#CircuitTool_Impedance_op_Division_CircuitTool_Impedance_System_Double_
- uid: CircuitTool.Impedance.Parallel*
  commentId: Overload:CircuitTool.Impedance.Parallel
  href: CircuitTool.Impedance.html#CircuitTool_Impedance_Parallel_CircuitTool_Impedance_CircuitTool_Impedance_
  name: Parallel
  nameWithType: Impedance.Parallel
  fullName: CircuitTool.Impedance.Parallel
- uid: CircuitTool.Impedance.Series*
  commentId: Overload:CircuitTool.Impedance.Series
  href: CircuitTool.Impedance.html#CircuitTool_Impedance_Series_CircuitTool_Impedance_CircuitTool_Impedance_
  name: Series
  nameWithType: Impedance.Series
  fullName: CircuitTool.Impedance.Series
- uid: CircuitTool.Impedance.op_Equality*
  commentId: Overload:CircuitTool.Impedance.op_Equality
  href: CircuitTool.Impedance.html#CircuitTool_Impedance_op_Equality_CircuitTool_Impedance_CircuitTool_Impedance_
  name: operator ==
  nameWithType: Impedance.operator ==
  fullName: CircuitTool.Impedance.operator ==
  nameWithType.vb: Impedance.=
  fullName.vb: CircuitTool.Impedance.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.Impedance.op_Equality*
    name: ==
    href: CircuitTool.Impedance.html#CircuitTool_Impedance_op_Equality_CircuitTool_Impedance_CircuitTool_Impedance_
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: CircuitTool.Impedance.op_Inequality*
  commentId: Overload:CircuitTool.Impedance.op_Inequality
  href: CircuitTool.Impedance.html#CircuitTool_Impedance_op_Inequality_CircuitTool_Impedance_CircuitTool_Impedance_
  name: operator !=
  nameWithType: Impedance.operator !=
  fullName: CircuitTool.Impedance.operator !=
  nameWithType.vb: Impedance.<>
  fullName.vb: CircuitTool.Impedance.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.Impedance.op_Inequality*
    name: '!='
    href: CircuitTool.Impedance.html#CircuitTool_Impedance_op_Inequality_CircuitTool_Impedance_CircuitTool_Impedance_
- uid: CircuitTool.Impedance.Equals*
  commentId: Overload:CircuitTool.Impedance.Equals
  href: CircuitTool.Impedance.html#CircuitTool_Impedance_Equals_CircuitTool_Impedance_
  name: Equals
  nameWithType: Impedance.Equals
  fullName: CircuitTool.Impedance.Equals
- uid: System.IEquatable{CircuitTool.Impedance}.Equals(CircuitTool.Impedance)
  commentId: M:System.IEquatable{CircuitTool.Impedance}.Equals(CircuitTool.Impedance)
  parent: System.IEquatable{CircuitTool.Impedance}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Impedance)
  nameWithType: IEquatable<Impedance>.Equals(Impedance)
  fullName: System.IEquatable<CircuitTool.Impedance>.Equals(CircuitTool.Impedance)
  nameWithType.vb: IEquatable(Of Impedance).Equals(Impedance)
  fullName.vb: System.IEquatable(Of CircuitTool.Impedance).Equals(CircuitTool.Impedance)
  spec.csharp:
  - uid: System.IEquatable{CircuitTool.Impedance}.Equals(CircuitTool.Impedance)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: CircuitTool.Impedance
    name: Impedance
    href: CircuitTool.Impedance.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{CircuitTool.Impedance}.Equals(CircuitTool.Impedance)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: CircuitTool.Impedance
    name: Impedance
    href: CircuitTool.Impedance.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: CircuitTool.Impedance.GetHashCode*
  commentId: Overload:CircuitTool.Impedance.GetHashCode
  href: CircuitTool.Impedance.html#CircuitTool_Impedance_GetHashCode
  name: GetHashCode
  nameWithType: Impedance.GetHashCode
  fullName: CircuitTool.Impedance.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: CircuitTool.Impedance.ToString*
  commentId: Overload:CircuitTool.Impedance.ToString
  href: CircuitTool.Impedance.html#CircuitTool_Impedance_ToString
  name: ToString
  nameWithType: Impedance.ToString
  fullName: CircuitTool.Impedance.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
