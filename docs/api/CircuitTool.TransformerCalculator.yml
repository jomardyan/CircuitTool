### YamlMime:ManagedReference
items:
- uid: CircuitTool.TransformerCalculator
  commentId: T:CircuitTool.TransformerCalculator
  id: TransformerCalculator
  parent: CircuitTool
  children:
  - CircuitTool.TransformerCalculator.ApparentPower(System.Double,System.Double)
  - CircuitTool.TransformerCalculator.Efficiency(System.Double,System.Double)
  - CircuitTool.TransformerCalculator.PowerLoss(System.Double,System.Double)
  - CircuitTool.TransformerCalculator.PrimaryCurrent(System.Double,System.Double,System.Double)
  - CircuitTool.TransformerCalculator.Regulation(System.Double,System.Double)
  - CircuitTool.TransformerCalculator.RequiredSecondaryTurns(System.Double,System.Double,System.Double)
  - CircuitTool.TransformerCalculator.SecondaryVoltage(System.Double,System.Double,System.Double)
  - CircuitTool.TransformerCalculator.TurnsRatio(System.Double,System.Double)
  - CircuitTool.TransformerCalculator.VoltageRatio(System.Double,System.Double)
  langs:
  - csharp
  - vb
  name: TransformerCalculator
  nameWithType: TransformerCalculator
  fullName: CircuitTool.TransformerCalculator
  type: Class
  source:
    remote:
      path: src/Calculators/TransformerCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: TransformerCalculator
    path: ../src/Calculators/TransformerCalculator.cs
    startLine: 7
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Provides calculations for transformer design and characteristics.
  example: []
  syntax:
    content: public static class TransformerCalculator
    content.vb: Public Module TransformerCalculator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: CircuitTool.TransformerCalculator.SecondaryVoltage(System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.TransformerCalculator.SecondaryVoltage(System.Double,System.Double,System.Double)
  id: SecondaryVoltage(System.Double,System.Double,System.Double)
  parent: CircuitTool.TransformerCalculator
  langs:
  - csharp
  - vb
  name: SecondaryVoltage(double, double, double)
  nameWithType: TransformerCalculator.SecondaryVoltage(double, double, double)
  fullName: CircuitTool.TransformerCalculator.SecondaryVoltage(double, double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/TransformerCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: SecondaryVoltage
    path: ../src/Calculators/TransformerCalculator.cs
    startLine: 16
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates the secondary voltage using the transformer ratio Vs = Vp × (Ns / Np).
  example: []
  syntax:
    content: public static double SecondaryVoltage(double primaryVoltage, double primaryTurns, double secondaryTurns)
    parameters:
    - id: primaryVoltage
      type: System.Double
      description: Primary voltage in volts (V).
    - id: primaryTurns
      type: System.Double
      description: Number of primary turns.
    - id: secondaryTurns
      type: System.Double
      description: Number of secondary turns.
    return:
      type: System.Double
      description: Secondary voltage in volts (V).
    content.vb: Public Shared Function SecondaryVoltage(primaryVoltage As Double, primaryTurns As Double, secondaryTurns As Double) As Double
  overload: CircuitTool.TransformerCalculator.SecondaryVoltage*
  nameWithType.vb: TransformerCalculator.SecondaryVoltage(Double, Double, Double)
  fullName.vb: CircuitTool.TransformerCalculator.SecondaryVoltage(Double, Double, Double)
  name.vb: SecondaryVoltage(Double, Double, Double)
- uid: CircuitTool.TransformerCalculator.PrimaryCurrent(System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.TransformerCalculator.PrimaryCurrent(System.Double,System.Double,System.Double)
  id: PrimaryCurrent(System.Double,System.Double,System.Double)
  parent: CircuitTool.TransformerCalculator
  langs:
  - csharp
  - vb
  name: PrimaryCurrent(double, double, double)
  nameWithType: TransformerCalculator.PrimaryCurrent(double, double, double)
  fullName: CircuitTool.TransformerCalculator.PrimaryCurrent(double, double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/TransformerCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: PrimaryCurrent
    path: ../src/Calculators/TransformerCalculator.cs
    startLine: 31
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates the primary current using the transformer ratio Ip = Is × (Ns / Np).
  example: []
  syntax:
    content: public static double PrimaryCurrent(double secondaryCurrent, double primaryTurns, double secondaryTurns)
    parameters:
    - id: secondaryCurrent
      type: System.Double
      description: Secondary current in amperes (A).
    - id: primaryTurns
      type: System.Double
      description: Number of primary turns.
    - id: secondaryTurns
      type: System.Double
      description: Number of secondary turns.
    return:
      type: System.Double
      description: Primary current in amperes (A).
    content.vb: Public Shared Function PrimaryCurrent(secondaryCurrent As Double, primaryTurns As Double, secondaryTurns As Double) As Double
  overload: CircuitTool.TransformerCalculator.PrimaryCurrent*
  nameWithType.vb: TransformerCalculator.PrimaryCurrent(Double, Double, Double)
  fullName.vb: CircuitTool.TransformerCalculator.PrimaryCurrent(Double, Double, Double)
  name.vb: PrimaryCurrent(Double, Double, Double)
- uid: CircuitTool.TransformerCalculator.TurnsRatio(System.Double,System.Double)
  commentId: M:CircuitTool.TransformerCalculator.TurnsRatio(System.Double,System.Double)
  id: TurnsRatio(System.Double,System.Double)
  parent: CircuitTool.TransformerCalculator
  langs:
  - csharp
  - vb
  name: TurnsRatio(double, double)
  nameWithType: TransformerCalculator.TurnsRatio(double, double)
  fullName: CircuitTool.TransformerCalculator.TurnsRatio(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/TransformerCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: TurnsRatio
    path: ../src/Calculators/TransformerCalculator.cs
    startLine: 45
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates the turns ratio of a transformer (Np / Ns).
  example: []
  syntax:
    content: public static double TurnsRatio(double primaryTurns, double secondaryTurns)
    parameters:
    - id: primaryTurns
      type: System.Double
      description: Number of primary turns.
    - id: secondaryTurns
      type: System.Double
      description: Number of secondary turns.
    return:
      type: System.Double
      description: Turns ratio (unitless).
    content.vb: Public Shared Function TurnsRatio(primaryTurns As Double, secondaryTurns As Double) As Double
  overload: CircuitTool.TransformerCalculator.TurnsRatio*
  nameWithType.vb: TransformerCalculator.TurnsRatio(Double, Double)
  fullName.vb: CircuitTool.TransformerCalculator.TurnsRatio(Double, Double)
  name.vb: TurnsRatio(Double, Double)
- uid: CircuitTool.TransformerCalculator.VoltageRatio(System.Double,System.Double)
  commentId: M:CircuitTool.TransformerCalculator.VoltageRatio(System.Double,System.Double)
  id: VoltageRatio(System.Double,System.Double)
  parent: CircuitTool.TransformerCalculator
  langs:
  - csharp
  - vb
  name: VoltageRatio(double, double)
  nameWithType: TransformerCalculator.VoltageRatio(double, double)
  fullName: CircuitTool.TransformerCalculator.VoltageRatio(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/TransformerCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: VoltageRatio
    path: ../src/Calculators/TransformerCalculator.cs
    startLine: 59
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates the voltage ratio of a transformer (Vp / Vs).
  example: []
  syntax:
    content: public static double VoltageRatio(double primaryVoltage, double secondaryVoltage)
    parameters:
    - id: primaryVoltage
      type: System.Double
      description: Primary voltage in volts (V).
    - id: secondaryVoltage
      type: System.Double
      description: Secondary voltage in volts (V).
    return:
      type: System.Double
      description: Voltage ratio (unitless).
    content.vb: Public Shared Function VoltageRatio(primaryVoltage As Double, secondaryVoltage As Double) As Double
  overload: CircuitTool.TransformerCalculator.VoltageRatio*
  nameWithType.vb: TransformerCalculator.VoltageRatio(Double, Double)
  fullName.vb: CircuitTool.TransformerCalculator.VoltageRatio(Double, Double)
  name.vb: VoltageRatio(Double, Double)
- uid: CircuitTool.TransformerCalculator.Efficiency(System.Double,System.Double)
  commentId: M:CircuitTool.TransformerCalculator.Efficiency(System.Double,System.Double)
  id: Efficiency(System.Double,System.Double)
  parent: CircuitTool.TransformerCalculator
  langs:
  - csharp
  - vb
  name: Efficiency(double, double)
  nameWithType: TransformerCalculator.Efficiency(double, double)
  fullName: CircuitTool.TransformerCalculator.Efficiency(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/TransformerCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Efficiency
    path: ../src/Calculators/TransformerCalculator.cs
    startLine: 73
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates the transformer efficiency using η = (Pout / Pin) × 100%.
  example: []
  syntax:
    content: public static double Efficiency(double outputPower, double inputPower)
    parameters:
    - id: outputPower
      type: System.Double
      description: Output power in watts (W).
    - id: inputPower
      type: System.Double
      description: Input power in watts (W).
    return:
      type: System.Double
      description: Efficiency as a percentage (%).
    content.vb: Public Shared Function Efficiency(outputPower As Double, inputPower As Double) As Double
  overload: CircuitTool.TransformerCalculator.Efficiency*
  nameWithType.vb: TransformerCalculator.Efficiency(Double, Double)
  fullName.vb: CircuitTool.TransformerCalculator.Efficiency(Double, Double)
  name.vb: Efficiency(Double, Double)
- uid: CircuitTool.TransformerCalculator.PowerLoss(System.Double,System.Double)
  commentId: M:CircuitTool.TransformerCalculator.PowerLoss(System.Double,System.Double)
  id: PowerLoss(System.Double,System.Double)
  parent: CircuitTool.TransformerCalculator
  langs:
  - csharp
  - vb
  name: PowerLoss(double, double)
  nameWithType: TransformerCalculator.PowerLoss(double, double)
  fullName: CircuitTool.TransformerCalculator.PowerLoss(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/TransformerCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: PowerLoss
    path: ../src/Calculators/TransformerCalculator.cs
    startLine: 89
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates the power losses in a transformer.
  example: []
  syntax:
    content: public static double PowerLoss(double inputPower, double outputPower)
    parameters:
    - id: inputPower
      type: System.Double
      description: Input power in watts (W).
    - id: outputPower
      type: System.Double
      description: Output power in watts (W).
    return:
      type: System.Double
      description: Power losses in watts (W).
    content.vb: Public Shared Function PowerLoss(inputPower As Double, outputPower As Double) As Double
  overload: CircuitTool.TransformerCalculator.PowerLoss*
  nameWithType.vb: TransformerCalculator.PowerLoss(Double, Double)
  fullName.vb: CircuitTool.TransformerCalculator.PowerLoss(Double, Double)
  name.vb: PowerLoss(Double, Double)
- uid: CircuitTool.TransformerCalculator.Regulation(System.Double,System.Double)
  commentId: M:CircuitTool.TransformerCalculator.Regulation(System.Double,System.Double)
  id: Regulation(System.Double,System.Double)
  parent: CircuitTool.TransformerCalculator
  langs:
  - csharp
  - vb
  name: Regulation(double, double)
  nameWithType: TransformerCalculator.Regulation(double, double)
  fullName: CircuitTool.TransformerCalculator.Regulation(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/TransformerCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Regulation
    path: ../src/Calculators/TransformerCalculator.cs
    startLine: 105
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates the regulation of a transformer using Regulation = ((Vnl - Vfl) / Vfl) × 100%.
  example: []
  syntax:
    content: public static double Regulation(double noLoadVoltage, double fullLoadVoltage)
    parameters:
    - id: noLoadVoltage
      type: System.Double
      description: No-load voltage in volts (V).
    - id: fullLoadVoltage
      type: System.Double
      description: Full-load voltage in volts (V).
    return:
      type: System.Double
      description: Regulation as a percentage (%).
    content.vb: Public Shared Function Regulation(noLoadVoltage As Double, fullLoadVoltage As Double) As Double
  overload: CircuitTool.TransformerCalculator.Regulation*
  nameWithType.vb: TransformerCalculator.Regulation(Double, Double)
  fullName.vb: CircuitTool.TransformerCalculator.Regulation(Double, Double)
  name.vb: Regulation(Double, Double)
- uid: CircuitTool.TransformerCalculator.RequiredSecondaryTurns(System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.TransformerCalculator.RequiredSecondaryTurns(System.Double,System.Double,System.Double)
  id: RequiredSecondaryTurns(System.Double,System.Double,System.Double)
  parent: CircuitTool.TransformerCalculator
  langs:
  - csharp
  - vb
  name: RequiredSecondaryTurns(double, double, double)
  nameWithType: TransformerCalculator.RequiredSecondaryTurns(double, double, double)
  fullName: CircuitTool.TransformerCalculator.RequiredSecondaryTurns(double, double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/TransformerCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: RequiredSecondaryTurns
    path: ../src/Calculators/TransformerCalculator.cs
    startLine: 120
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates the required number of secondary turns for a desired voltage.
  example: []
  syntax:
    content: public static double RequiredSecondaryTurns(double primaryVoltage, double secondaryVoltage, double primaryTurns)
    parameters:
    - id: primaryVoltage
      type: System.Double
      description: Primary voltage in volts (V).
    - id: secondaryVoltage
      type: System.Double
      description: Desired secondary voltage in volts (V).
    - id: primaryTurns
      type: System.Double
      description: Number of primary turns.
    return:
      type: System.Double
      description: Required number of secondary turns.
    content.vb: Public Shared Function RequiredSecondaryTurns(primaryVoltage As Double, secondaryVoltage As Double, primaryTurns As Double) As Double
  overload: CircuitTool.TransformerCalculator.RequiredSecondaryTurns*
  nameWithType.vb: TransformerCalculator.RequiredSecondaryTurns(Double, Double, Double)
  fullName.vb: CircuitTool.TransformerCalculator.RequiredSecondaryTurns(Double, Double, Double)
  name.vb: RequiredSecondaryTurns(Double, Double, Double)
- uid: CircuitTool.TransformerCalculator.ApparentPower(System.Double,System.Double)
  commentId: M:CircuitTool.TransformerCalculator.ApparentPower(System.Double,System.Double)
  id: ApparentPower(System.Double,System.Double)
  parent: CircuitTool.TransformerCalculator
  langs:
  - csharp
  - vb
  name: ApparentPower(double, double)
  nameWithType: TransformerCalculator.ApparentPower(double, double)
  fullName: CircuitTool.TransformerCalculator.ApparentPower(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/TransformerCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ApparentPower
    path: ../src/Calculators/TransformerCalculator.cs
    startLine: 136
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates the apparent power rating of a transformer.
  example: []
  syntax:
    content: public static double ApparentPower(double voltage, double current)
    parameters:
    - id: voltage
      type: System.Double
      description: Voltage in volts (V).
    - id: current
      type: System.Double
      description: Current in amperes (A).
    return:
      type: System.Double
      description: Apparent power in volt-amperes (VA).
    content.vb: Public Shared Function ApparentPower(voltage As Double, current As Double) As Double
  overload: CircuitTool.TransformerCalculator.ApparentPower*
  nameWithType.vb: TransformerCalculator.ApparentPower(Double, Double)
  fullName.vb: CircuitTool.TransformerCalculator.ApparentPower(Double, Double)
  name.vb: ApparentPower(Double, Double)
references:
- uid: CircuitTool
  commentId: N:CircuitTool
  href: CircuitTool.html
  name: CircuitTool
  nameWithType: CircuitTool
  fullName: CircuitTool
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CircuitTool.TransformerCalculator.SecondaryVoltage*
  commentId: Overload:CircuitTool.TransformerCalculator.SecondaryVoltage
  href: CircuitTool.TransformerCalculator.html#CircuitTool_TransformerCalculator_SecondaryVoltage_System_Double_System_Double_System_Double_
  name: SecondaryVoltage
  nameWithType: TransformerCalculator.SecondaryVoltage
  fullName: CircuitTool.TransformerCalculator.SecondaryVoltage
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: CircuitTool.TransformerCalculator.PrimaryCurrent*
  commentId: Overload:CircuitTool.TransformerCalculator.PrimaryCurrent
  href: CircuitTool.TransformerCalculator.html#CircuitTool_TransformerCalculator_PrimaryCurrent_System_Double_System_Double_System_Double_
  name: PrimaryCurrent
  nameWithType: TransformerCalculator.PrimaryCurrent
  fullName: CircuitTool.TransformerCalculator.PrimaryCurrent
- uid: CircuitTool.TransformerCalculator.TurnsRatio*
  commentId: Overload:CircuitTool.TransformerCalculator.TurnsRatio
  href: CircuitTool.TransformerCalculator.html#CircuitTool_TransformerCalculator_TurnsRatio_System_Double_System_Double_
  name: TurnsRatio
  nameWithType: TransformerCalculator.TurnsRatio
  fullName: CircuitTool.TransformerCalculator.TurnsRatio
- uid: CircuitTool.TransformerCalculator.VoltageRatio*
  commentId: Overload:CircuitTool.TransformerCalculator.VoltageRatio
  href: CircuitTool.TransformerCalculator.html#CircuitTool_TransformerCalculator_VoltageRatio_System_Double_System_Double_
  name: VoltageRatio
  nameWithType: TransformerCalculator.VoltageRatio
  fullName: CircuitTool.TransformerCalculator.VoltageRatio
- uid: CircuitTool.TransformerCalculator.Efficiency*
  commentId: Overload:CircuitTool.TransformerCalculator.Efficiency
  href: CircuitTool.TransformerCalculator.html#CircuitTool_TransformerCalculator_Efficiency_System_Double_System_Double_
  name: Efficiency
  nameWithType: TransformerCalculator.Efficiency
  fullName: CircuitTool.TransformerCalculator.Efficiency
- uid: CircuitTool.TransformerCalculator.PowerLoss*
  commentId: Overload:CircuitTool.TransformerCalculator.PowerLoss
  href: CircuitTool.TransformerCalculator.html#CircuitTool_TransformerCalculator_PowerLoss_System_Double_System_Double_
  name: PowerLoss
  nameWithType: TransformerCalculator.PowerLoss
  fullName: CircuitTool.TransformerCalculator.PowerLoss
- uid: CircuitTool.TransformerCalculator.Regulation*
  commentId: Overload:CircuitTool.TransformerCalculator.Regulation
  href: CircuitTool.TransformerCalculator.html#CircuitTool_TransformerCalculator_Regulation_System_Double_System_Double_
  name: Regulation
  nameWithType: TransformerCalculator.Regulation
  fullName: CircuitTool.TransformerCalculator.Regulation
- uid: CircuitTool.TransformerCalculator.RequiredSecondaryTurns*
  commentId: Overload:CircuitTool.TransformerCalculator.RequiredSecondaryTurns
  href: CircuitTool.TransformerCalculator.html#CircuitTool_TransformerCalculator_RequiredSecondaryTurns_System_Double_System_Double_System_Double_
  name: RequiredSecondaryTurns
  nameWithType: TransformerCalculator.RequiredSecondaryTurns
  fullName: CircuitTool.TransformerCalculator.RequiredSecondaryTurns
- uid: CircuitTool.TransformerCalculator.ApparentPower*
  commentId: Overload:CircuitTool.TransformerCalculator.ApparentPower
  href: CircuitTool.TransformerCalculator.html#CircuitTool_TransformerCalculator_ApparentPower_System_Double_System_Double_
  name: ApparentPower
  nameWithType: TransformerCalculator.ApparentPower
  fullName: CircuitTool.TransformerCalculator.ApparentPower
