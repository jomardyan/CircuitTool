### YamlMime:ManagedReference
items:
- uid: CircuitTool.Units.Resistance
  commentId: T:CircuitTool.Units.Resistance
  id: Resistance
  parent: CircuitTool.Units
  children:
  - CircuitTool.Units.Resistance.#ctor(System.Double,CircuitTool.Units.ResistanceUnit)
  - CircuitTool.Units.Resistance.CompareTo(CircuitTool.Units.Resistance)
  - CircuitTool.Units.Resistance.Equals(CircuitTool.Units.Resistance)
  - CircuitTool.Units.Resistance.Equals(System.Object)
  - CircuitTool.Units.Resistance.GetHashCode
  - CircuitTool.Units.Resistance.GetValue(CircuitTool.Units.ResistanceUnit)
  - CircuitTool.Units.Resistance.Kiloohms
  - CircuitTool.Units.Resistance.Megaohms
  - CircuitTool.Units.Resistance.Ohms
  - CircuitTool.Units.Resistance.ToString
  - CircuitTool.Units.Resistance.ToString(CircuitTool.Units.ResistanceUnit)
  - CircuitTool.Units.Resistance.op_Addition(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  - CircuitTool.Units.Resistance.op_BitwiseAnd(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  - CircuitTool.Units.Resistance.op_Division(CircuitTool.Units.Resistance,System.Double)
  - CircuitTool.Units.Resistance.op_Equality(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  - CircuitTool.Units.Resistance.op_GreaterThan(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  - CircuitTool.Units.Resistance.op_GreaterThanOrEqual(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  - CircuitTool.Units.Resistance.op_Implicit(CircuitTool.Units.Resistance)~System.Double
  - CircuitTool.Units.Resistance.op_Implicit(System.Double)~CircuitTool.Units.Resistance
  - CircuitTool.Units.Resistance.op_Inequality(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  - CircuitTool.Units.Resistance.op_LessThan(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  - CircuitTool.Units.Resistance.op_LessThanOrEqual(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  - CircuitTool.Units.Resistance.op_Multiply(CircuitTool.Units.Resistance,System.Double)
  - CircuitTool.Units.Resistance.op_Subtraction(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  langs:
  - csharp
  - vb
  name: Resistance
  nameWithType: Resistance
  fullName: CircuitTool.Units.Resistance
  type: Struct
  source:
    remote:
      path: src/Units/ResistanceUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Resistance
    path: ../src/Units/ResistanceUnit.cs
    startLine: 25
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  summary: Represents a strongly-typed resistance measurement with automatic unit conversion
  example: []
  syntax:
    content: 'public readonly struct Resistance : IEquatable<Resistance>, IComparable<Resistance>'
    content.vb: Public Structure Resistance Implements IEquatable(Of Resistance), IComparable(Of Resistance)
  implements:
  - System.IEquatable{CircuitTool.Units.Resistance}
  - System.IComparable{CircuitTool.Units.Resistance}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: CircuitTool.Units.Resistance.#ctor(System.Double,CircuitTool.Units.ResistanceUnit)
  commentId: M:CircuitTool.Units.Resistance.#ctor(System.Double,CircuitTool.Units.ResistanceUnit)
  id: '#ctor(System.Double,CircuitTool.Units.ResistanceUnit)'
  parent: CircuitTool.Units.Resistance
  langs:
  - csharp
  - vb
  name: Resistance(double, ResistanceUnit)
  nameWithType: Resistance.Resistance(double, ResistanceUnit)
  fullName: CircuitTool.Units.Resistance.Resistance(double, CircuitTool.Units.ResistanceUnit)
  type: Constructor
  source:
    remote:
      path: src/Units/ResistanceUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: .ctor
    path: ../src/Units/ResistanceUnit.cs
    startLine: 34
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  summary: Creates a new resistance measurement
  example: []
  syntax:
    content: public Resistance(double value, ResistanceUnit unit)
    parameters:
    - id: value
      type: System.Double
      description: The value in the specified unit
    - id: unit
      type: CircuitTool.Units.ResistanceUnit
      description: The unit of measurement
    content.vb: Public Sub New(value As Double, unit As ResistanceUnit)
  overload: CircuitTool.Units.Resistance.#ctor*
  nameWithType.vb: Resistance.New(Double, ResistanceUnit)
  fullName.vb: CircuitTool.Units.Resistance.New(Double, CircuitTool.Units.ResistanceUnit)
  name.vb: New(Double, ResistanceUnit)
- uid: CircuitTool.Units.Resistance.Ohms
  commentId: P:CircuitTool.Units.Resistance.Ohms
  id: Ohms
  parent: CircuitTool.Units.Resistance
  langs:
  - csharp
  - vb
  name: Ohms
  nameWithType: Resistance.Ohms
  fullName: CircuitTool.Units.Resistance.Ohms
  type: Property
  source:
    remote:
      path: src/Units/ResistanceUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Ohms
    path: ../src/Units/ResistanceUnit.cs
    startLine: 45
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  summary: Gets the resistance value in ohms
  example: []
  syntax:
    content: public double Ohms { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Ohms As Double
  overload: CircuitTool.Units.Resistance.Ohms*
- uid: CircuitTool.Units.Resistance.Kiloohms
  commentId: P:CircuitTool.Units.Resistance.Kiloohms
  id: Kiloohms
  parent: CircuitTool.Units.Resistance
  langs:
  - csharp
  - vb
  name: Kiloohms
  nameWithType: Resistance.Kiloohms
  fullName: CircuitTool.Units.Resistance.Kiloohms
  type: Property
  source:
    remote:
      path: src/Units/ResistanceUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Kiloohms
    path: ../src/Units/ResistanceUnit.cs
    startLine: 50
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  summary: Gets the resistance value in kiloohms
  example: []
  syntax:
    content: public double Kiloohms { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Kiloohms As Double
  overload: CircuitTool.Units.Resistance.Kiloohms*
- uid: CircuitTool.Units.Resistance.Megaohms
  commentId: P:CircuitTool.Units.Resistance.Megaohms
  id: Megaohms
  parent: CircuitTool.Units.Resistance
  langs:
  - csharp
  - vb
  name: Megaohms
  nameWithType: Resistance.Megaohms
  fullName: CircuitTool.Units.Resistance.Megaohms
  type: Property
  source:
    remote:
      path: src/Units/ResistanceUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Megaohms
    path: ../src/Units/ResistanceUnit.cs
    startLine: 55
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  summary: Gets the resistance value in megaohms
  example: []
  syntax:
    content: public double Megaohms { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Megaohms As Double
  overload: CircuitTool.Units.Resistance.Megaohms*
- uid: CircuitTool.Units.Resistance.GetValue(CircuitTool.Units.ResistanceUnit)
  commentId: M:CircuitTool.Units.Resistance.GetValue(CircuitTool.Units.ResistanceUnit)
  id: GetValue(CircuitTool.Units.ResistanceUnit)
  parent: CircuitTool.Units.Resistance
  langs:
  - csharp
  - vb
  name: GetValue(ResistanceUnit)
  nameWithType: Resistance.GetValue(ResistanceUnit)
  fullName: CircuitTool.Units.Resistance.GetValue(CircuitTool.Units.ResistanceUnit)
  type: Method
  source:
    remote:
      path: src/Units/ResistanceUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: GetValue
    path: ../src/Units/ResistanceUnit.cs
    startLine: 62
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  summary: Gets the resistance value in the specified unit
  example: []
  syntax:
    content: public double GetValue(ResistanceUnit unit)
    parameters:
    - id: unit
      type: CircuitTool.Units.ResistanceUnit
      description: The desired unit
    return:
      type: System.Double
      description: The resistance value in the specified unit
    content.vb: Public Function GetValue(unit As ResistanceUnit) As Double
  overload: CircuitTool.Units.Resistance.GetValue*
- uid: CircuitTool.Units.Resistance.op_Addition(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  commentId: M:CircuitTool.Units.Resistance.op_Addition(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  id: op_Addition(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  parent: CircuitTool.Units.Resistance
  langs:
  - csharp
  - vb
  name: operator +(Resistance, Resistance)
  nameWithType: Resistance.operator +(Resistance, Resistance)
  fullName: CircuitTool.Units.Resistance.operator +(CircuitTool.Units.Resistance, CircuitTool.Units.Resistance)
  type: Operator
  source:
    remote:
      path: src/Units/ResistanceUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Addition
    path: ../src/Units/ResistanceUnit.cs
    startLine: 89
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  syntax:
    content: public static Resistance operator +(Resistance left, Resistance right)
    parameters:
    - id: left
      type: CircuitTool.Units.Resistance
    - id: right
      type: CircuitTool.Units.Resistance
    return:
      type: CircuitTool.Units.Resistance
    content.vb: Public Shared Operator +(left As Resistance, right As Resistance) As Resistance
  overload: CircuitTool.Units.Resistance.op_Addition*
  nameWithType.vb: Resistance.+(Resistance, Resistance)
  fullName.vb: CircuitTool.Units.Resistance.+(CircuitTool.Units.Resistance, CircuitTool.Units.Resistance)
  name.vb: +(Resistance, Resistance)
- uid: CircuitTool.Units.Resistance.op_Subtraction(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  commentId: M:CircuitTool.Units.Resistance.op_Subtraction(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  id: op_Subtraction(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  parent: CircuitTool.Units.Resistance
  langs:
  - csharp
  - vb
  name: operator -(Resistance, Resistance)
  nameWithType: Resistance.operator -(Resistance, Resistance)
  fullName: CircuitTool.Units.Resistance.operator -(CircuitTool.Units.Resistance, CircuitTool.Units.Resistance)
  type: Operator
  source:
    remote:
      path: src/Units/ResistanceUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Subtraction
    path: ../src/Units/ResistanceUnit.cs
    startLine: 90
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  syntax:
    content: public static Resistance operator -(Resistance left, Resistance right)
    parameters:
    - id: left
      type: CircuitTool.Units.Resistance
    - id: right
      type: CircuitTool.Units.Resistance
    return:
      type: CircuitTool.Units.Resistance
    content.vb: Public Shared Operator -(left As Resistance, right As Resistance) As Resistance
  overload: CircuitTool.Units.Resistance.op_Subtraction*
  nameWithType.vb: Resistance.-(Resistance, Resistance)
  fullName.vb: CircuitTool.Units.Resistance.-(CircuitTool.Units.Resistance, CircuitTool.Units.Resistance)
  name.vb: -(Resistance, Resistance)
- uid: CircuitTool.Units.Resistance.op_Multiply(CircuitTool.Units.Resistance,System.Double)
  commentId: M:CircuitTool.Units.Resistance.op_Multiply(CircuitTool.Units.Resistance,System.Double)
  id: op_Multiply(CircuitTool.Units.Resistance,System.Double)
  parent: CircuitTool.Units.Resistance
  langs:
  - csharp
  - vb
  name: operator *(Resistance, double)
  nameWithType: Resistance.operator *(Resistance, double)
  fullName: CircuitTool.Units.Resistance.operator *(CircuitTool.Units.Resistance, double)
  type: Operator
  source:
    remote:
      path: src/Units/ResistanceUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Multiply
    path: ../src/Units/ResistanceUnit.cs
    startLine: 91
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  syntax:
    content: public static Resistance operator *(Resistance resistance, double multiplier)
    parameters:
    - id: resistance
      type: CircuitTool.Units.Resistance
    - id: multiplier
      type: System.Double
    return:
      type: CircuitTool.Units.Resistance
    content.vb: Public Shared Operator *(resistance As Resistance, multiplier As Double) As Resistance
  overload: CircuitTool.Units.Resistance.op_Multiply*
  nameWithType.vb: Resistance.*(Resistance, Double)
  fullName.vb: CircuitTool.Units.Resistance.*(CircuitTool.Units.Resistance, Double)
  name.vb: '*(Resistance, Double)'
- uid: CircuitTool.Units.Resistance.op_Division(CircuitTool.Units.Resistance,System.Double)
  commentId: M:CircuitTool.Units.Resistance.op_Division(CircuitTool.Units.Resistance,System.Double)
  id: op_Division(CircuitTool.Units.Resistance,System.Double)
  parent: CircuitTool.Units.Resistance
  langs:
  - csharp
  - vb
  name: operator /(Resistance, double)
  nameWithType: Resistance.operator /(Resistance, double)
  fullName: CircuitTool.Units.Resistance.operator /(CircuitTool.Units.Resistance, double)
  type: Operator
  source:
    remote:
      path: src/Units/ResistanceUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Division
    path: ../src/Units/ResistanceUnit.cs
    startLine: 92
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  syntax:
    content: public static Resistance operator /(Resistance resistance, double divisor)
    parameters:
    - id: resistance
      type: CircuitTool.Units.Resistance
    - id: divisor
      type: System.Double
    return:
      type: CircuitTool.Units.Resistance
    content.vb: Public Shared Operator /(resistance As Resistance, divisor As Double) As Resistance
  overload: CircuitTool.Units.Resistance.op_Division*
  nameWithType.vb: Resistance./(Resistance, Double)
  fullName.vb: CircuitTool.Units.Resistance./(CircuitTool.Units.Resistance, Double)
  name.vb: /(Resistance, Double)
- uid: CircuitTool.Units.Resistance.op_BitwiseAnd(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  commentId: M:CircuitTool.Units.Resistance.op_BitwiseAnd(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  id: op_BitwiseAnd(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  parent: CircuitTool.Units.Resistance
  langs:
  - csharp
  - vb
  name: operator &(Resistance, Resistance)
  nameWithType: Resistance.operator &(Resistance, Resistance)
  fullName: CircuitTool.Units.Resistance.operator &(CircuitTool.Units.Resistance, CircuitTool.Units.Resistance)
  type: Operator
  source:
    remote:
      path: src/Units/ResistanceUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_BitwiseAnd
    path: ../src/Units/ResistanceUnit.cs
    startLine: 99
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  syntax:
    content: public static Resistance operator &(Resistance r1, Resistance r2)
    parameters:
    - id: r1
      type: CircuitTool.Units.Resistance
    - id: r2
      type: CircuitTool.Units.Resistance
    return:
      type: CircuitTool.Units.Resistance
    content.vb: Public Shared Operator And(r1 As Resistance, r2 As Resistance) As Resistance
  overload: CircuitTool.Units.Resistance.op_BitwiseAnd*
  nameWithType.vb: Resistance.And(Resistance, Resistance)
  fullName.vb: CircuitTool.Units.Resistance.And(CircuitTool.Units.Resistance, CircuitTool.Units.Resistance)
  name.vb: And(Resistance, Resistance)
- uid: CircuitTool.Units.Resistance.op_Equality(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  commentId: M:CircuitTool.Units.Resistance.op_Equality(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  id: op_Equality(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  parent: CircuitTool.Units.Resistance
  langs:
  - csharp
  - vb
  name: operator ==(Resistance, Resistance)
  nameWithType: Resistance.operator ==(Resistance, Resistance)
  fullName: CircuitTool.Units.Resistance.operator ==(CircuitTool.Units.Resistance, CircuitTool.Units.Resistance)
  type: Operator
  source:
    remote:
      path: src/Units/ResistanceUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Equality
    path: ../src/Units/ResistanceUnit.cs
    startLine: 102
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  syntax:
    content: public static bool operator ==(Resistance left, Resistance right)
    parameters:
    - id: left
      type: CircuitTool.Units.Resistance
    - id: right
      type: CircuitTool.Units.Resistance
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As Resistance, right As Resistance) As Boolean
  overload: CircuitTool.Units.Resistance.op_Equality*
  nameWithType.vb: Resistance.=(Resistance, Resistance)
  fullName.vb: CircuitTool.Units.Resistance.=(CircuitTool.Units.Resistance, CircuitTool.Units.Resistance)
  name.vb: =(Resistance, Resistance)
- uid: CircuitTool.Units.Resistance.op_Inequality(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  commentId: M:CircuitTool.Units.Resistance.op_Inequality(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  id: op_Inequality(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  parent: CircuitTool.Units.Resistance
  langs:
  - csharp
  - vb
  name: operator !=(Resistance, Resistance)
  nameWithType: Resistance.operator !=(Resistance, Resistance)
  fullName: CircuitTool.Units.Resistance.operator !=(CircuitTool.Units.Resistance, CircuitTool.Units.Resistance)
  type: Operator
  source:
    remote:
      path: src/Units/ResistanceUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Inequality
    path: ../src/Units/ResistanceUnit.cs
    startLine: 103
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  syntax:
    content: public static bool operator !=(Resistance left, Resistance right)
    parameters:
    - id: left
      type: CircuitTool.Units.Resistance
    - id: right
      type: CircuitTool.Units.Resistance
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As Resistance, right As Resistance) As Boolean
  overload: CircuitTool.Units.Resistance.op_Inequality*
  nameWithType.vb: Resistance.<>(Resistance, Resistance)
  fullName.vb: CircuitTool.Units.Resistance.<>(CircuitTool.Units.Resistance, CircuitTool.Units.Resistance)
  name.vb: <>(Resistance, Resistance)
- uid: CircuitTool.Units.Resistance.op_LessThan(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  commentId: M:CircuitTool.Units.Resistance.op_LessThan(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  id: op_LessThan(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  parent: CircuitTool.Units.Resistance
  langs:
  - csharp
  - vb
  name: operator <(Resistance, Resistance)
  nameWithType: Resistance.operator <(Resistance, Resistance)
  fullName: CircuitTool.Units.Resistance.operator <(CircuitTool.Units.Resistance, CircuitTool.Units.Resistance)
  type: Operator
  source:
    remote:
      path: src/Units/ResistanceUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_LessThan
    path: ../src/Units/ResistanceUnit.cs
    startLine: 104
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  syntax:
    content: public static bool operator <(Resistance left, Resistance right)
    parameters:
    - id: left
      type: CircuitTool.Units.Resistance
    - id: right
      type: CircuitTool.Units.Resistance
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <(left As Resistance, right As Resistance) As Boolean
  overload: CircuitTool.Units.Resistance.op_LessThan*
  nameWithType.vb: Resistance.<(Resistance, Resistance)
  fullName.vb: CircuitTool.Units.Resistance.<(CircuitTool.Units.Resistance, CircuitTool.Units.Resistance)
  name.vb: <(Resistance, Resistance)
- uid: CircuitTool.Units.Resistance.op_GreaterThan(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  commentId: M:CircuitTool.Units.Resistance.op_GreaterThan(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  id: op_GreaterThan(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  parent: CircuitTool.Units.Resistance
  langs:
  - csharp
  - vb
  name: operator >(Resistance, Resistance)
  nameWithType: Resistance.operator >(Resistance, Resistance)
  fullName: CircuitTool.Units.Resistance.operator >(CircuitTool.Units.Resistance, CircuitTool.Units.Resistance)
  type: Operator
  source:
    remote:
      path: src/Units/ResistanceUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_GreaterThan
    path: ../src/Units/ResistanceUnit.cs
    startLine: 105
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  syntax:
    content: public static bool operator >(Resistance left, Resistance right)
    parameters:
    - id: left
      type: CircuitTool.Units.Resistance
    - id: right
      type: CircuitTool.Units.Resistance
    return:
      type: System.Boolean
    content.vb: Public Shared Operator >(left As Resistance, right As Resistance) As Boolean
  overload: CircuitTool.Units.Resistance.op_GreaterThan*
  nameWithType.vb: Resistance.>(Resistance, Resistance)
  fullName.vb: CircuitTool.Units.Resistance.>(CircuitTool.Units.Resistance, CircuitTool.Units.Resistance)
  name.vb: '>(Resistance, Resistance)'
- uid: CircuitTool.Units.Resistance.op_LessThanOrEqual(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  commentId: M:CircuitTool.Units.Resistance.op_LessThanOrEqual(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  id: op_LessThanOrEqual(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  parent: CircuitTool.Units.Resistance
  langs:
  - csharp
  - vb
  name: operator <=(Resistance, Resistance)
  nameWithType: Resistance.operator <=(Resistance, Resistance)
  fullName: CircuitTool.Units.Resistance.operator <=(CircuitTool.Units.Resistance, CircuitTool.Units.Resistance)
  type: Operator
  source:
    remote:
      path: src/Units/ResistanceUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_LessThanOrEqual
    path: ../src/Units/ResistanceUnit.cs
    startLine: 106
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  syntax:
    content: public static bool operator <=(Resistance left, Resistance right)
    parameters:
    - id: left
      type: CircuitTool.Units.Resistance
    - id: right
      type: CircuitTool.Units.Resistance
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <=(left As Resistance, right As Resistance) As Boolean
  overload: CircuitTool.Units.Resistance.op_LessThanOrEqual*
  nameWithType.vb: Resistance.<=(Resistance, Resistance)
  fullName.vb: CircuitTool.Units.Resistance.<=(CircuitTool.Units.Resistance, CircuitTool.Units.Resistance)
  name.vb: <=(Resistance, Resistance)
- uid: CircuitTool.Units.Resistance.op_GreaterThanOrEqual(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  commentId: M:CircuitTool.Units.Resistance.op_GreaterThanOrEqual(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  id: op_GreaterThanOrEqual(CircuitTool.Units.Resistance,CircuitTool.Units.Resistance)
  parent: CircuitTool.Units.Resistance
  langs:
  - csharp
  - vb
  name: operator >=(Resistance, Resistance)
  nameWithType: Resistance.operator >=(Resistance, Resistance)
  fullName: CircuitTool.Units.Resistance.operator >=(CircuitTool.Units.Resistance, CircuitTool.Units.Resistance)
  type: Operator
  source:
    remote:
      path: src/Units/ResistanceUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_GreaterThanOrEqual
    path: ../src/Units/ResistanceUnit.cs
    startLine: 107
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  syntax:
    content: public static bool operator >=(Resistance left, Resistance right)
    parameters:
    - id: left
      type: CircuitTool.Units.Resistance
    - id: right
      type: CircuitTool.Units.Resistance
    return:
      type: System.Boolean
    content.vb: Public Shared Operator >=(left As Resistance, right As Resistance) As Boolean
  overload: CircuitTool.Units.Resistance.op_GreaterThanOrEqual*
  nameWithType.vb: Resistance.>=(Resistance, Resistance)
  fullName.vb: CircuitTool.Units.Resistance.>=(CircuitTool.Units.Resistance, CircuitTool.Units.Resistance)
  name.vb: '>=(Resistance, Resistance)'
- uid: CircuitTool.Units.Resistance.op_Implicit(System.Double)~CircuitTool.Units.Resistance
  commentId: M:CircuitTool.Units.Resistance.op_Implicit(System.Double)~CircuitTool.Units.Resistance
  id: op_Implicit(System.Double)~CircuitTool.Units.Resistance
  parent: CircuitTool.Units.Resistance
  langs:
  - csharp
  - vb
  name: implicit operator Resistance(double)
  nameWithType: Resistance.implicit operator Resistance(double)
  fullName: CircuitTool.Units.Resistance.implicit operator CircuitTool.Units.Resistance(double)
  type: Operator
  source:
    remote:
      path: src/Units/ResistanceUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Implicit
    path: ../src/Units/ResistanceUnit.cs
    startLine: 110
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  syntax:
    content: public static implicit operator Resistance(double ohms)
    parameters:
    - id: ohms
      type: System.Double
    return:
      type: CircuitTool.Units.Resistance
    content.vb: Public Shared Widening Operator CType(ohms As Double) As Resistance
  overload: CircuitTool.Units.Resistance.op_Implicit*
  nameWithType.vb: Resistance.CType(Double)
  fullName.vb: CircuitTool.Units.Resistance.CType(Double)
  name.vb: CType(Double)
- uid: CircuitTool.Units.Resistance.op_Implicit(CircuitTool.Units.Resistance)~System.Double
  commentId: M:CircuitTool.Units.Resistance.op_Implicit(CircuitTool.Units.Resistance)~System.Double
  id: op_Implicit(CircuitTool.Units.Resistance)~System.Double
  parent: CircuitTool.Units.Resistance
  langs:
  - csharp
  - vb
  name: implicit operator double(Resistance)
  nameWithType: Resistance.implicit operator double(Resistance)
  fullName: CircuitTool.Units.Resistance.implicit operator double(CircuitTool.Units.Resistance)
  type: Operator
  source:
    remote:
      path: src/Units/ResistanceUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Implicit
    path: ../src/Units/ResistanceUnit.cs
    startLine: 111
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  syntax:
    content: public static implicit operator double(Resistance resistance)
    parameters:
    - id: resistance
      type: CircuitTool.Units.Resistance
    return:
      type: System.Double
    content.vb: Public Shared Widening Operator CType(resistance As Resistance) As Double
  overload: CircuitTool.Units.Resistance.op_Implicit*
  nameWithType.vb: Resistance.CType(Resistance)
  fullName.vb: CircuitTool.Units.Resistance.CType(CircuitTool.Units.Resistance)
  name.vb: CType(Resistance)
- uid: CircuitTool.Units.Resistance.Equals(CircuitTool.Units.Resistance)
  commentId: M:CircuitTool.Units.Resistance.Equals(CircuitTool.Units.Resistance)
  id: Equals(CircuitTool.Units.Resistance)
  parent: CircuitTool.Units.Resistance
  langs:
  - csharp
  - vb
  name: Equals(Resistance)
  nameWithType: Resistance.Equals(Resistance)
  fullName: CircuitTool.Units.Resistance.Equals(CircuitTool.Units.Resistance)
  type: Method
  source:
    remote:
      path: src/Units/ResistanceUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Equals
    path: ../src/Units/ResistanceUnit.cs
    startLine: 113
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(Resistance other)
    parameters:
    - id: other
      type: CircuitTool.Units.Resistance
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As Resistance) As Boolean
  overload: CircuitTool.Units.Resistance.Equals*
  implements:
  - System.IEquatable{CircuitTool.Units.Resistance}.Equals(CircuitTool.Units.Resistance)
- uid: CircuitTool.Units.Resistance.Equals(System.Object)
  commentId: M:CircuitTool.Units.Resistance.Equals(System.Object)
  id: Equals(System.Object)
  parent: CircuitTool.Units.Resistance
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: Resistance.Equals(object?)
  fullName: CircuitTool.Units.Resistance.Equals(object?)
  type: Method
  source:
    remote:
      path: src/Units/ResistanceUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Equals
    path: ../src/Units/ResistanceUnit.cs
    startLine: 114
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: CircuitTool.Units.Resistance.Equals*
  nameWithType.vb: Resistance.Equals(Object)
  fullName.vb: CircuitTool.Units.Resistance.Equals(Object)
  name.vb: Equals(Object)
- uid: CircuitTool.Units.Resistance.GetHashCode
  commentId: M:CircuitTool.Units.Resistance.GetHashCode
  id: GetHashCode
  parent: CircuitTool.Units.Resistance
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Resistance.GetHashCode()
  fullName: CircuitTool.Units.Resistance.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Units/ResistanceUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: GetHashCode
    path: ../src/Units/ResistanceUnit.cs
    startLine: 115
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: CircuitTool.Units.Resistance.GetHashCode*
- uid: CircuitTool.Units.Resistance.CompareTo(CircuitTool.Units.Resistance)
  commentId: M:CircuitTool.Units.Resistance.CompareTo(CircuitTool.Units.Resistance)
  id: CompareTo(CircuitTool.Units.Resistance)
  parent: CircuitTool.Units.Resistance
  langs:
  - csharp
  - vb
  name: CompareTo(Resistance)
  nameWithType: Resistance.CompareTo(Resistance)
  fullName: CircuitTool.Units.Resistance.CompareTo(CircuitTool.Units.Resistance)
  type: Method
  source:
    remote:
      path: src/Units/ResistanceUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: CompareTo
    path: ../src/Units/ResistanceUnit.cs
    startLine: 116
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  summary: Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
  example: []
  syntax:
    content: public int CompareTo(Resistance other)
    parameters:
    - id: other
      type: CircuitTool.Units.Resistance
      description: An object to compare with this instance.
    return:
      type: System.Int32
      description: >-
        A value that indicates the relative order of the objects being compared. The return value has these meanings:  

         <table><thead><tr><th class="term"> Value</th><th class="description"> Meaning</th></tr></thead><tbody><tr><td class="term"> Less than zero</td><td class="description"> This instance precedes <code class="paramref">other</code> in the sort order.</td></tr><tr><td class="term"> Zero</td><td class="description"> This instance occurs in the same position in the sort order as <code class="paramref">other</code>.</td></tr><tr><td class="term"> Greater than zero</td><td class="description"> This instance follows <code class="paramref">other</code> in the sort order.</td></tr></tbody></table>
    content.vb: Public Function CompareTo(other As Resistance) As Integer
  overload: CircuitTool.Units.Resistance.CompareTo*
  implements:
  - System.IComparable{CircuitTool.Units.Resistance}.CompareTo(CircuitTool.Units.Resistance)
- uid: CircuitTool.Units.Resistance.ToString
  commentId: M:CircuitTool.Units.Resistance.ToString
  id: ToString
  parent: CircuitTool.Units.Resistance
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Resistance.ToString()
  fullName: CircuitTool.Units.Resistance.ToString()
  type: Method
  source:
    remote:
      path: src/Units/ResistanceUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ToString
    path: ../src/Units/ResistanceUnit.cs
    startLine: 118
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  summary: Returns the fully qualified type name of this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The fully qualified type name.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: CircuitTool.Units.Resistance.ToString*
- uid: CircuitTool.Units.Resistance.ToString(CircuitTool.Units.ResistanceUnit)
  commentId: M:CircuitTool.Units.Resistance.ToString(CircuitTool.Units.ResistanceUnit)
  id: ToString(CircuitTool.Units.ResistanceUnit)
  parent: CircuitTool.Units.Resistance
  langs:
  - csharp
  - vb
  name: ToString(ResistanceUnit)
  nameWithType: Resistance.ToString(ResistanceUnit)
  fullName: CircuitTool.Units.Resistance.ToString(CircuitTool.Units.ResistanceUnit)
  type: Method
  source:
    remote:
      path: src/Units/ResistanceUnit.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ToString
    path: ../src/Units/ResistanceUnit.cs
    startLine: 127
  assemblies:
  - CircuitTool
  namespace: CircuitTool.Units
  syntax:
    content: public string ToString(ResistanceUnit unit)
    parameters:
    - id: unit
      type: CircuitTool.Units.ResistanceUnit
    return:
      type: System.String
    content.vb: Public Function ToString(unit As ResistanceUnit) As String
  overload: CircuitTool.Units.Resistance.ToString*
references:
- uid: CircuitTool.Units
  commentId: N:CircuitTool.Units
  href: CircuitTool.html
  name: CircuitTool.Units
  nameWithType: CircuitTool.Units
  fullName: CircuitTool.Units
  spec.csharp:
  - uid: CircuitTool
    name: CircuitTool
    href: CircuitTool.html
  - name: .
  - uid: CircuitTool.Units
    name: Units
    href: CircuitTool.Units.html
  spec.vb:
  - uid: CircuitTool
    name: CircuitTool
    href: CircuitTool.html
  - name: .
  - uid: CircuitTool.Units
    name: Units
    href: CircuitTool.Units.html
- uid: System.IEquatable{CircuitTool.Units.Resistance}
  commentId: T:System.IEquatable{CircuitTool.Units.Resistance}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Resistance>
  nameWithType: IEquatable<Resistance>
  fullName: System.IEquatable<CircuitTool.Units.Resistance>
  nameWithType.vb: IEquatable(Of Resistance)
  fullName.vb: System.IEquatable(Of CircuitTool.Units.Resistance)
  name.vb: IEquatable(Of Resistance)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: CircuitTool.Units.Resistance
    name: Resistance
    href: CircuitTool.Units.Resistance.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: CircuitTool.Units.Resistance
    name: Resistance
    href: CircuitTool.Units.Resistance.html
  - name: )
- uid: System.IComparable{CircuitTool.Units.Resistance}
  commentId: T:System.IComparable{CircuitTool.Units.Resistance}
  parent: System
  definition: System.IComparable`1
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  name: IComparable<Resistance>
  nameWithType: IComparable<Resistance>
  fullName: System.IComparable<CircuitTool.Units.Resistance>
  nameWithType.vb: IComparable(Of Resistance)
  fullName.vb: System.IComparable(Of CircuitTool.Units.Resistance)
  name.vb: IComparable(Of Resistance)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - uid: CircuitTool.Units.Resistance
    name: Resistance
    href: CircuitTool.Units.Resistance.html
  - name: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - uid: CircuitTool.Units.Resistance
    name: Resistance
    href: CircuitTool.Units.Resistance.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: CircuitTool.Units.Resistance.#ctor*
  commentId: Overload:CircuitTool.Units.Resistance.#ctor
  href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance__ctor_System_Double_CircuitTool_Units_ResistanceUnit_
  name: Resistance
  nameWithType: Resistance.Resistance
  fullName: CircuitTool.Units.Resistance.Resistance
  nameWithType.vb: Resistance.New
  fullName.vb: CircuitTool.Units.Resistance.New
  name.vb: New
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: CircuitTool.Units.ResistanceUnit
  commentId: T:CircuitTool.Units.ResistanceUnit
  parent: CircuitTool.Units
  href: CircuitTool.Units.ResistanceUnit.html
  name: ResistanceUnit
  nameWithType: ResistanceUnit
  fullName: CircuitTool.Units.ResistanceUnit
- uid: CircuitTool.Units.Resistance.Ohms*
  commentId: Overload:CircuitTool.Units.Resistance.Ohms
  href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_Ohms
  name: Ohms
  nameWithType: Resistance.Ohms
  fullName: CircuitTool.Units.Resistance.Ohms
- uid: CircuitTool.Units.Resistance.Kiloohms*
  commentId: Overload:CircuitTool.Units.Resistance.Kiloohms
  href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_Kiloohms
  name: Kiloohms
  nameWithType: Resistance.Kiloohms
  fullName: CircuitTool.Units.Resistance.Kiloohms
- uid: CircuitTool.Units.Resistance.Megaohms*
  commentId: Overload:CircuitTool.Units.Resistance.Megaohms
  href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_Megaohms
  name: Megaohms
  nameWithType: Resistance.Megaohms
  fullName: CircuitTool.Units.Resistance.Megaohms
- uid: CircuitTool.Units.Resistance.GetValue*
  commentId: Overload:CircuitTool.Units.Resistance.GetValue
  href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_GetValue_CircuitTool_Units_ResistanceUnit_
  name: GetValue
  nameWithType: Resistance.GetValue
  fullName: CircuitTool.Units.Resistance.GetValue
- uid: CircuitTool.Units.Resistance.op_Addition*
  commentId: Overload:CircuitTool.Units.Resistance.op_Addition
  href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_op_Addition_CircuitTool_Units_Resistance_CircuitTool_Units_Resistance_
  name: operator +
  nameWithType: Resistance.operator +
  fullName: CircuitTool.Units.Resistance.operator +
  nameWithType.vb: Resistance.+
  fullName.vb: CircuitTool.Units.Resistance.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.Units.Resistance.op_Addition*
    name: +
    href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_op_Addition_CircuitTool_Units_Resistance_CircuitTool_Units_Resistance_
- uid: CircuitTool.Units.Resistance
  commentId: T:CircuitTool.Units.Resistance
  parent: CircuitTool.Units
  href: CircuitTool.Units.Resistance.html
  name: Resistance
  nameWithType: Resistance
  fullName: CircuitTool.Units.Resistance
- uid: CircuitTool.Units.Resistance.op_Subtraction*
  commentId: Overload:CircuitTool.Units.Resistance.op_Subtraction
  href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_op_Subtraction_CircuitTool_Units_Resistance_CircuitTool_Units_Resistance_
  name: operator -
  nameWithType: Resistance.operator -
  fullName: CircuitTool.Units.Resistance.operator -
  nameWithType.vb: Resistance.-
  fullName.vb: CircuitTool.Units.Resistance.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.Units.Resistance.op_Subtraction*
    name: '-'
    href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_op_Subtraction_CircuitTool_Units_Resistance_CircuitTool_Units_Resistance_
- uid: CircuitTool.Units.Resistance.op_Multiply*
  commentId: Overload:CircuitTool.Units.Resistance.op_Multiply
  href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_op_Multiply_CircuitTool_Units_Resistance_System_Double_
  name: operator *
  nameWithType: Resistance.operator *
  fullName: CircuitTool.Units.Resistance.operator *
  nameWithType.vb: Resistance.*
  fullName.vb: CircuitTool.Units.Resistance.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.Units.Resistance.op_Multiply*
    name: '*'
    href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_op_Multiply_CircuitTool_Units_Resistance_System_Double_
- uid: CircuitTool.Units.Resistance.op_Division*
  commentId: Overload:CircuitTool.Units.Resistance.op_Division
  href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_op_Division_CircuitTool_Units_Resistance_System_Double_
  name: operator /
  nameWithType: Resistance.operator /
  fullName: CircuitTool.Units.Resistance.operator /
  nameWithType.vb: Resistance./
  fullName.vb: CircuitTool.Units.Resistance./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.Units.Resistance.op_Division*
    name: /
    href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_op_Division_CircuitTool_Units_Resistance_System_Double_
- uid: CircuitTool.Units.Resistance.op_BitwiseAnd*
  commentId: Overload:CircuitTool.Units.Resistance.op_BitwiseAnd
  href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_op_BitwiseAnd_CircuitTool_Units_Resistance_CircuitTool_Units_Resistance_
  name: operator &
  nameWithType: Resistance.operator &
  fullName: CircuitTool.Units.Resistance.operator &
  nameWithType.vb: Resistance.And
  fullName.vb: CircuitTool.Units.Resistance.And
  name.vb: And
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.Units.Resistance.op_BitwiseAnd*
    name: '&'
    href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_op_BitwiseAnd_CircuitTool_Units_Resistance_CircuitTool_Units_Resistance_
- uid: CircuitTool.Units.Resistance.op_Equality*
  commentId: Overload:CircuitTool.Units.Resistance.op_Equality
  href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_op_Equality_CircuitTool_Units_Resistance_CircuitTool_Units_Resistance_
  name: operator ==
  nameWithType: Resistance.operator ==
  fullName: CircuitTool.Units.Resistance.operator ==
  nameWithType.vb: Resistance.=
  fullName.vb: CircuitTool.Units.Resistance.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.Units.Resistance.op_Equality*
    name: ==
    href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_op_Equality_CircuitTool_Units_Resistance_CircuitTool_Units_Resistance_
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: CircuitTool.Units.Resistance.op_Inequality*
  commentId: Overload:CircuitTool.Units.Resistance.op_Inequality
  href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_op_Inequality_CircuitTool_Units_Resistance_CircuitTool_Units_Resistance_
  name: operator !=
  nameWithType: Resistance.operator !=
  fullName: CircuitTool.Units.Resistance.operator !=
  nameWithType.vb: Resistance.<>
  fullName.vb: CircuitTool.Units.Resistance.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.Units.Resistance.op_Inequality*
    name: '!='
    href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_op_Inequality_CircuitTool_Units_Resistance_CircuitTool_Units_Resistance_
- uid: CircuitTool.Units.Resistance.op_LessThan*
  commentId: Overload:CircuitTool.Units.Resistance.op_LessThan
  href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_op_LessThan_CircuitTool_Units_Resistance_CircuitTool_Units_Resistance_
  name: operator <
  nameWithType: Resistance.operator <
  fullName: CircuitTool.Units.Resistance.operator <
  nameWithType.vb: Resistance.<
  fullName.vb: CircuitTool.Units.Resistance.<
  name.vb: <
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.Units.Resistance.op_LessThan*
    name: <
    href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_op_LessThan_CircuitTool_Units_Resistance_CircuitTool_Units_Resistance_
- uid: CircuitTool.Units.Resistance.op_GreaterThan*
  commentId: Overload:CircuitTool.Units.Resistance.op_GreaterThan
  href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_op_GreaterThan_CircuitTool_Units_Resistance_CircuitTool_Units_Resistance_
  name: operator >
  nameWithType: Resistance.operator >
  fullName: CircuitTool.Units.Resistance.operator >
  nameWithType.vb: Resistance.>
  fullName.vb: CircuitTool.Units.Resistance.>
  name.vb: '>'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.Units.Resistance.op_GreaterThan*
    name: '>'
    href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_op_GreaterThan_CircuitTool_Units_Resistance_CircuitTool_Units_Resistance_
- uid: CircuitTool.Units.Resistance.op_LessThanOrEqual*
  commentId: Overload:CircuitTool.Units.Resistance.op_LessThanOrEqual
  href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_op_LessThanOrEqual_CircuitTool_Units_Resistance_CircuitTool_Units_Resistance_
  name: operator <=
  nameWithType: Resistance.operator <=
  fullName: CircuitTool.Units.Resistance.operator <=
  nameWithType.vb: Resistance.<=
  fullName.vb: CircuitTool.Units.Resistance.<=
  name.vb: <=
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.Units.Resistance.op_LessThanOrEqual*
    name: <=
    href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_op_LessThanOrEqual_CircuitTool_Units_Resistance_CircuitTool_Units_Resistance_
- uid: CircuitTool.Units.Resistance.op_GreaterThanOrEqual*
  commentId: Overload:CircuitTool.Units.Resistance.op_GreaterThanOrEqual
  href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_op_GreaterThanOrEqual_CircuitTool_Units_Resistance_CircuitTool_Units_Resistance_
  name: operator >=
  nameWithType: Resistance.operator >=
  fullName: CircuitTool.Units.Resistance.operator >=
  nameWithType.vb: Resistance.>=
  fullName.vb: CircuitTool.Units.Resistance.>=
  name.vb: '>='
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.Units.Resistance.op_GreaterThanOrEqual*
    name: '>='
    href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_op_GreaterThanOrEqual_CircuitTool_Units_Resistance_CircuitTool_Units_Resistance_
- uid: CircuitTool.Units.Resistance.op_Implicit*
  commentId: Overload:CircuitTool.Units.Resistance.op_Implicit
  name: implicit operator
  nameWithType: Resistance.implicit operator
  fullName: CircuitTool.Units.Resistance.implicit operator
  nameWithType.vb: Resistance.CType
  fullName.vb: CircuitTool.Units.Resistance.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: CircuitTool.Units.Resistance.Equals*
  commentId: Overload:CircuitTool.Units.Resistance.Equals
  href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_Equals_CircuitTool_Units_Resistance_
  name: Equals
  nameWithType: Resistance.Equals
  fullName: CircuitTool.Units.Resistance.Equals
- uid: System.IEquatable{CircuitTool.Units.Resistance}.Equals(CircuitTool.Units.Resistance)
  commentId: M:System.IEquatable{CircuitTool.Units.Resistance}.Equals(CircuitTool.Units.Resistance)
  parent: System.IEquatable{CircuitTool.Units.Resistance}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Resistance)
  nameWithType: IEquatable<Resistance>.Equals(Resistance)
  fullName: System.IEquatable<CircuitTool.Units.Resistance>.Equals(CircuitTool.Units.Resistance)
  nameWithType.vb: IEquatable(Of Resistance).Equals(Resistance)
  fullName.vb: System.IEquatable(Of CircuitTool.Units.Resistance).Equals(CircuitTool.Units.Resistance)
  spec.csharp:
  - uid: System.IEquatable{CircuitTool.Units.Resistance}.Equals(CircuitTool.Units.Resistance)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: CircuitTool.Units.Resistance
    name: Resistance
    href: CircuitTool.Units.Resistance.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{CircuitTool.Units.Resistance}.Equals(CircuitTool.Units.Resistance)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: CircuitTool.Units.Resistance
    name: Resistance
    href: CircuitTool.Units.Resistance.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: CircuitTool.Units.Resistance.GetHashCode*
  commentId: Overload:CircuitTool.Units.Resistance.GetHashCode
  href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_GetHashCode
  name: GetHashCode
  nameWithType: Resistance.GetHashCode
  fullName: CircuitTool.Units.Resistance.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: CircuitTool.Units.Resistance.CompareTo*
  commentId: Overload:CircuitTool.Units.Resistance.CompareTo
  href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_CompareTo_CircuitTool_Units_Resistance_
  name: CompareTo
  nameWithType: Resistance.CompareTo
  fullName: CircuitTool.Units.Resistance.CompareTo
- uid: System.IComparable{CircuitTool.Units.Resistance}.CompareTo(CircuitTool.Units.Resistance)
  commentId: M:System.IComparable{CircuitTool.Units.Resistance}.CompareTo(CircuitTool.Units.Resistance)
  parent: System.IComparable{CircuitTool.Units.Resistance}
  definition: System.IComparable`1.CompareTo(`0)
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  name: CompareTo(Resistance)
  nameWithType: IComparable<Resistance>.CompareTo(Resistance)
  fullName: System.IComparable<CircuitTool.Units.Resistance>.CompareTo(CircuitTool.Units.Resistance)
  nameWithType.vb: IComparable(Of Resistance).CompareTo(Resistance)
  fullName.vb: System.IComparable(Of CircuitTool.Units.Resistance).CompareTo(CircuitTool.Units.Resistance)
  spec.csharp:
  - uid: System.IComparable{CircuitTool.Units.Resistance}.CompareTo(CircuitTool.Units.Resistance)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - uid: CircuitTool.Units.Resistance
    name: Resistance
    href: CircuitTool.Units.Resistance.html
  - name: )
  spec.vb:
  - uid: System.IComparable{CircuitTool.Units.Resistance}.CompareTo(CircuitTool.Units.Resistance)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - uid: CircuitTool.Units.Resistance
    name: Resistance
    href: CircuitTool.Units.Resistance.html
  - name: )
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1.compareto
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: CircuitTool.Units.Resistance.ToString*
  commentId: Overload:CircuitTool.Units.Resistance.ToString
  href: CircuitTool.Units.Resistance.html#CircuitTool_Units_Resistance_ToString
  name: ToString
  nameWithType: Resistance.ToString
  fullName: CircuitTool.Units.Resistance.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
