### YamlMime:ManagedReference
items:
- uid: CircuitTool.EMCCalculator
  commentId: T:CircuitTool.EMCCalculator
  id: EMCCalculator
  parent: CircuitTool
  children:
  - CircuitTool.EMCCalculator.CommonModeChokeImpedance(System.Double,System.Double,System.Double)
  - CircuitTool.EMCCalculator.ElectricFieldStrength(System.Double,System.Double,System.Double)
  - CircuitTool.EMCCalculator.FCCClassBLimit(System.Double,System.Double)
  - CircuitTool.EMCCalculator.LoopInductance(System.Double,System.Double)
  - CircuitTool.EMCCalculator.ShieldingEffectiveness(System.Double,System.Double,System.Double,System.Double)
  langs:
  - csharp
  - vb
  name: EMCCalculator
  nameWithType: EMCCalculator
  fullName: CircuitTool.EMCCalculator
  type: Class
  source:
    remote:
      path: src/Analysis/EMCCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: EMCCalculator
    path: src/Analysis/EMCCalculator.cs
    startLine: 8
  namespace: CircuitTool
  summary: Provides electromagnetic compatibility (EMC) calculations
  example: []
  syntax:
    content: public static class EMCCalculator
    content.vb: Public Module EMCCalculator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: CircuitTool.EMCCalculator.ElectricFieldStrength(System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.EMCCalculator.ElectricFieldStrength(System.Double,System.Double,System.Double)
  id: ElectricFieldStrength(System.Double,System.Double,System.Double)
  parent: CircuitTool.EMCCalculator
  langs:
  - csharp
  - vb
  name: ElectricFieldStrength(double, double, double)
  nameWithType: EMCCalculator.ElectricFieldStrength(double, double, double)
  fullName: CircuitTool.EMCCalculator.ElectricFieldStrength(double, double, double)
  type: Method
  source:
    remote:
      path: src/Analysis/EMCCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ElectricFieldStrength
    path: src/Analysis/EMCCalculator.cs
    startLine: 17
  namespace: CircuitTool
  summary: Calculates the electric field strength at a given distance from a radiating source
  example: []
  syntax:
    content: public static double ElectricFieldStrength(double power, double distance, double antennaGain = 1)
    parameters:
    - id: power
      type: System.Double
      description: Radiated power in watts
    - id: distance
      type: System.Double
      description: Distance from source in meters
    - id: antennaGain
      type: System.Double
      description: Antenna gain in linear scale (default 1 for isotropic)
    return:
      type: System.Double
      description: Electric field strength in V/m
    content.vb: Public Shared Function ElectricFieldStrength(power As Double, distance As Double, antennaGain As Double = 1) As Double
  overload: CircuitTool.EMCCalculator.ElectricFieldStrength*
  nameWithType.vb: EMCCalculator.ElectricFieldStrength(Double, Double, Double)
  fullName.vb: CircuitTool.EMCCalculator.ElectricFieldStrength(Double, Double, Double)
  name.vb: ElectricFieldStrength(Double, Double, Double)
- uid: CircuitTool.EMCCalculator.ShieldingEffectiveness(System.Double,System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.EMCCalculator.ShieldingEffectiveness(System.Double,System.Double,System.Double,System.Double)
  id: ShieldingEffectiveness(System.Double,System.Double,System.Double,System.Double)
  parent: CircuitTool.EMCCalculator
  langs:
  - csharp
  - vb
  name: ShieldingEffectiveness(double, double, double, double)
  nameWithType: EMCCalculator.ShieldingEffectiveness(double, double, double, double)
  fullName: CircuitTool.EMCCalculator.ShieldingEffectiveness(double, double, double, double)
  type: Method
  source:
    remote:
      path: src/Analysis/EMCCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ShieldingEffectiveness
    path: src/Analysis/EMCCalculator.cs
    startLine: 36
  namespace: CircuitTool
  summary: Calculates shielding effectiveness of a conductive enclosure
  example: []
  syntax:
    content: public static double ShieldingEffectiveness(double frequency, double thickness, double conductivity, double permeability = 1)
    parameters:
    - id: frequency
      type: System.Double
      description: Frequency in Hz
    - id: thickness
      type: System.Double
      description: Shield thickness in meters
    - id: conductivity
      type: System.Double
      description: Material conductivity in S/m
    - id: permeability
      type: System.Double
      description: Relative permeability (default 1 for non-magnetic materials)
    return:
      type: System.Double
      description: Shielding effectiveness in dB
    content.vb: Public Shared Function ShieldingEffectiveness(frequency As Double, thickness As Double, conductivity As Double, permeability As Double = 1) As Double
  overload: CircuitTool.EMCCalculator.ShieldingEffectiveness*
  nameWithType.vb: EMCCalculator.ShieldingEffectiveness(Double, Double, Double, Double)
  fullName.vb: CircuitTool.EMCCalculator.ShieldingEffectiveness(Double, Double, Double, Double)
  name.vb: ShieldingEffectiveness(Double, Double, Double, Double)
- uid: CircuitTool.EMCCalculator.FCCClassBLimit(System.Double,System.Double)
  commentId: M:CircuitTool.EMCCalculator.FCCClassBLimit(System.Double,System.Double)
  id: FCCClassBLimit(System.Double,System.Double)
  parent: CircuitTool.EMCCalculator
  langs:
  - csharp
  - vb
  name: FCCClassBLimit(double, double)
  nameWithType: EMCCalculator.FCCClassBLimit(double, double)
  fullName: CircuitTool.EMCCalculator.FCCClassBLimit(double, double)
  type: Method
  source:
    remote:
      path: src/Analysis/EMCCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: FCCClassBLimit
    path: src/Analysis/EMCCalculator.cs
    startLine: 62
  namespace: CircuitTool
  summary: Calculates the maximum allowed radiated emission for FCC Class B devices
  example: []
  syntax:
    content: public static double FCCClassBLimit(double frequency, double measurementDistance = 3)
    parameters:
    - id: frequency
      type: System.Double
      description: Frequency in Hz
    - id: measurementDistance
      type: System.Double
      description: Measurement distance in meters (typically 3m or 10m)
    return:
      type: System.Double
      description: Maximum allowed field strength in dB(μV/m)
    content.vb: Public Shared Function FCCClassBLimit(frequency As Double, measurementDistance As Double = 3) As Double
  overload: CircuitTool.EMCCalculator.FCCClassBLimit*
  nameWithType.vb: EMCCalculator.FCCClassBLimit(Double, Double)
  fullName.vb: CircuitTool.EMCCalculator.FCCClassBLimit(Double, Double)
  name.vb: FCCClassBLimit(Double, Double)
- uid: CircuitTool.EMCCalculator.LoopInductance(System.Double,System.Double)
  commentId: M:CircuitTool.EMCCalculator.LoopInductance(System.Double,System.Double)
  id: LoopInductance(System.Double,System.Double)
  parent: CircuitTool.EMCCalculator
  langs:
  - csharp
  - vb
  name: LoopInductance(double, double)
  nameWithType: EMCCalculator.LoopInductance(double, double)
  fullName: CircuitTool.EMCCalculator.LoopInductance(double, double)
  type: Method
  source:
    remote:
      path: src/Analysis/EMCCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: LoopInductance
    path: src/Analysis/EMCCalculator.cs
    startLine: 105
  namespace: CircuitTool
  summary: Calculates the loop inductance for EMI analysis
  example: []
  syntax:
    content: public static double LoopInductance(double loopArea, double wireRadius)
    parameters:
    - id: loopArea
      type: System.Double
      description: Loop area in m²
    - id: wireRadius
      type: System.Double
      description: Wire radius in meters
    return:
      type: System.Double
      description: Loop inductance in henries
    content.vb: Public Shared Function LoopInductance(loopArea As Double, wireRadius As Double) As Double
  overload: CircuitTool.EMCCalculator.LoopInductance*
  nameWithType.vb: EMCCalculator.LoopInductance(Double, Double)
  fullName.vb: CircuitTool.EMCCalculator.LoopInductance(Double, Double)
  name.vb: LoopInductance(Double, Double)
- uid: CircuitTool.EMCCalculator.CommonModeChokeImpedance(System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.EMCCalculator.CommonModeChokeImpedance(System.Double,System.Double,System.Double)
  id: CommonModeChokeImpedance(System.Double,System.Double,System.Double)
  parent: CircuitTool.EMCCalculator
  langs:
  - csharp
  - vb
  name: CommonModeChokeImpedance(double, double, double)
  nameWithType: EMCCalculator.CommonModeChokeImpedance(double, double, double)
  fullName: CircuitTool.EMCCalculator.CommonModeChokeImpedance(double, double, double)
  type: Method
  source:
    remote:
      path: src/Analysis/EMCCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: CommonModeChokeImpedance
    path: src/Analysis/EMCCalculator.cs
    startLine: 124
  namespace: CircuitTool
  summary: Calculates common-mode choke impedance
  example: []
  syntax:
    content: public static double CommonModeChokeImpedance(double inductance, double frequency, double resistanceDC = 0)
    parameters:
    - id: inductance
      type: System.Double
      description: Choke inductance in henries
    - id: frequency
      type: System.Double
      description: Frequency in Hz
    - id: resistanceDC
      type: System.Double
      description: DC resistance in ohms
    return:
      type: System.Double
      description: Complex impedance magnitude in ohms
    content.vb: Public Shared Function CommonModeChokeImpedance(inductance As Double, frequency As Double, resistanceDC As Double = 0) As Double
  overload: CircuitTool.EMCCalculator.CommonModeChokeImpedance*
  nameWithType.vb: EMCCalculator.CommonModeChokeImpedance(Double, Double, Double)
  fullName.vb: CircuitTool.EMCCalculator.CommonModeChokeImpedance(Double, Double, Double)
  name.vb: CommonModeChokeImpedance(Double, Double, Double)
references:
- uid: CircuitTool
  commentId: N:CircuitTool
  href: CircuitTool.html
  name: CircuitTool
  nameWithType: CircuitTool
  fullName: CircuitTool
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CircuitTool.EMCCalculator.ElectricFieldStrength*
  commentId: Overload:CircuitTool.EMCCalculator.ElectricFieldStrength
  href: CircuitTool.EMCCalculator.html#CircuitTool_EMCCalculator_ElectricFieldStrength_System_Double_System_Double_System_Double_
  name: ElectricFieldStrength
  nameWithType: EMCCalculator.ElectricFieldStrength
  fullName: CircuitTool.EMCCalculator.ElectricFieldStrength
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: CircuitTool.EMCCalculator.ShieldingEffectiveness*
  commentId: Overload:CircuitTool.EMCCalculator.ShieldingEffectiveness
  href: CircuitTool.EMCCalculator.html#CircuitTool_EMCCalculator_ShieldingEffectiveness_System_Double_System_Double_System_Double_System_Double_
  name: ShieldingEffectiveness
  nameWithType: EMCCalculator.ShieldingEffectiveness
  fullName: CircuitTool.EMCCalculator.ShieldingEffectiveness
- uid: CircuitTool.EMCCalculator.FCCClassBLimit*
  commentId: Overload:CircuitTool.EMCCalculator.FCCClassBLimit
  href: CircuitTool.EMCCalculator.html#CircuitTool_EMCCalculator_FCCClassBLimit_System_Double_System_Double_
  name: FCCClassBLimit
  nameWithType: EMCCalculator.FCCClassBLimit
  fullName: CircuitTool.EMCCalculator.FCCClassBLimit
- uid: CircuitTool.EMCCalculator.LoopInductance*
  commentId: Overload:CircuitTool.EMCCalculator.LoopInductance
  href: CircuitTool.EMCCalculator.html#CircuitTool_EMCCalculator_LoopInductance_System_Double_System_Double_
  name: LoopInductance
  nameWithType: EMCCalculator.LoopInductance
  fullName: CircuitTool.EMCCalculator.LoopInductance
- uid: CircuitTool.EMCCalculator.CommonModeChokeImpedance*
  commentId: Overload:CircuitTool.EMCCalculator.CommonModeChokeImpedance
  href: CircuitTool.EMCCalculator.html#CircuitTool_EMCCalculator_CommonModeChokeImpedance_System_Double_System_Double_System_Double_
  name: CommonModeChokeImpedance
  nameWithType: EMCCalculator.CommonModeChokeImpedance
  fullName: CircuitTool.EMCCalculator.CommonModeChokeImpedance
