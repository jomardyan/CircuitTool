### YamlMime:ManagedReference
items:
- uid: CircuitTool.OptoelectronicsCalculator
  commentId: T:CircuitTool.OptoelectronicsCalculator
  id: OptoelectronicsCalculator
  parent: CircuitTool
  children:
  - CircuitTool.OptoelectronicsCalculator.AcceptanceAngle(System.Double,System.Double)
  - CircuitTool.OptoelectronicsCalculator.ChromaticDispersion(System.Double,System.Double,System.Double)
  - CircuitTool.OptoelectronicsCalculator.Detectivity(System.Double,System.Double)
  - CircuitTool.OptoelectronicsCalculator.FiberAttenuation(System.Double,System.Double,System.Double)
  - CircuitTool.OptoelectronicsCalculator.LEDPower(System.Double,System.Double,System.Double)
  - CircuitTool.OptoelectronicsCalculator.LinkBudget(System.Double,System.Double,System.Double)
  - CircuitTool.OptoelectronicsCalculator.ModalDispersion(System.Double,System.Double,System.Double)
  - CircuitTool.OptoelectronicsCalculator.NoiseEquivalentPower(System.Double,System.Double)
  - CircuitTool.OptoelectronicsCalculator.NumericalAperture(System.Double,System.Double)
  - CircuitTool.OptoelectronicsCalculator.OutputPower(System.Double,System.Double,System.Double)
  - CircuitTool.OptoelectronicsCalculator.PhotodiodeCurrent(System.Double,System.Double)
  - CircuitTool.OptoelectronicsCalculator.Responsivity(System.Double,System.Double)
  langs:
  - csharp
  - vb
  name: OptoelectronicsCalculator
  nameWithType: OptoelectronicsCalculator
  fullName: CircuitTool.OptoelectronicsCalculator
  type: Class
  source:
    remote:
      path: src/Calculators/OptoelectronicsCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: OptoelectronicsCalculator
    path: ../src/Calculators/OptoelectronicsCalculator.cs
    startLine: 15
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Provides calculations for optoelectronic components and fiber optic systems.
  remarks: >-
    <p>Example usage:</p>


    <pre><code class="lang-csharp">double current = OptoelectronicsCalculator.PhotodiodeCurrent(1e-3, 0.8); // Photodiode current

    double power = OptoelectronicsCalculator.LEDPower(20e-3, 1.8, 0.15); // LED optical power

    double na = OptoelectronicsCalculator.NumericalAperture(1.46, 1.45); // Fiber NA</code></pre>
  example: []
  syntax:
    content: public static class OptoelectronicsCalculator
    content.vb: Public Module OptoelectronicsCalculator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: CircuitTool.OptoelectronicsCalculator.PhotodiodeCurrent(System.Double,System.Double)
  commentId: M:CircuitTool.OptoelectronicsCalculator.PhotodiodeCurrent(System.Double,System.Double)
  id: PhotodiodeCurrent(System.Double,System.Double)
  parent: CircuitTool.OptoelectronicsCalculator
  langs:
  - csharp
  - vb
  name: PhotodiodeCurrent(double, double)
  nameWithType: OptoelectronicsCalculator.PhotodiodeCurrent(double, double)
  fullName: CircuitTool.OptoelectronicsCalculator.PhotodiodeCurrent(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/OptoelectronicsCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: PhotodiodeCurrent
    path: ../src/Calculators/OptoelectronicsCalculator.cs
    startLine: 30
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates photodiode current from optical power.
  example:
  - double current = OptoelectronicsCalculator.PhotodiodeCurrent(1e-3, 0.8); // Photodiode current
  syntax:
    content: public static double PhotodiodeCurrent(double opticalPower, double responsivity)
    parameters:
    - id: opticalPower
      type: System.Double
      description: Incident optical power in watts (W).
    - id: responsivity
      type: System.Double
      description: Photodiode responsivity in A/W.
    return:
      type: System.Double
      description: Photodiode current in amperes (A).
    content.vb: Public Shared Function PhotodiodeCurrent(opticalPower As Double, responsivity As Double) As Double
  overload: CircuitTool.OptoelectronicsCalculator.PhotodiodeCurrent*
  nameWithType.vb: OptoelectronicsCalculator.PhotodiodeCurrent(Double, Double)
  fullName.vb: CircuitTool.OptoelectronicsCalculator.PhotodiodeCurrent(Double, Double)
  name.vb: PhotodiodeCurrent(Double, Double)
- uid: CircuitTool.OptoelectronicsCalculator.Responsivity(System.Double,System.Double)
  commentId: M:CircuitTool.OptoelectronicsCalculator.Responsivity(System.Double,System.Double)
  id: Responsivity(System.Double,System.Double)
  parent: CircuitTool.OptoelectronicsCalculator
  langs:
  - csharp
  - vb
  name: Responsivity(double, double)
  nameWithType: OptoelectronicsCalculator.Responsivity(double, double)
  fullName: CircuitTool.OptoelectronicsCalculator.Responsivity(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/OptoelectronicsCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Responsivity
    path: ../src/Calculators/OptoelectronicsCalculator.cs
    startLine: 43
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates responsivity from quantum efficiency and wavelength.
  example: []
  syntax:
    content: public static double Responsivity(double quantumEfficiency, double wavelength)
    parameters:
    - id: quantumEfficiency
      type: System.Double
      description: Quantum efficiency (0-1).
    - id: wavelength
      type: System.Double
      description: Wavelength in meters.
    return:
      type: System.Double
      description: Responsivity in A/W.
    content.vb: Public Shared Function Responsivity(quantumEfficiency As Double, wavelength As Double) As Double
  overload: CircuitTool.OptoelectronicsCalculator.Responsivity*
  nameWithType.vb: OptoelectronicsCalculator.Responsivity(Double, Double)
  fullName.vb: CircuitTool.OptoelectronicsCalculator.Responsivity(Double, Double)
  name.vb: Responsivity(Double, Double)
- uid: CircuitTool.OptoelectronicsCalculator.LEDPower(System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.OptoelectronicsCalculator.LEDPower(System.Double,System.Double,System.Double)
  id: LEDPower(System.Double,System.Double,System.Double)
  parent: CircuitTool.OptoelectronicsCalculator
  langs:
  - csharp
  - vb
  name: LEDPower(double, double, double)
  nameWithType: OptoelectronicsCalculator.LEDPower(double, double, double)
  fullName: CircuitTool.OptoelectronicsCalculator.LEDPower(double, double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/OptoelectronicsCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: LEDPower
    path: ../src/Calculators/OptoelectronicsCalculator.cs
    startLine: 64
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates LED optical power output.
  example:
  - double power = OptoelectronicsCalculator.LEDPower(20e-3, 1.8, 0.15); // LED optical power
  syntax:
    content: public static double LEDPower(double current, double voltage, double efficiency)
    parameters:
    - id: current
      type: System.Double
      description: Forward current in amperes (A).
    - id: voltage
      type: System.Double
      description: Forward voltage in volts (V).
    - id: efficiency
      type: System.Double
      description: Wall-plug efficiency (0-1).
    return:
      type: System.Double
      description: Optical power output in watts (W).
    content.vb: Public Shared Function LEDPower(current As Double, voltage As Double, efficiency As Double) As Double
  overload: CircuitTool.OptoelectronicsCalculator.LEDPower*
  nameWithType.vb: OptoelectronicsCalculator.LEDPower(Double, Double, Double)
  fullName.vb: CircuitTool.OptoelectronicsCalculator.LEDPower(Double, Double, Double)
  name.vb: LEDPower(Double, Double, Double)
- uid: CircuitTool.OptoelectronicsCalculator.NumericalAperture(System.Double,System.Double)
  commentId: M:CircuitTool.OptoelectronicsCalculator.NumericalAperture(System.Double,System.Double)
  id: NumericalAperture(System.Double,System.Double)
  parent: CircuitTool.OptoelectronicsCalculator
  langs:
  - csharp
  - vb
  name: NumericalAperture(double, double)
  nameWithType: OptoelectronicsCalculator.NumericalAperture(double, double)
  fullName: CircuitTool.OptoelectronicsCalculator.NumericalAperture(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/OptoelectronicsCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: NumericalAperture
    path: ../src/Calculators/OptoelectronicsCalculator.cs
    startLine: 84
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates numerical aperture of an optical fiber.
  example:
  - double na = OptoelectronicsCalculator.NumericalAperture(1.46, 1.45); // Fiber NA
  syntax:
    content: public static double NumericalAperture(double coreIndex, double claddingIndex)
    parameters:
    - id: coreIndex
      type: System.Double
      description: Refractive index of the core.
    - id: claddingIndex
      type: System.Double
      description: Refractive index of the cladding.
    return:
      type: System.Double
      description: Numerical aperture (dimensionless).
    content.vb: Public Shared Function NumericalAperture(coreIndex As Double, claddingIndex As Double) As Double
  overload: CircuitTool.OptoelectronicsCalculator.NumericalAperture*
  nameWithType.vb: OptoelectronicsCalculator.NumericalAperture(Double, Double)
  fullName.vb: CircuitTool.OptoelectronicsCalculator.NumericalAperture(Double, Double)
  name.vb: NumericalAperture(Double, Double)
- uid: CircuitTool.OptoelectronicsCalculator.AcceptanceAngle(System.Double,System.Double)
  commentId: M:CircuitTool.OptoelectronicsCalculator.AcceptanceAngle(System.Double,System.Double)
  id: AcceptanceAngle(System.Double,System.Double)
  parent: CircuitTool.OptoelectronicsCalculator
  langs:
  - csharp
  - vb
  name: AcceptanceAngle(double, double)
  nameWithType: OptoelectronicsCalculator.AcceptanceAngle(double, double)
  fullName: CircuitTool.OptoelectronicsCalculator.AcceptanceAngle(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/OptoelectronicsCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: AcceptanceAngle
    path: ../src/Calculators/OptoelectronicsCalculator.cs
    startLine: 100
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates acceptance angle of an optical fiber.
  example: []
  syntax:
    content: public static double AcceptanceAngle(double numericalAperture, double externalMediumIndex = 1)
    parameters:
    - id: numericalAperture
      type: System.Double
      description: Numerical aperture of the fiber.
    - id: externalMediumIndex
      type: System.Double
      description: 'Refractive index of external medium (default: air = 1.0).'
    return:
      type: System.Double
      description: Half-angle of acceptance cone in radians.
    content.vb: Public Shared Function AcceptanceAngle(numericalAperture As Double, externalMediumIndex As Double = 1) As Double
  overload: CircuitTool.OptoelectronicsCalculator.AcceptanceAngle*
  nameWithType.vb: OptoelectronicsCalculator.AcceptanceAngle(Double, Double)
  fullName.vb: CircuitTool.OptoelectronicsCalculator.AcceptanceAngle(Double, Double)
  name.vb: AcceptanceAngle(Double, Double)
- uid: CircuitTool.OptoelectronicsCalculator.FiberAttenuation(System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.OptoelectronicsCalculator.FiberAttenuation(System.Double,System.Double,System.Double)
  id: FiberAttenuation(System.Double,System.Double,System.Double)
  parent: CircuitTool.OptoelectronicsCalculator
  langs:
  - csharp
  - vb
  name: FiberAttenuation(double, double, double)
  nameWithType: OptoelectronicsCalculator.FiberAttenuation(double, double, double)
  fullName: CircuitTool.OptoelectronicsCalculator.FiberAttenuation(double, double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/OptoelectronicsCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: FiberAttenuation
    path: ../src/Calculators/OptoelectronicsCalculator.cs
    startLine: 117
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates attenuation in optical fiber.
  example: []
  syntax:
    content: public static double FiberAttenuation(double inputPower, double outputPower, double length)
    parameters:
    - id: inputPower
      type: System.Double
      description: Input optical power in watts (W).
    - id: outputPower
      type: System.Double
      description: Output optical power in watts (W).
    - id: length
      type: System.Double
      description: Fiber length in kilometers.
    return:
      type: System.Double
      description: Attenuation in dB/km.
    content.vb: Public Shared Function FiberAttenuation(inputPower As Double, outputPower As Double, length As Double) As Double
  overload: CircuitTool.OptoelectronicsCalculator.FiberAttenuation*
  nameWithType.vb: OptoelectronicsCalculator.FiberAttenuation(Double, Double, Double)
  fullName.vb: CircuitTool.OptoelectronicsCalculator.FiberAttenuation(Double, Double, Double)
  name.vb: FiberAttenuation(Double, Double, Double)
- uid: CircuitTool.OptoelectronicsCalculator.OutputPower(System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.OptoelectronicsCalculator.OutputPower(System.Double,System.Double,System.Double)
  id: OutputPower(System.Double,System.Double,System.Double)
  parent: CircuitTool.OptoelectronicsCalculator
  langs:
  - csharp
  - vb
  name: OutputPower(double, double, double)
  nameWithType: OptoelectronicsCalculator.OutputPower(double, double, double)
  fullName: CircuitTool.OptoelectronicsCalculator.OutputPower(double, double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/OptoelectronicsCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: OutputPower
    path: ../src/Calculators/OptoelectronicsCalculator.cs
    startLine: 134
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates optical power from attenuation.
  example: []
  syntax:
    content: public static double OutputPower(double inputPower, double attenuation, double length)
    parameters:
    - id: inputPower
      type: System.Double
      description: Input optical power in watts (W).
    - id: attenuation
      type: System.Double
      description: Attenuation in dB/km.
    - id: length
      type: System.Double
      description: Fiber length in kilometers.
    return:
      type: System.Double
      description: Output optical power in watts (W).
    content.vb: Public Shared Function OutputPower(inputPower As Double, attenuation As Double, length As Double) As Double
  overload: CircuitTool.OptoelectronicsCalculator.OutputPower*
  nameWithType.vb: OptoelectronicsCalculator.OutputPower(Double, Double, Double)
  fullName.vb: CircuitTool.OptoelectronicsCalculator.OutputPower(Double, Double, Double)
  name.vb: OutputPower(Double, Double, Double)
- uid: CircuitTool.OptoelectronicsCalculator.NoiseEquivalentPower(System.Double,System.Double)
  commentId: M:CircuitTool.OptoelectronicsCalculator.NoiseEquivalentPower(System.Double,System.Double)
  id: NoiseEquivalentPower(System.Double,System.Double)
  parent: CircuitTool.OptoelectronicsCalculator
  langs:
  - csharp
  - vb
  name: NoiseEquivalentPower(double, double)
  nameWithType: OptoelectronicsCalculator.NoiseEquivalentPower(double, double)
  fullName: CircuitTool.OptoelectronicsCalculator.NoiseEquivalentPower(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/OptoelectronicsCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: NoiseEquivalentPower
    path: ../src/Calculators/OptoelectronicsCalculator.cs
    startLine: 149
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates photodetector noise equivalent power (NEP).
  example: []
  syntax:
    content: public static double NoiseEquivalentPower(double noiseCurrentDensity, double responsivity)
    parameters:
    - id: noiseCurrentDensity
      type: System.Double
      description: Noise current density in A/√Hz.
    - id: responsivity
      type: System.Double
      description: Photodetector responsivity in A/W.
    return:
      type: System.Double
      description: Noise equivalent power in W/√Hz.
    content.vb: Public Shared Function NoiseEquivalentPower(noiseCurrentDensity As Double, responsivity As Double) As Double
  overload: CircuitTool.OptoelectronicsCalculator.NoiseEquivalentPower*
  nameWithType.vb: OptoelectronicsCalculator.NoiseEquivalentPower(Double, Double)
  fullName.vb: CircuitTool.OptoelectronicsCalculator.NoiseEquivalentPower(Double, Double)
  name.vb: NoiseEquivalentPower(Double, Double)
- uid: CircuitTool.OptoelectronicsCalculator.Detectivity(System.Double,System.Double)
  commentId: M:CircuitTool.OptoelectronicsCalculator.Detectivity(System.Double,System.Double)
  id: Detectivity(System.Double,System.Double)
  parent: CircuitTool.OptoelectronicsCalculator
  langs:
  - csharp
  - vb
  name: Detectivity(double, double)
  nameWithType: OptoelectronicsCalculator.Detectivity(double, double)
  fullName: CircuitTool.OptoelectronicsCalculator.Detectivity(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/OptoelectronicsCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Detectivity
    path: ../src/Calculators/OptoelectronicsCalculator.cs
    startLine: 163
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates detectivity (D*) of a photodetector.
  example: []
  syntax:
    content: public static double Detectivity(double area, double noiseEquivalentPower)
    parameters:
    - id: area
      type: System.Double
      description: Detector area in square meters (m²).
    - id: noiseEquivalentPower
      type: System.Double
      description: Noise equivalent power in W/√Hz.
    return:
      type: System.Double
      description: Detectivity in cm⋅Hz^(1/2)/W.
    content.vb: Public Shared Function Detectivity(area As Double, noiseEquivalentPower As Double) As Double
  overload: CircuitTool.OptoelectronicsCalculator.Detectivity*
  nameWithType.vb: OptoelectronicsCalculator.Detectivity(Double, Double)
  fullName.vb: CircuitTool.OptoelectronicsCalculator.Detectivity(Double, Double)
  name.vb: Detectivity(Double, Double)
- uid: CircuitTool.OptoelectronicsCalculator.ModalDispersion(System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.OptoelectronicsCalculator.ModalDispersion(System.Double,System.Double,System.Double)
  id: ModalDispersion(System.Double,System.Double,System.Double)
  parent: CircuitTool.OptoelectronicsCalculator
  langs:
  - csharp
  - vb
  name: ModalDispersion(double, double, double)
  nameWithType: OptoelectronicsCalculator.ModalDispersion(double, double, double)
  fullName: CircuitTool.OptoelectronicsCalculator.ModalDispersion(double, double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/OptoelectronicsCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ModalDispersion
    path: ../src/Calculators/OptoelectronicsCalculator.cs
    startLine: 180
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates modal dispersion in multimode fiber.
  example: []
  syntax:
    content: public static double ModalDispersion(double coreIndex, double claddingIndex, double length)
    parameters:
    - id: coreIndex
      type: System.Double
      description: Core refractive index.
    - id: claddingIndex
      type: System.Double
      description: Cladding refractive index.
    - id: length
      type: System.Double
      description: Fiber length in kilometers.
    return:
      type: System.Double
      description: Modal dispersion in nanoseconds.
    content.vb: Public Shared Function ModalDispersion(coreIndex As Double, claddingIndex As Double, length As Double) As Double
  overload: CircuitTool.OptoelectronicsCalculator.ModalDispersion*
  nameWithType.vb: OptoelectronicsCalculator.ModalDispersion(Double, Double, Double)
  fullName.vb: CircuitTool.OptoelectronicsCalculator.ModalDispersion(Double, Double, Double)
  name.vb: ModalDispersion(Double, Double, Double)
- uid: CircuitTool.OptoelectronicsCalculator.ChromaticDispersion(System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.OptoelectronicsCalculator.ChromaticDispersion(System.Double,System.Double,System.Double)
  id: ChromaticDispersion(System.Double,System.Double,System.Double)
  parent: CircuitTool.OptoelectronicsCalculator
  langs:
  - csharp
  - vb
  name: ChromaticDispersion(double, double, double)
  nameWithType: OptoelectronicsCalculator.ChromaticDispersion(double, double, double)
  fullName: CircuitTool.OptoelectronicsCalculator.ChromaticDispersion(double, double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/OptoelectronicsCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ChromaticDispersion
    path: ../src/Calculators/OptoelectronicsCalculator.cs
    startLine: 198
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates chromatic dispersion broadening.
  example: []
  syntax:
    content: public static double ChromaticDispersion(double dispersionParameter, double spectralWidth, double length)
    parameters:
    - id: dispersionParameter
      type: System.Double
      description: Dispersion parameter in ps/(nm⋅km).
    - id: spectralWidth
      type: System.Double
      description: Source spectral width in nm.
    - id: length
      type: System.Double
      description: Fiber length in kilometers.
    return:
      type: System.Double
      description: Pulse broadening in picoseconds.
    content.vb: Public Shared Function ChromaticDispersion(dispersionParameter As Double, spectralWidth As Double, length As Double) As Double
  overload: CircuitTool.OptoelectronicsCalculator.ChromaticDispersion*
  nameWithType.vb: OptoelectronicsCalculator.ChromaticDispersion(Double, Double, Double)
  fullName.vb: CircuitTool.OptoelectronicsCalculator.ChromaticDispersion(Double, Double, Double)
  name.vb: ChromaticDispersion(Double, Double, Double)
- uid: CircuitTool.OptoelectronicsCalculator.LinkBudget(System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.OptoelectronicsCalculator.LinkBudget(System.Double,System.Double,System.Double)
  id: LinkBudget(System.Double,System.Double,System.Double)
  parent: CircuitTool.OptoelectronicsCalculator
  langs:
  - csharp
  - vb
  name: LinkBudget(double, double, double)
  nameWithType: OptoelectronicsCalculator.LinkBudget(double, double, double)
  fullName: CircuitTool.OptoelectronicsCalculator.LinkBudget(double, double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/OptoelectronicsCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: LinkBudget
    path: ../src/Calculators/OptoelectronicsCalculator.cs
    startLine: 213
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates link budget for fiber optic system.
  example: []
  syntax:
    content: public static double LinkBudget(double transmitterPower, double receiverSensitivity, double systemMargin)
    parameters:
    - id: transmitterPower
      type: System.Double
      description: Transmitter power in dBm.
    - id: receiverSensitivity
      type: System.Double
      description: Receiver sensitivity in dBm.
    - id: systemMargin
      type: System.Double
      description: System margin in dB.
    return:
      type: System.Double
      description: Available loss budget in dB.
    content.vb: Public Shared Function LinkBudget(transmitterPower As Double, receiverSensitivity As Double, systemMargin As Double) As Double
  overload: CircuitTool.OptoelectronicsCalculator.LinkBudget*
  nameWithType.vb: OptoelectronicsCalculator.LinkBudget(Double, Double, Double)
  fullName.vb: CircuitTool.OptoelectronicsCalculator.LinkBudget(Double, Double, Double)
  name.vb: LinkBudget(Double, Double, Double)
references:
- uid: CircuitTool
  commentId: N:CircuitTool
  href: CircuitTool.html
  name: CircuitTool
  nameWithType: CircuitTool
  fullName: CircuitTool
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CircuitTool.OptoelectronicsCalculator.PhotodiodeCurrent*
  commentId: Overload:CircuitTool.OptoelectronicsCalculator.PhotodiodeCurrent
  href: CircuitTool.OptoelectronicsCalculator.html#CircuitTool_OptoelectronicsCalculator_PhotodiodeCurrent_System_Double_System_Double_
  name: PhotodiodeCurrent
  nameWithType: OptoelectronicsCalculator.PhotodiodeCurrent
  fullName: CircuitTool.OptoelectronicsCalculator.PhotodiodeCurrent
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: CircuitTool.OptoelectronicsCalculator.Responsivity*
  commentId: Overload:CircuitTool.OptoelectronicsCalculator.Responsivity
  href: CircuitTool.OptoelectronicsCalculator.html#CircuitTool_OptoelectronicsCalculator_Responsivity_System_Double_System_Double_
  name: Responsivity
  nameWithType: OptoelectronicsCalculator.Responsivity
  fullName: CircuitTool.OptoelectronicsCalculator.Responsivity
- uid: CircuitTool.OptoelectronicsCalculator.LEDPower*
  commentId: Overload:CircuitTool.OptoelectronicsCalculator.LEDPower
  href: CircuitTool.OptoelectronicsCalculator.html#CircuitTool_OptoelectronicsCalculator_LEDPower_System_Double_System_Double_System_Double_
  name: LEDPower
  nameWithType: OptoelectronicsCalculator.LEDPower
  fullName: CircuitTool.OptoelectronicsCalculator.LEDPower
- uid: CircuitTool.OptoelectronicsCalculator.NumericalAperture*
  commentId: Overload:CircuitTool.OptoelectronicsCalculator.NumericalAperture
  href: CircuitTool.OptoelectronicsCalculator.html#CircuitTool_OptoelectronicsCalculator_NumericalAperture_System_Double_System_Double_
  name: NumericalAperture
  nameWithType: OptoelectronicsCalculator.NumericalAperture
  fullName: CircuitTool.OptoelectronicsCalculator.NumericalAperture
- uid: CircuitTool.OptoelectronicsCalculator.AcceptanceAngle*
  commentId: Overload:CircuitTool.OptoelectronicsCalculator.AcceptanceAngle
  href: CircuitTool.OptoelectronicsCalculator.html#CircuitTool_OptoelectronicsCalculator_AcceptanceAngle_System_Double_System_Double_
  name: AcceptanceAngle
  nameWithType: OptoelectronicsCalculator.AcceptanceAngle
  fullName: CircuitTool.OptoelectronicsCalculator.AcceptanceAngle
- uid: CircuitTool.OptoelectronicsCalculator.FiberAttenuation*
  commentId: Overload:CircuitTool.OptoelectronicsCalculator.FiberAttenuation
  href: CircuitTool.OptoelectronicsCalculator.html#CircuitTool_OptoelectronicsCalculator_FiberAttenuation_System_Double_System_Double_System_Double_
  name: FiberAttenuation
  nameWithType: OptoelectronicsCalculator.FiberAttenuation
  fullName: CircuitTool.OptoelectronicsCalculator.FiberAttenuation
- uid: CircuitTool.OptoelectronicsCalculator.OutputPower*
  commentId: Overload:CircuitTool.OptoelectronicsCalculator.OutputPower
  href: CircuitTool.OptoelectronicsCalculator.html#CircuitTool_OptoelectronicsCalculator_OutputPower_System_Double_System_Double_System_Double_
  name: OutputPower
  nameWithType: OptoelectronicsCalculator.OutputPower
  fullName: CircuitTool.OptoelectronicsCalculator.OutputPower
- uid: CircuitTool.OptoelectronicsCalculator.NoiseEquivalentPower*
  commentId: Overload:CircuitTool.OptoelectronicsCalculator.NoiseEquivalentPower
  href: CircuitTool.OptoelectronicsCalculator.html#CircuitTool_OptoelectronicsCalculator_NoiseEquivalentPower_System_Double_System_Double_
  name: NoiseEquivalentPower
  nameWithType: OptoelectronicsCalculator.NoiseEquivalentPower
  fullName: CircuitTool.OptoelectronicsCalculator.NoiseEquivalentPower
- uid: CircuitTool.OptoelectronicsCalculator.Detectivity*
  commentId: Overload:CircuitTool.OptoelectronicsCalculator.Detectivity
  href: CircuitTool.OptoelectronicsCalculator.html#CircuitTool_OptoelectronicsCalculator_Detectivity_System_Double_System_Double_
  name: Detectivity
  nameWithType: OptoelectronicsCalculator.Detectivity
  fullName: CircuitTool.OptoelectronicsCalculator.Detectivity
- uid: CircuitTool.OptoelectronicsCalculator.ModalDispersion*
  commentId: Overload:CircuitTool.OptoelectronicsCalculator.ModalDispersion
  href: CircuitTool.OptoelectronicsCalculator.html#CircuitTool_OptoelectronicsCalculator_ModalDispersion_System_Double_System_Double_System_Double_
  name: ModalDispersion
  nameWithType: OptoelectronicsCalculator.ModalDispersion
  fullName: CircuitTool.OptoelectronicsCalculator.ModalDispersion
- uid: CircuitTool.OptoelectronicsCalculator.ChromaticDispersion*
  commentId: Overload:CircuitTool.OptoelectronicsCalculator.ChromaticDispersion
  href: CircuitTool.OptoelectronicsCalculator.html#CircuitTool_OptoelectronicsCalculator_ChromaticDispersion_System_Double_System_Double_System_Double_
  name: ChromaticDispersion
  nameWithType: OptoelectronicsCalculator.ChromaticDispersion
  fullName: CircuitTool.OptoelectronicsCalculator.ChromaticDispersion
- uid: CircuitTool.OptoelectronicsCalculator.LinkBudget*
  commentId: Overload:CircuitTool.OptoelectronicsCalculator.LinkBudget
  href: CircuitTool.OptoelectronicsCalculator.html#CircuitTool_OptoelectronicsCalculator_LinkBudget_System_Double_System_Double_System_Double_
  name: LinkBudget
  nameWithType: OptoelectronicsCalculator.LinkBudget
  fullName: CircuitTool.OptoelectronicsCalculator.LinkBudget
