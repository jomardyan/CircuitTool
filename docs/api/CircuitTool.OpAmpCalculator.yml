### YamlMime:ManagedReference
items:
- uid: CircuitTool.OpAmpCalculator
  commentId: T:CircuitTool.OpAmpCalculator
  id: OpAmpCalculator
  parent: CircuitTool
  children:
  - CircuitTool.OpAmpCalculator.CMRR(System.Double,System.Double)
  - CircuitTool.OpAmpCalculator.ClosedLoopBandwidth(System.Double,System.Double)
  - CircuitTool.OpAmpCalculator.DifferentialGain(System.Double,System.Double)
  - CircuitTool.OpAmpCalculator.DifferentiatorOutput(System.Double,System.Double,System.Double)
  - CircuitTool.OpAmpCalculator.InputReferredOffset(System.Double,System.Double)
  - CircuitTool.OpAmpCalculator.InstrumentationAmplifierGain(System.Double,System.Double)
  - CircuitTool.OpAmpCalculator.IntegratorOutput(System.Double,System.Double,System.Double,System.Double)
  - CircuitTool.OpAmpCalculator.InvertingGain(System.Double,System.Double)
  - CircuitTool.OpAmpCalculator.MultipleFeedbackCutoffFrequency(System.Double,System.Double,System.Double,System.Double)
  - CircuitTool.OpAmpCalculator.NonInvertingGain(System.Double,System.Double)
  - CircuitTool.OpAmpCalculator.NonInvertingInputImpedance(System.Double,System.Double,System.Double)
  - CircuitTool.OpAmpCalculator.OutputImpedance(System.Double,System.Double,System.Double)
  - CircuitTool.OpAmpCalculator.SallenKeyCutoffFrequency(System.Double,System.Double,System.Double,System.Double)
  - CircuitTool.OpAmpCalculator.SlewRateLimit(System.Double,System.Double)
  - CircuitTool.OpAmpCalculator.StabilityMargins(System.Double,System.Double)
  langs:
  - csharp
  - vb
  name: OpAmpCalculator
  nameWithType: OpAmpCalculator
  fullName: CircuitTool.OpAmpCalculator
  type: Class
  source:
    remote:
      path: src/Calculators/OpAmpCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: OpAmpCalculator
    path: ../src/Calculators/OpAmpCalculator.cs
    startLine: 15
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Provides calculations for operational amplifier circuits and characteristics.
  remarks: >-
    <p>Example usage:</p>


    <pre><code class="lang-csharp">double gain = OpAmpCalculator.NonInvertingGain(10000, 1000); // Non-inverting gain

    double gain2 = OpAmpCalculator.InvertingGain(10000, 1000); // Inverting gain

    double bandwidth = OpAmpCalculator.GainBandwidthProduct(1e6, 100); // Closed-loop bandwidth</code></pre>
  example: []
  syntax:
    content: public static class OpAmpCalculator
    content.vb: Public Module OpAmpCalculator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: CircuitTool.OpAmpCalculator.NonInvertingGain(System.Double,System.Double)
  commentId: M:CircuitTool.OpAmpCalculator.NonInvertingGain(System.Double,System.Double)
  id: NonInvertingGain(System.Double,System.Double)
  parent: CircuitTool.OpAmpCalculator
  langs:
  - csharp
  - vb
  name: NonInvertingGain(double, double)
  nameWithType: OpAmpCalculator.NonInvertingGain(double, double)
  fullName: CircuitTool.OpAmpCalculator.NonInvertingGain(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/OpAmpCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: NonInvertingGain
    path: ../src/Calculators/OpAmpCalculator.cs
    startLine: 26
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates gain of a non-inverting amplifier.
  example:
  - double gain = OpAmpCalculator.NonInvertingGain(10000, 1000); // Non-inverting gain
  syntax:
    content: public static double NonInvertingGain(double feedbackResistor, double inputResistor)
    parameters:
    - id: feedbackResistor
      type: System.Double
      description: Feedback resistor (Rf) in ohms (Ω).
    - id: inputResistor
      type: System.Double
      description: Input resistor (Rin) in ohms (Ω).
    return:
      type: System.Double
      description: Voltage gain (linear).
    content.vb: Public Shared Function NonInvertingGain(feedbackResistor As Double, inputResistor As Double) As Double
  overload: CircuitTool.OpAmpCalculator.NonInvertingGain*
  nameWithType.vb: OpAmpCalculator.NonInvertingGain(Double, Double)
  fullName.vb: CircuitTool.OpAmpCalculator.NonInvertingGain(Double, Double)
  name.vb: NonInvertingGain(Double, Double)
- uid: CircuitTool.OpAmpCalculator.InvertingGain(System.Double,System.Double)
  commentId: M:CircuitTool.OpAmpCalculator.InvertingGain(System.Double,System.Double)
  id: InvertingGain(System.Double,System.Double)
  parent: CircuitTool.OpAmpCalculator
  langs:
  - csharp
  - vb
  name: InvertingGain(double, double)
  nameWithType: OpAmpCalculator.InvertingGain(double, double)
  fullName: CircuitTool.OpAmpCalculator.InvertingGain(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/OpAmpCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: InvertingGain
    path: ../src/Calculators/OpAmpCalculator.cs
    startLine: 43
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates gain of an inverting amplifier.
  example:
  - double gain = OpAmpCalculator.InvertingGain(10000, 1000); // Inverting gain
  syntax:
    content: public static double InvertingGain(double feedbackResistor, double inputResistor)
    parameters:
    - id: feedbackResistor
      type: System.Double
      description: Feedback resistor (Rf) in ohms (Ω).
    - id: inputResistor
      type: System.Double
      description: Input resistor (Rin) in ohms (Ω).
    return:
      type: System.Double
      description: Voltage gain magnitude (linear, positive value).
    content.vb: Public Shared Function InvertingGain(feedbackResistor As Double, inputResistor As Double) As Double
  overload: CircuitTool.OpAmpCalculator.InvertingGain*
  nameWithType.vb: OpAmpCalculator.InvertingGain(Double, Double)
  fullName.vb: CircuitTool.OpAmpCalculator.InvertingGain(Double, Double)
  name.vb: InvertingGain(Double, Double)
- uid: CircuitTool.OpAmpCalculator.ClosedLoopBandwidth(System.Double,System.Double)
  commentId: M:CircuitTool.OpAmpCalculator.ClosedLoopBandwidth(System.Double,System.Double)
  id: ClosedLoopBandwidth(System.Double,System.Double)
  parent: CircuitTool.OpAmpCalculator
  langs:
  - csharp
  - vb
  name: ClosedLoopBandwidth(double, double)
  nameWithType: OpAmpCalculator.ClosedLoopBandwidth(double, double)
  fullName: CircuitTool.OpAmpCalculator.ClosedLoopBandwidth(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/OpAmpCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ClosedLoopBandwidth
    path: ../src/Calculators/OpAmpCalculator.cs
    startLine: 60
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates closed-loop bandwidth from gain-bandwidth product.
  example:
  - double bandwidth = OpAmpCalculator.GainBandwidthProduct(1e6, 100); // Closed-loop bandwidth
  syntax:
    content: public static double ClosedLoopBandwidth(double gainBandwidthProduct, double closedLoopGain)
    parameters:
    - id: gainBandwidthProduct
      type: System.Double
      description: Gain-bandwidth product in Hz.
    - id: closedLoopGain
      type: System.Double
      description: Closed-loop gain (linear).
    return:
      type: System.Double
      description: Closed-loop bandwidth in Hz.
    content.vb: Public Shared Function ClosedLoopBandwidth(gainBandwidthProduct As Double, closedLoopGain As Double) As Double
  overload: CircuitTool.OpAmpCalculator.ClosedLoopBandwidth*
  nameWithType.vb: OpAmpCalculator.ClosedLoopBandwidth(Double, Double)
  fullName.vb: CircuitTool.OpAmpCalculator.ClosedLoopBandwidth(Double, Double)
  name.vb: ClosedLoopBandwidth(Double, Double)
- uid: CircuitTool.OpAmpCalculator.DifferentialGain(System.Double,System.Double)
  commentId: M:CircuitTool.OpAmpCalculator.DifferentialGain(System.Double,System.Double)
  id: DifferentialGain(System.Double,System.Double)
  parent: CircuitTool.OpAmpCalculator
  langs:
  - csharp
  - vb
  name: DifferentialGain(double, double)
  nameWithType: OpAmpCalculator.DifferentialGain(double, double)
  fullName: CircuitTool.OpAmpCalculator.DifferentialGain(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/OpAmpCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: DifferentialGain
    path: ../src/Calculators/OpAmpCalculator.cs
    startLine: 74
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates gain of a differential amplifier.
  example: []
  syntax:
    content: public static double DifferentialGain(double feedbackResistor, double inputResistor)
    parameters:
    - id: feedbackResistor
      type: System.Double
      description: Feedback resistor (Rf) in ohms (Ω).
    - id: inputResistor
      type: System.Double
      description: Input resistor (Rin) in ohms (Ω).
    return:
      type: System.Double
      description: Differential gain (linear).
    content.vb: Public Shared Function DifferentialGain(feedbackResistor As Double, inputResistor As Double) As Double
  overload: CircuitTool.OpAmpCalculator.DifferentialGain*
  nameWithType.vb: OpAmpCalculator.DifferentialGain(Double, Double)
  fullName.vb: CircuitTool.OpAmpCalculator.DifferentialGain(Double, Double)
  name.vb: DifferentialGain(Double, Double)
- uid: CircuitTool.OpAmpCalculator.CMRR(System.Double,System.Double)
  commentId: M:CircuitTool.OpAmpCalculator.CMRR(System.Double,System.Double)
  id: CMRR(System.Double,System.Double)
  parent: CircuitTool.OpAmpCalculator
  langs:
  - csharp
  - vb
  name: CMRR(double, double)
  nameWithType: OpAmpCalculator.CMRR(double, double)
  fullName: CircuitTool.OpAmpCalculator.CMRR(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/OpAmpCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: CMRR
    path: ../src/Calculators/OpAmpCalculator.cs
    startLine: 88
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates common-mode rejection ratio (CMRR) in dB.
  example: []
  syntax:
    content: public static double CMRR(double differentialGain, double commonModeGain)
    parameters:
    - id: differentialGain
      type: System.Double
      description: Differential mode gain (linear).
    - id: commonModeGain
      type: System.Double
      description: Common mode gain (linear).
    return:
      type: System.Double
      description: CMRR in dB.
    content.vb: Public Shared Function CMRR(differentialGain As Double, commonModeGain As Double) As Double
  overload: CircuitTool.OpAmpCalculator.CMRR*
  nameWithType.vb: OpAmpCalculator.CMRR(Double, Double)
  fullName.vb: CircuitTool.OpAmpCalculator.CMRR(Double, Double)
  name.vb: CMRR(Double, Double)
- uid: CircuitTool.OpAmpCalculator.NonInvertingInputImpedance(System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.OpAmpCalculator.NonInvertingInputImpedance(System.Double,System.Double,System.Double)
  id: NonInvertingInputImpedance(System.Double,System.Double,System.Double)
  parent: CircuitTool.OpAmpCalculator
  langs:
  - csharp
  - vb
  name: NonInvertingInputImpedance(double, double, double)
  nameWithType: OpAmpCalculator.NonInvertingInputImpedance(double, double, double)
  fullName: CircuitTool.OpAmpCalculator.NonInvertingInputImpedance(double, double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/OpAmpCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: NonInvertingInputImpedance
    path: ../src/Calculators/OpAmpCalculator.cs
    startLine: 103
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates input impedance of a non-inverting amplifier.
  example: []
  syntax:
    content: public static double NonInvertingInputImpedance(double opAmpInputImpedance, double openLoopGain, double closedLoopGain)
    parameters:
    - id: opAmpInputImpedance
      type: System.Double
      description: Op-amp input impedance in ohms (Ω).
    - id: openLoopGain
      type: System.Double
      description: Open-loop gain (linear).
    - id: closedLoopGain
      type: System.Double
      description: Closed-loop gain (linear).
    return:
      type: System.Double
      description: Input impedance in ohms (Ω).
    content.vb: Public Shared Function NonInvertingInputImpedance(opAmpInputImpedance As Double, openLoopGain As Double, closedLoopGain As Double) As Double
  overload: CircuitTool.OpAmpCalculator.NonInvertingInputImpedance*
  nameWithType.vb: OpAmpCalculator.NonInvertingInputImpedance(Double, Double, Double)
  fullName.vb: CircuitTool.OpAmpCalculator.NonInvertingInputImpedance(Double, Double, Double)
  name.vb: NonInvertingInputImpedance(Double, Double, Double)
- uid: CircuitTool.OpAmpCalculator.OutputImpedance(System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.OpAmpCalculator.OutputImpedance(System.Double,System.Double,System.Double)
  id: OutputImpedance(System.Double,System.Double,System.Double)
  parent: CircuitTool.OpAmpCalculator
  langs:
  - csharp
  - vb
  name: OutputImpedance(double, double, double)
  nameWithType: OpAmpCalculator.OutputImpedance(double, double, double)
  fullName: CircuitTool.OpAmpCalculator.OutputImpedance(double, double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/OpAmpCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: OutputImpedance
    path: ../src/Calculators/OpAmpCalculator.cs
    startLine: 119
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates output impedance of an op-amp circuit.
  example: []
  syntax:
    content: public static double OutputImpedance(double opAmpOutputImpedance, double openLoopGain, double feedbackFactor)
    parameters:
    - id: opAmpOutputImpedance
      type: System.Double
      description: Op-amp output impedance in ohms (Ω).
    - id: openLoopGain
      type: System.Double
      description: Open-loop gain (linear).
    - id: feedbackFactor
      type: System.Double
      description: Feedback factor (β).
    return:
      type: System.Double
      description: Output impedance in ohms (Ω).
    content.vb: Public Shared Function OutputImpedance(opAmpOutputImpedance As Double, openLoopGain As Double, feedbackFactor As Double) As Double
  overload: CircuitTool.OpAmpCalculator.OutputImpedance*
  nameWithType.vb: OpAmpCalculator.OutputImpedance(Double, Double, Double)
  fullName.vb: CircuitTool.OpAmpCalculator.OutputImpedance(Double, Double, Double)
  name.vb: OutputImpedance(Double, Double, Double)
- uid: CircuitTool.OpAmpCalculator.SlewRateLimit(System.Double,System.Double)
  commentId: M:CircuitTool.OpAmpCalculator.SlewRateLimit(System.Double,System.Double)
  id: SlewRateLimit(System.Double,System.Double)
  parent: CircuitTool.OpAmpCalculator
  langs:
  - csharp
  - vb
  name: SlewRateLimit(double, double)
  nameWithType: OpAmpCalculator.SlewRateLimit(double, double)
  fullName: CircuitTool.OpAmpCalculator.SlewRateLimit(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/OpAmpCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: SlewRateLimit
    path: ../src/Calculators/OpAmpCalculator.cs
    startLine: 133
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates slew rate limitation for sinusoidal signals.
  example: []
  syntax:
    content: public static double SlewRateLimit(double slewRate, double amplitude)
    parameters:
    - id: slewRate
      type: System.Double
      description: Slew rate in V/s.
    - id: amplitude
      type: System.Double
      description: Peak amplitude in volts (V).
    return:
      type: System.Double
      description: Maximum frequency without slew rate limiting in Hz.
    content.vb: Public Shared Function SlewRateLimit(slewRate As Double, amplitude As Double) As Double
  overload: CircuitTool.OpAmpCalculator.SlewRateLimit*
  nameWithType.vb: OpAmpCalculator.SlewRateLimit(Double, Double)
  fullName.vb: CircuitTool.OpAmpCalculator.SlewRateLimit(Double, Double)
  name.vb: SlewRateLimit(Double, Double)
- uid: CircuitTool.OpAmpCalculator.StabilityMargins(System.Double,System.Double)
  commentId: M:CircuitTool.OpAmpCalculator.StabilityMargins(System.Double,System.Double)
  id: StabilityMargins(System.Double,System.Double)
  parent: CircuitTool.OpAmpCalculator
  langs:
  - csharp
  - vb
  name: StabilityMargins(double, double)
  nameWithType: OpAmpCalculator.StabilityMargins(double, double)
  fullName: CircuitTool.OpAmpCalculator.StabilityMargins(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/OpAmpCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: StabilityMargins
    path: ../src/Calculators/OpAmpCalculator.cs
    startLine: 147
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates gain and phase margins for stability analysis.
  example: []
  syntax:
    content: public static (double GainMargin, double PhaseMargin) StabilityMargins(double openLoopGain, double phaseMargin)
    parameters:
    - id: openLoopGain
      type: System.Double
      description: Open-loop gain at crossover frequency (linear).
    - id: phaseMargin
      type: System.Double
      description: Phase margin in degrees.
    return:
      type: System.ValueTuple{System.Double,System.Double}
      description: Tuple containing (GainMargin in dB, PhaseMargin in degrees).
    content.vb: Public Shared Function StabilityMargins(openLoopGain As Double, phaseMargin As Double) As (GainMargin As Double, PhaseMargin As Double)
  overload: CircuitTool.OpAmpCalculator.StabilityMargins*
  nameWithType.vb: OpAmpCalculator.StabilityMargins(Double, Double)
  fullName.vb: CircuitTool.OpAmpCalculator.StabilityMargins(Double, Double)
  name.vb: StabilityMargins(Double, Double)
- uid: CircuitTool.OpAmpCalculator.IntegratorOutput(System.Double,System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.OpAmpCalculator.IntegratorOutput(System.Double,System.Double,System.Double,System.Double)
  id: IntegratorOutput(System.Double,System.Double,System.Double,System.Double)
  parent: CircuitTool.OpAmpCalculator
  langs:
  - csharp
  - vb
  name: IntegratorOutput(double, double, double, double)
  nameWithType: OpAmpCalculator.IntegratorOutput(double, double, double, double)
  fullName: CircuitTool.OpAmpCalculator.IntegratorOutput(double, double, double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/OpAmpCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: IntegratorOutput
    path: ../src/Calculators/OpAmpCalculator.cs
    startLine: 164
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates integrator circuit output for DC input.
  example: []
  syntax:
    content: public static double IntegratorOutput(double inputVoltage, double inputResistor, double feedbackCapacitor, double time)
    parameters:
    - id: inputVoltage
      type: System.Double
      description: Input voltage in volts (V).
    - id: inputResistor
      type: System.Double
      description: Input resistor in ohms (Ω).
    - id: feedbackCapacitor
      type: System.Double
      description: Feedback capacitor in farads (F).
    - id: time
      type: System.Double
      description: Time in seconds (s).
    return:
      type: System.Double
      description: Output voltage in volts (V).
    content.vb: Public Shared Function IntegratorOutput(inputVoltage As Double, inputResistor As Double, feedbackCapacitor As Double, time As Double) As Double
  overload: CircuitTool.OpAmpCalculator.IntegratorOutput*
  nameWithType.vb: OpAmpCalculator.IntegratorOutput(Double, Double, Double, Double)
  fullName.vb: CircuitTool.OpAmpCalculator.IntegratorOutput(Double, Double, Double, Double)
  name.vb: IntegratorOutput(Double, Double, Double, Double)
- uid: CircuitTool.OpAmpCalculator.DifferentiatorOutput(System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.OpAmpCalculator.DifferentiatorOutput(System.Double,System.Double,System.Double)
  id: DifferentiatorOutput(System.Double,System.Double,System.Double)
  parent: CircuitTool.OpAmpCalculator
  langs:
  - csharp
  - vb
  name: DifferentiatorOutput(double, double, double)
  nameWithType: OpAmpCalculator.DifferentiatorOutput(double, double, double)
  fullName: CircuitTool.OpAmpCalculator.DifferentiatorOutput(double, double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/OpAmpCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: DifferentiatorOutput
    path: ../src/Calculators/OpAmpCalculator.cs
    startLine: 179
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates differentiator circuit output for step input.
  example: []
  syntax:
    content: public static double DifferentiatorOutput(double inputCapacitor, double feedbackResistor, double inputVoltageStep)
    parameters:
    - id: inputCapacitor
      type: System.Double
      description: Input capacitor in farads (F).
    - id: feedbackResistor
      type: System.Double
      description: Feedback resistor in ohms (Ω).
    - id: inputVoltageStep
      type: System.Double
      description: Input voltage step in volts (V).
    return:
      type: System.Double
      description: Initial output voltage in volts (V).
    content.vb: Public Shared Function DifferentiatorOutput(inputCapacitor As Double, feedbackResistor As Double, inputVoltageStep As Double) As Double
  overload: CircuitTool.OpAmpCalculator.DifferentiatorOutput*
  nameWithType.vb: OpAmpCalculator.DifferentiatorOutput(Double, Double, Double)
  fullName.vb: CircuitTool.OpAmpCalculator.DifferentiatorOutput(Double, Double, Double)
  name.vb: DifferentiatorOutput(Double, Double, Double)
- uid: CircuitTool.OpAmpCalculator.SallenKeyCutoffFrequency(System.Double,System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.OpAmpCalculator.SallenKeyCutoffFrequency(System.Double,System.Double,System.Double,System.Double)
  id: SallenKeyCutoffFrequency(System.Double,System.Double,System.Double,System.Double)
  parent: CircuitTool.OpAmpCalculator
  langs:
  - csharp
  - vb
  name: SallenKeyCutoffFrequency(double, double, double, double)
  nameWithType: OpAmpCalculator.SallenKeyCutoffFrequency(double, double, double, double)
  fullName: CircuitTool.OpAmpCalculator.SallenKeyCutoffFrequency(double, double, double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/OpAmpCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: SallenKeyCutoffFrequency
    path: ../src/Calculators/OpAmpCalculator.cs
    startLine: 197
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates Sallen-Key filter cutoff frequency.
  example: []
  syntax:
    content: public static double SallenKeyCutoffFrequency(double r1, double r2, double c1, double c2)
    parameters:
    - id: r1
      type: System.Double
      description: First resistor in ohms (Ω).
    - id: r2
      type: System.Double
      description: Second resistor in ohms (Ω).
    - id: c1
      type: System.Double
      description: First capacitor in farads (F).
    - id: c2
      type: System.Double
      description: Second capacitor in farads (F).
    return:
      type: System.Double
      description: Cutoff frequency in Hz.
    content.vb: Public Shared Function SallenKeyCutoffFrequency(r1 As Double, r2 As Double, c1 As Double, c2 As Double) As Double
  overload: CircuitTool.OpAmpCalculator.SallenKeyCutoffFrequency*
  nameWithType.vb: OpAmpCalculator.SallenKeyCutoffFrequency(Double, Double, Double, Double)
  fullName.vb: CircuitTool.OpAmpCalculator.SallenKeyCutoffFrequency(Double, Double, Double, Double)
  name.vb: SallenKeyCutoffFrequency(Double, Double, Double, Double)
- uid: CircuitTool.OpAmpCalculator.MultipleFeedbackCutoffFrequency(System.Double,System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.OpAmpCalculator.MultipleFeedbackCutoffFrequency(System.Double,System.Double,System.Double,System.Double)
  id: MultipleFeedbackCutoffFrequency(System.Double,System.Double,System.Double,System.Double)
  parent: CircuitTool.OpAmpCalculator
  langs:
  - csharp
  - vb
  name: MultipleFeedbackCutoffFrequency(double, double, double, double)
  nameWithType: OpAmpCalculator.MultipleFeedbackCutoffFrequency(double, double, double, double)
  fullName: CircuitTool.OpAmpCalculator.MultipleFeedbackCutoffFrequency(double, double, double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/OpAmpCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: MultipleFeedbackCutoffFrequency
    path: ../src/Calculators/OpAmpCalculator.cs
    startLine: 213
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates multiple feedback filter cutoff frequency.
  example: []
  syntax:
    content: public static double MultipleFeedbackCutoffFrequency(double r1, double r2, double c1, double c2)
    parameters:
    - id: r1
      type: System.Double
      description: Input resistor in ohms (Ω).
    - id: r2
      type: System.Double
      description: Feedback resistor in ohms (Ω).
    - id: c1
      type: System.Double
      description: Input capacitor in farads (F).
    - id: c2
      type: System.Double
      description: Feedback capacitor in farads (F).
    return:
      type: System.Double
      description: Cutoff frequency in Hz.
    content.vb: Public Shared Function MultipleFeedbackCutoffFrequency(r1 As Double, r2 As Double, c1 As Double, c2 As Double) As Double
  overload: CircuitTool.OpAmpCalculator.MultipleFeedbackCutoffFrequency*
  nameWithType.vb: OpAmpCalculator.MultipleFeedbackCutoffFrequency(Double, Double, Double, Double)
  fullName.vb: CircuitTool.OpAmpCalculator.MultipleFeedbackCutoffFrequency(Double, Double, Double, Double)
  name.vb: MultipleFeedbackCutoffFrequency(Double, Double, Double, Double)
- uid: CircuitTool.OpAmpCalculator.InstrumentationAmplifierGain(System.Double,System.Double)
  commentId: M:CircuitTool.OpAmpCalculator.InstrumentationAmplifierGain(System.Double,System.Double)
  id: InstrumentationAmplifierGain(System.Double,System.Double)
  parent: CircuitTool.OpAmpCalculator
  langs:
  - csharp
  - vb
  name: InstrumentationAmplifierGain(double, double)
  nameWithType: OpAmpCalculator.InstrumentationAmplifierGain(double, double)
  fullName: CircuitTool.OpAmpCalculator.InstrumentationAmplifierGain(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/OpAmpCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: InstrumentationAmplifierGain
    path: ../src/Calculators/OpAmpCalculator.cs
    startLine: 227
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates instrumentation amplifier gain.
  example: []
  syntax:
    content: public static double InstrumentationAmplifierGain(double gainResistor, double internalResistor = 50000)
    parameters:
    - id: gainResistor
      type: System.Double
      description: Gain setting resistor in ohms (Ω).
    - id: internalResistor
      type: System.Double
      description: Internal resistor value in ohms (Ω) - typically 50kΩ.
    return:
      type: System.Double
      description: Instrumentation amplifier gain (linear).
    content.vb: Public Shared Function InstrumentationAmplifierGain(gainResistor As Double, internalResistor As Double = 50000) As Double
  overload: CircuitTool.OpAmpCalculator.InstrumentationAmplifierGain*
  nameWithType.vb: OpAmpCalculator.InstrumentationAmplifierGain(Double, Double)
  fullName.vb: CircuitTool.OpAmpCalculator.InstrumentationAmplifierGain(Double, Double)
  name.vb: InstrumentationAmplifierGain(Double, Double)
- uid: CircuitTool.OpAmpCalculator.InputReferredOffset(System.Double,System.Double)
  commentId: M:CircuitTool.OpAmpCalculator.InputReferredOffset(System.Double,System.Double)
  id: InputReferredOffset(System.Double,System.Double)
  parent: CircuitTool.OpAmpCalculator
  langs:
  - csharp
  - vb
  name: InputReferredOffset(double, double)
  nameWithType: OpAmpCalculator.InputReferredOffset(double, double)
  fullName: CircuitTool.OpAmpCalculator.InputReferredOffset(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/OpAmpCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: InputReferredOffset
    path: ../src/Calculators/OpAmpCalculator.cs
    startLine: 241
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates offset voltage referred to input.
  example: []
  syntax:
    content: public static double InputReferredOffset(double outputOffset, double gain)
    parameters:
    - id: outputOffset
      type: System.Double
      description: Output offset voltage in volts (V).
    - id: gain
      type: System.Double
      description: Amplifier gain (linear).
    return:
      type: System.Double
      description: Input-referred offset voltage in volts (V).
    content.vb: Public Shared Function InputReferredOffset(outputOffset As Double, gain As Double) As Double
  overload: CircuitTool.OpAmpCalculator.InputReferredOffset*
  nameWithType.vb: OpAmpCalculator.InputReferredOffset(Double, Double)
  fullName.vb: CircuitTool.OpAmpCalculator.InputReferredOffset(Double, Double)
  name.vb: InputReferredOffset(Double, Double)
references:
- uid: CircuitTool
  commentId: N:CircuitTool
  href: CircuitTool.html
  name: CircuitTool
  nameWithType: CircuitTool
  fullName: CircuitTool
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CircuitTool.OpAmpCalculator.NonInvertingGain*
  commentId: Overload:CircuitTool.OpAmpCalculator.NonInvertingGain
  href: CircuitTool.OpAmpCalculator.html#CircuitTool_OpAmpCalculator_NonInvertingGain_System_Double_System_Double_
  name: NonInvertingGain
  nameWithType: OpAmpCalculator.NonInvertingGain
  fullName: CircuitTool.OpAmpCalculator.NonInvertingGain
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: CircuitTool.OpAmpCalculator.InvertingGain*
  commentId: Overload:CircuitTool.OpAmpCalculator.InvertingGain
  href: CircuitTool.OpAmpCalculator.html#CircuitTool_OpAmpCalculator_InvertingGain_System_Double_System_Double_
  name: InvertingGain
  nameWithType: OpAmpCalculator.InvertingGain
  fullName: CircuitTool.OpAmpCalculator.InvertingGain
- uid: CircuitTool.OpAmpCalculator.ClosedLoopBandwidth*
  commentId: Overload:CircuitTool.OpAmpCalculator.ClosedLoopBandwidth
  href: CircuitTool.OpAmpCalculator.html#CircuitTool_OpAmpCalculator_ClosedLoopBandwidth_System_Double_System_Double_
  name: ClosedLoopBandwidth
  nameWithType: OpAmpCalculator.ClosedLoopBandwidth
  fullName: CircuitTool.OpAmpCalculator.ClosedLoopBandwidth
- uid: CircuitTool.OpAmpCalculator.DifferentialGain*
  commentId: Overload:CircuitTool.OpAmpCalculator.DifferentialGain
  href: CircuitTool.OpAmpCalculator.html#CircuitTool_OpAmpCalculator_DifferentialGain_System_Double_System_Double_
  name: DifferentialGain
  nameWithType: OpAmpCalculator.DifferentialGain
  fullName: CircuitTool.OpAmpCalculator.DifferentialGain
- uid: CircuitTool.OpAmpCalculator.CMRR*
  commentId: Overload:CircuitTool.OpAmpCalculator.CMRR
  href: CircuitTool.OpAmpCalculator.html#CircuitTool_OpAmpCalculator_CMRR_System_Double_System_Double_
  name: CMRR
  nameWithType: OpAmpCalculator.CMRR
  fullName: CircuitTool.OpAmpCalculator.CMRR
- uid: CircuitTool.OpAmpCalculator.NonInvertingInputImpedance*
  commentId: Overload:CircuitTool.OpAmpCalculator.NonInvertingInputImpedance
  href: CircuitTool.OpAmpCalculator.html#CircuitTool_OpAmpCalculator_NonInvertingInputImpedance_System_Double_System_Double_System_Double_
  name: NonInvertingInputImpedance
  nameWithType: OpAmpCalculator.NonInvertingInputImpedance
  fullName: CircuitTool.OpAmpCalculator.NonInvertingInputImpedance
- uid: CircuitTool.OpAmpCalculator.OutputImpedance*
  commentId: Overload:CircuitTool.OpAmpCalculator.OutputImpedance
  href: CircuitTool.OpAmpCalculator.html#CircuitTool_OpAmpCalculator_OutputImpedance_System_Double_System_Double_System_Double_
  name: OutputImpedance
  nameWithType: OpAmpCalculator.OutputImpedance
  fullName: CircuitTool.OpAmpCalculator.OutputImpedance
- uid: CircuitTool.OpAmpCalculator.SlewRateLimit*
  commentId: Overload:CircuitTool.OpAmpCalculator.SlewRateLimit
  href: CircuitTool.OpAmpCalculator.html#CircuitTool_OpAmpCalculator_SlewRateLimit_System_Double_System_Double_
  name: SlewRateLimit
  nameWithType: OpAmpCalculator.SlewRateLimit
  fullName: CircuitTool.OpAmpCalculator.SlewRateLimit
- uid: CircuitTool.OpAmpCalculator.StabilityMargins*
  commentId: Overload:CircuitTool.OpAmpCalculator.StabilityMargins
  href: CircuitTool.OpAmpCalculator.html#CircuitTool_OpAmpCalculator_StabilityMargins_System_Double_System_Double_
  name: StabilityMargins
  nameWithType: OpAmpCalculator.StabilityMargins
  fullName: CircuitTool.OpAmpCalculator.StabilityMargins
- uid: System.ValueTuple{System.Double,System.Double}
  commentId: T:System.ValueTuple{System.Double,System.Double}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: (double NoiseMarginHigh, double NoiseMarginLow)
  nameWithType: (double NoiseMarginHigh, double NoiseMarginLow)
  fullName: (double NoiseMarginHigh, double NoiseMarginLow)
  nameWithType.vb: (NoiseMarginHigh As Double, NoiseMarginLow As Double)
  fullName.vb: (NoiseMarginHigh As Double, NoiseMarginLow As Double)
  name.vb: (NoiseMarginHigh As Double, NoiseMarginLow As Double)
  spec.csharp:
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double}.NoiseMarginHigh
    name: NoiseMarginHigh
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double-.noisemarginhigh
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double}.NoiseMarginLow
    name: NoiseMarginLow
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double-.noisemarginlow
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Double,System.Double}.NoiseMarginHigh
    name: NoiseMarginHigh
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double-.noisemarginhigh
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double}.NoiseMarginLow
    name: NoiseMarginLow
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double-.noisemarginlow
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: CircuitTool.OpAmpCalculator.IntegratorOutput*
  commentId: Overload:CircuitTool.OpAmpCalculator.IntegratorOutput
  href: CircuitTool.OpAmpCalculator.html#CircuitTool_OpAmpCalculator_IntegratorOutput_System_Double_System_Double_System_Double_System_Double_
  name: IntegratorOutput
  nameWithType: OpAmpCalculator.IntegratorOutput
  fullName: CircuitTool.OpAmpCalculator.IntegratorOutput
- uid: CircuitTool.OpAmpCalculator.DifferentiatorOutput*
  commentId: Overload:CircuitTool.OpAmpCalculator.DifferentiatorOutput
  href: CircuitTool.OpAmpCalculator.html#CircuitTool_OpAmpCalculator_DifferentiatorOutput_System_Double_System_Double_System_Double_
  name: DifferentiatorOutput
  nameWithType: OpAmpCalculator.DifferentiatorOutput
  fullName: CircuitTool.OpAmpCalculator.DifferentiatorOutput
- uid: CircuitTool.OpAmpCalculator.SallenKeyCutoffFrequency*
  commentId: Overload:CircuitTool.OpAmpCalculator.SallenKeyCutoffFrequency
  href: CircuitTool.OpAmpCalculator.html#CircuitTool_OpAmpCalculator_SallenKeyCutoffFrequency_System_Double_System_Double_System_Double_System_Double_
  name: SallenKeyCutoffFrequency
  nameWithType: OpAmpCalculator.SallenKeyCutoffFrequency
  fullName: CircuitTool.OpAmpCalculator.SallenKeyCutoffFrequency
- uid: CircuitTool.OpAmpCalculator.MultipleFeedbackCutoffFrequency*
  commentId: Overload:CircuitTool.OpAmpCalculator.MultipleFeedbackCutoffFrequency
  href: CircuitTool.OpAmpCalculator.html#CircuitTool_OpAmpCalculator_MultipleFeedbackCutoffFrequency_System_Double_System_Double_System_Double_System_Double_
  name: MultipleFeedbackCutoffFrequency
  nameWithType: OpAmpCalculator.MultipleFeedbackCutoffFrequency
  fullName: CircuitTool.OpAmpCalculator.MultipleFeedbackCutoffFrequency
- uid: CircuitTool.OpAmpCalculator.InstrumentationAmplifierGain*
  commentId: Overload:CircuitTool.OpAmpCalculator.InstrumentationAmplifierGain
  href: CircuitTool.OpAmpCalculator.html#CircuitTool_OpAmpCalculator_InstrumentationAmplifierGain_System_Double_System_Double_
  name: InstrumentationAmplifierGain
  nameWithType: OpAmpCalculator.InstrumentationAmplifierGain
  fullName: CircuitTool.OpAmpCalculator.InstrumentationAmplifierGain
- uid: CircuitTool.OpAmpCalculator.InputReferredOffset*
  commentId: Overload:CircuitTool.OpAmpCalculator.InputReferredOffset
  href: CircuitTool.OpAmpCalculator.html#CircuitTool_OpAmpCalculator_InputReferredOffset_System_Double_System_Double_
  name: InputReferredOffset
  nameWithType: OpAmpCalculator.InputReferredOffset
  fullName: CircuitTool.OpAmpCalculator.InputReferredOffset
