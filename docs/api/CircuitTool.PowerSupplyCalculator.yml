### YamlMime:ManagedReference
items:
- uid: CircuitTool.PowerSupplyCalculator
  commentId: T:CircuitTool.PowerSupplyCalculator
  id: PowerSupplyCalculator
  parent: CircuitTool
  children:
  - CircuitTool.PowerSupplyCalculator.CalculateBoostInductor(System.Double,System.Double,System.Double,System.Double,System.Double)
  - CircuitTool.PowerSupplyCalculator.CalculateBuckCapacitor(System.Double,System.Double,System.Double,System.Double)
  - CircuitTool.PowerSupplyCalculator.CalculateBuckInductor(System.Double,System.Double,System.Double,System.Double,System.Double)
  - CircuitTool.PowerSupplyCalculator.CalculateCurrentSenseResistor(System.Double,System.Double,System.Double)
  - CircuitTool.PowerSupplyCalculator.CalculateEMIFilter(System.Double,System.Double,System.Double)
  - CircuitTool.PowerSupplyCalculator.CalculateFlybackTurnsRatio(System.Double,System.Double,System.Double,System.Double,System.Double)
  - CircuitTool.PowerSupplyCalculator.CalculateHoldupTime(System.Double,System.Double,System.Double,System.Double,System.Double)
  - CircuitTool.PowerSupplyCalculator.CalculateLinearRegulator(System.Double,System.Double,System.Double)
  - CircuitTool.PowerSupplyCalculator.EstimateEfficiency(CircuitTool.PowerSupplyCalculator.PSUTopology,System.Double,System.Double,System.Double)
  - CircuitTool.PowerSupplyCalculator.GenerateDesignChecklist(CircuitTool.PowerSupplyCalculator.PSUTopology,System.Double,System.Boolean)
  langs:
  - csharp
  - vb
  name: PowerSupplyCalculator
  nameWithType: PowerSupplyCalculator
  fullName: CircuitTool.PowerSupplyCalculator
  type: Class
  source:
    remote:
      path: src/Hardware/PowerSupplyCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: PowerSupplyCalculator
    path: src/Hardware/PowerSupplyCalculator.cs
    startLine: 9
  namespace: CircuitTool
  summary: Provides calculations and utilities for power supply design and analysis
  example: []
  syntax:
    content: public static class PowerSupplyCalculator
    content.vb: Public Module PowerSupplyCalculator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: CircuitTool.PowerSupplyCalculator.CalculateLinearRegulator(System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.PowerSupplyCalculator.CalculateLinearRegulator(System.Double,System.Double,System.Double)
  id: CalculateLinearRegulator(System.Double,System.Double,System.Double)
  parent: CircuitTool.PowerSupplyCalculator
  langs:
  - csharp
  - vb
  name: CalculateLinearRegulator(double, double, double)
  nameWithType: PowerSupplyCalculator.CalculateLinearRegulator(double, double, double)
  fullName: CircuitTool.PowerSupplyCalculator.CalculateLinearRegulator(double, double, double)
  type: Method
  source:
    remote:
      path: src/Hardware/PowerSupplyCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: CalculateLinearRegulator
    path: src/Hardware/PowerSupplyCalculator.cs
    startLine: 32
  namespace: CircuitTool
  summary: Calculates linear regulator heat dissipation and efficiency
  example: []
  syntax:
    content: public static (double powerDissipation, double efficiency) CalculateLinearRegulator(double inputVoltage, double outputVoltage, double outputCurrent)
    parameters:
    - id: inputVoltage
      type: System.Double
      description: Input voltage
    - id: outputVoltage
      type: System.Double
      description: Output voltage
    - id: outputCurrent
      type: System.Double
      description: Output current
    return:
      type: System.ValueTuple{System.Double,System.Double}
      description: Power dissipation and efficiency
    content.vb: Public Shared Function CalculateLinearRegulator(inputVoltage As Double, outputVoltage As Double, outputCurrent As Double) As (powerDissipation As Double, efficiency As Double)
  overload: CircuitTool.PowerSupplyCalculator.CalculateLinearRegulator*
  nameWithType.vb: PowerSupplyCalculator.CalculateLinearRegulator(Double, Double, Double)
  fullName.vb: CircuitTool.PowerSupplyCalculator.CalculateLinearRegulator(Double, Double, Double)
  name.vb: CalculateLinearRegulator(Double, Double, Double)
- uid: CircuitTool.PowerSupplyCalculator.CalculateBuckInductor(System.Double,System.Double,System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.PowerSupplyCalculator.CalculateBuckInductor(System.Double,System.Double,System.Double,System.Double,System.Double)
  id: CalculateBuckInductor(System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: CircuitTool.PowerSupplyCalculator
  langs:
  - csharp
  - vb
  name: CalculateBuckInductor(double, double, double, double, double)
  nameWithType: PowerSupplyCalculator.CalculateBuckInductor(double, double, double, double, double)
  fullName: CircuitTool.PowerSupplyCalculator.CalculateBuckInductor(double, double, double, double, double)
  type: Method
  source:
    remote:
      path: src/Hardware/PowerSupplyCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: CalculateBuckInductor
    path: src/Hardware/PowerSupplyCalculator.cs
    startLine: 52
  namespace: CircuitTool
  summary: Calculates buck converter inductor value
  example: []
  syntax:
    content: public static double CalculateBuckInductor(double inputVoltage, double outputVoltage, double outputCurrent, double switchingFrequency, double currentRipple = 0.2)
    parameters:
    - id: inputVoltage
      type: System.Double
      description: Input voltage
    - id: outputVoltage
      type: System.Double
      description: Output voltage
    - id: outputCurrent
      type: System.Double
      description: Output current
    - id: switchingFrequency
      type: System.Double
      description: Switching frequency in Hz
    - id: currentRipple
      type: System.Double
      description: Acceptable current ripple (0.1 = 10%)
    return:
      type: System.Double
      description: Required inductor value in henries
    content.vb: Public Shared Function CalculateBuckInductor(inputVoltage As Double, outputVoltage As Double, outputCurrent As Double, switchingFrequency As Double, currentRipple As Double = 0.2) As Double
  overload: CircuitTool.PowerSupplyCalculator.CalculateBuckInductor*
  nameWithType.vb: PowerSupplyCalculator.CalculateBuckInductor(Double, Double, Double, Double, Double)
  fullName.vb: CircuitTool.PowerSupplyCalculator.CalculateBuckInductor(Double, Double, Double, Double, Double)
  name.vb: CalculateBuckInductor(Double, Double, Double, Double, Double)
- uid: CircuitTool.PowerSupplyCalculator.CalculateBuckCapacitor(System.Double,System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.PowerSupplyCalculator.CalculateBuckCapacitor(System.Double,System.Double,System.Double,System.Double)
  id: CalculateBuckCapacitor(System.Double,System.Double,System.Double,System.Double)
  parent: CircuitTool.PowerSupplyCalculator
  langs:
  - csharp
  - vb
  name: CalculateBuckCapacitor(double, double, double, double)
  nameWithType: PowerSupplyCalculator.CalculateBuckCapacitor(double, double, double, double)
  fullName: CircuitTool.PowerSupplyCalculator.CalculateBuckCapacitor(double, double, double, double)
  type: Method
  source:
    remote:
      path: src/Hardware/PowerSupplyCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: CalculateBuckCapacitor
    path: src/Hardware/PowerSupplyCalculator.cs
    startLine: 69
  namespace: CircuitTool
  summary: Calculates buck converter output capacitor
  example: []
  syntax:
    content: public static double CalculateBuckCapacitor(double outputCurrent, double switchingFrequency, double voltageRipple, double currentRipple = 0.2)
    parameters:
    - id: outputCurrent
      type: System.Double
      description: Output current
    - id: switchingFrequency
      type: System.Double
      description: Switching frequency in Hz
    - id: voltageRipple
      type: System.Double
      description: Acceptable voltage ripple in volts
    - id: currentRipple
      type: System.Double
      description: Inductor current ripple (0.1 = 10%)
    return:
      type: System.Double
      description: Required capacitance in farads
    content.vb: Public Shared Function CalculateBuckCapacitor(outputCurrent As Double, switchingFrequency As Double, voltageRipple As Double, currentRipple As Double = 0.2) As Double
  overload: CircuitTool.PowerSupplyCalculator.CalculateBuckCapacitor*
  nameWithType.vb: PowerSupplyCalculator.CalculateBuckCapacitor(Double, Double, Double, Double)
  fullName.vb: CircuitTool.PowerSupplyCalculator.CalculateBuckCapacitor(Double, Double, Double, Double)
  name.vb: CalculateBuckCapacitor(Double, Double, Double, Double)
- uid: CircuitTool.PowerSupplyCalculator.CalculateBoostInductor(System.Double,System.Double,System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.PowerSupplyCalculator.CalculateBoostInductor(System.Double,System.Double,System.Double,System.Double,System.Double)
  id: CalculateBoostInductor(System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: CircuitTool.PowerSupplyCalculator
  langs:
  - csharp
  - vb
  name: CalculateBoostInductor(double, double, double, double, double)
  nameWithType: PowerSupplyCalculator.CalculateBoostInductor(double, double, double, double, double)
  fullName: CircuitTool.PowerSupplyCalculator.CalculateBoostInductor(double, double, double, double, double)
  type: Method
  source:
    remote:
      path: src/Hardware/PowerSupplyCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: CalculateBoostInductor
    path: src/Hardware/PowerSupplyCalculator.cs
    startLine: 85
  namespace: CircuitTool
  summary: Calculates boost converter inductor value
  example: []
  syntax:
    content: public static double CalculateBoostInductor(double inputVoltage, double outputVoltage, double outputCurrent, double switchingFrequency, double currentRipple = 0.2)
    parameters:
    - id: inputVoltage
      type: System.Double
      description: Input voltage
    - id: outputVoltage
      type: System.Double
      description: Output voltage
    - id: outputCurrent
      type: System.Double
      description: Output current
    - id: switchingFrequency
      type: System.Double
      description: Switching frequency in Hz
    - id: currentRipple
      type: System.Double
      description: Acceptable current ripple (0.1 = 10%)
    return:
      type: System.Double
      description: Required inductor value in henries
    content.vb: Public Shared Function CalculateBoostInductor(inputVoltage As Double, outputVoltage As Double, outputCurrent As Double, switchingFrequency As Double, currentRipple As Double = 0.2) As Double
  overload: CircuitTool.PowerSupplyCalculator.CalculateBoostInductor*
  nameWithType.vb: PowerSupplyCalculator.CalculateBoostInductor(Double, Double, Double, Double, Double)
  fullName.vb: CircuitTool.PowerSupplyCalculator.CalculateBoostInductor(Double, Double, Double, Double, Double)
  name.vb: CalculateBoostInductor(Double, Double, Double, Double, Double)
- uid: CircuitTool.PowerSupplyCalculator.CalculateFlybackTurnsRatio(System.Double,System.Double,System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.PowerSupplyCalculator.CalculateFlybackTurnsRatio(System.Double,System.Double,System.Double,System.Double,System.Double)
  id: CalculateFlybackTurnsRatio(System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: CircuitTool.PowerSupplyCalculator
  langs:
  - csharp
  - vb
  name: CalculateFlybackTurnsRatio(double, double, double, double, double)
  nameWithType: PowerSupplyCalculator.CalculateFlybackTurnsRatio(double, double, double, double, double)
  fullName: CircuitTool.PowerSupplyCalculator.CalculateFlybackTurnsRatio(double, double, double, double, double)
  type: Method
  source:
    remote:
      path: src/Hardware/PowerSupplyCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: CalculateFlybackTurnsRatio
    path: src/Hardware/PowerSupplyCalculator.cs
    startLine: 104
  namespace: CircuitTool
  summary: Calculates flyback transformer turns ratio
  example: []
  syntax:
    content: public static double CalculateFlybackTurnsRatio(double inputVoltageMin, double inputVoltageMax, double outputVoltage, double forwardVoltageOutput = 0.7, double maxDutyCycle = 0.45)
    parameters:
    - id: inputVoltageMin
      type: System.Double
      description: Minimum input voltage
    - id: inputVoltageMax
      type: System.Double
      description: Maximum input voltage
    - id: outputVoltage
      type: System.Double
      description: Output voltage
    - id: forwardVoltageOutput
      type: System.Double
      description: Output diode forward voltage
    - id: maxDutyCycle
      type: System.Double
      description: Maximum duty cycle (typically 0.45)
    return:
      type: System.Double
      description: Primary to secondary turns ratio
    content.vb: Public Shared Function CalculateFlybackTurnsRatio(inputVoltageMin As Double, inputVoltageMax As Double, outputVoltage As Double, forwardVoltageOutput As Double = 0.7, maxDutyCycle As Double = 0.45) As Double
  overload: CircuitTool.PowerSupplyCalculator.CalculateFlybackTurnsRatio*
  nameWithType.vb: PowerSupplyCalculator.CalculateFlybackTurnsRatio(Double, Double, Double, Double, Double)
  fullName.vb: CircuitTool.PowerSupplyCalculator.CalculateFlybackTurnsRatio(Double, Double, Double, Double, Double)
  name.vb: CalculateFlybackTurnsRatio(Double, Double, Double, Double, Double)
- uid: CircuitTool.PowerSupplyCalculator.EstimateEfficiency(CircuitTool.PowerSupplyCalculator.PSUTopology,System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.PowerSupplyCalculator.EstimateEfficiency(CircuitTool.PowerSupplyCalculator.PSUTopology,System.Double,System.Double,System.Double)
  id: EstimateEfficiency(CircuitTool.PowerSupplyCalculator.PSUTopology,System.Double,System.Double,System.Double)
  parent: CircuitTool.PowerSupplyCalculator
  langs:
  - csharp
  - vb
  name: EstimateEfficiency(PSUTopology, double, double, double)
  nameWithType: PowerSupplyCalculator.EstimateEfficiency(PowerSupplyCalculator.PSUTopology, double, double, double)
  fullName: CircuitTool.PowerSupplyCalculator.EstimateEfficiency(CircuitTool.PowerSupplyCalculator.PSUTopology, double, double, double)
  type: Method
  source:
    remote:
      path: src/Hardware/PowerSupplyCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: EstimateEfficiency
    path: src/Hardware/PowerSupplyCalculator.cs
    startLine: 119
  namespace: CircuitTool
  summary: Calculates power supply efficiency at different loads
  example: []
  syntax:
    content: public static double EstimateEfficiency(PowerSupplyCalculator.PSUTopology topology, double inputVoltage, double outputVoltage, double loadPercentage)
    parameters:
    - id: topology
      type: CircuitTool.PowerSupplyCalculator.PSUTopology
      description: Power supply topology
    - id: inputVoltage
      type: System.Double
      description: Input voltage
    - id: outputVoltage
      type: System.Double
      description: Output voltage
    - id: loadPercentage
      type: System.Double
      description: Load as percentage of maximum (0-1)
    return:
      type: System.Double
      description: Estimated efficiency
    content.vb: Public Shared Function EstimateEfficiency(topology As PowerSupplyCalculator.PSUTopology, inputVoltage As Double, outputVoltage As Double, loadPercentage As Double) As Double
  overload: CircuitTool.PowerSupplyCalculator.EstimateEfficiency*
  nameWithType.vb: PowerSupplyCalculator.EstimateEfficiency(PowerSupplyCalculator.PSUTopology, Double, Double, Double)
  fullName.vb: CircuitTool.PowerSupplyCalculator.EstimateEfficiency(CircuitTool.PowerSupplyCalculator.PSUTopology, Double, Double, Double)
  name.vb: EstimateEfficiency(PSUTopology, Double, Double, Double)
- uid: CircuitTool.PowerSupplyCalculator.CalculateCurrentSenseResistor(System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.PowerSupplyCalculator.CalculateCurrentSenseResistor(System.Double,System.Double,System.Double)
  id: CalculateCurrentSenseResistor(System.Double,System.Double,System.Double)
  parent: CircuitTool.PowerSupplyCalculator
  langs:
  - csharp
  - vb
  name: CalculateCurrentSenseResistor(double, double, double)
  nameWithType: PowerSupplyCalculator.CalculateCurrentSenseResistor(double, double, double)
  fullName: CircuitTool.PowerSupplyCalculator.CalculateCurrentSenseResistor(double, double, double)
  type: Method
  source:
    remote:
      path: src/Hardware/PowerSupplyCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: CalculateCurrentSenseResistor
    path: src/Hardware/PowerSupplyCalculator.cs
    startLine: 158
  namespace: CircuitTool
  summary: Calculates current sense resistor value
  example: []
  syntax:
    content: public static (double resistance, double powerRating) CalculateCurrentSenseResistor(double maxCurrent, double senseVoltage = 0.1, double tolerance = 0.01)
    parameters:
    - id: maxCurrent
      type: System.Double
      description: Maximum current to sense
    - id: senseVoltage
      type: System.Double
      description: Desired sense voltage (typically 0.1-0.5V)
    - id: tolerance
      type: System.Double
      description: Resistor tolerance (0.01 = 1%)
    return:
      type: System.ValueTuple{System.Double,System.Double}
      description: Sense resistor value and power rating
    content.vb: Public Shared Function CalculateCurrentSenseResistor(maxCurrent As Double, senseVoltage As Double = 0.1, tolerance As Double = 0.01) As (resistance As Double, powerRating As Double)
  overload: CircuitTool.PowerSupplyCalculator.CalculateCurrentSenseResistor*
  nameWithType.vb: PowerSupplyCalculator.CalculateCurrentSenseResistor(Double, Double, Double)
  fullName.vb: CircuitTool.PowerSupplyCalculator.CalculateCurrentSenseResistor(Double, Double, Double)
  name.vb: CalculateCurrentSenseResistor(Double, Double, Double)
- uid: CircuitTool.PowerSupplyCalculator.CalculateEMIFilter(System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.PowerSupplyCalculator.CalculateEMIFilter(System.Double,System.Double,System.Double)
  id: CalculateEMIFilter(System.Double,System.Double,System.Double)
  parent: CircuitTool.PowerSupplyCalculator
  langs:
  - csharp
  - vb
  name: CalculateEMIFilter(double, double, double)
  nameWithType: PowerSupplyCalculator.CalculateEMIFilter(double, double, double)
  fullName: CircuitTool.PowerSupplyCalculator.CalculateEMIFilter(double, double, double)
  type: Method
  source:
    remote:
      path: src/Hardware/PowerSupplyCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: CalculateEMIFilter
    path: src/Hardware/PowerSupplyCalculator.cs
    startLine: 177
  namespace: CircuitTool
  summary: Calculates EMI filter components for switching power supply
  example: []
  syntax:
    content: public static (double commonModeInductor, double differentialModeInductor, double commonModeCapacitor, double differentialModeCapacitor) CalculateEMIFilter(double switchingFrequency, double inputCurrent, double cableLength = 1)
    parameters:
    - id: switchingFrequency
      type: System.Double
      description: Switching frequency in Hz
    - id: inputCurrent
      type: System.Double
      description: Input current
    - id: cableLength
      type: System.Double
      description: Input cable length in meters
    return:
      type: System.ValueTuple{System.Double,System.Double,System.Double,System.Double}
      description: Common mode and differential mode filter values
    content.vb: Public Shared Function CalculateEMIFilter(switchingFrequency As Double, inputCurrent As Double, cableLength As Double = 1) As (commonModeInductor As Double, differentialModeInductor As Double, commonModeCapacitor As Double, differentialModeCapacitor As Double)
  overload: CircuitTool.PowerSupplyCalculator.CalculateEMIFilter*
  nameWithType.vb: PowerSupplyCalculator.CalculateEMIFilter(Double, Double, Double)
  fullName.vb: CircuitTool.PowerSupplyCalculator.CalculateEMIFilter(Double, Double, Double)
  name.vb: CalculateEMIFilter(Double, Double, Double)
- uid: CircuitTool.PowerSupplyCalculator.CalculateHoldupTime(System.Double,System.Double,System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.PowerSupplyCalculator.CalculateHoldupTime(System.Double,System.Double,System.Double,System.Double,System.Double)
  id: CalculateHoldupTime(System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: CircuitTool.PowerSupplyCalculator
  langs:
  - csharp
  - vb
  name: CalculateHoldupTime(double, double, double, double, double)
  nameWithType: PowerSupplyCalculator.CalculateHoldupTime(double, double, double, double, double)
  fullName: CircuitTool.PowerSupplyCalculator.CalculateHoldupTime(double, double, double, double, double)
  type: Method
  source:
    remote:
      path: src/Hardware/PowerSupplyCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: CalculateHoldupTime
    path: src/Hardware/PowerSupplyCalculator.cs
    startLine: 208
  namespace: CircuitTool
  summary: Calculates holdup time for power supply
  example: []
  syntax:
    content: public static double CalculateHoldupTime(double inputCapacitance, double nominalVoltage, double minimumVoltage, double outputPower, double efficiency = 0.85)
    parameters:
    - id: inputCapacitance
      type: System.Double
      description: Input capacitance in farads
    - id: nominalVoltage
      type: System.Double
      description: Nominal input voltage
    - id: minimumVoltage
      type: System.Double
      description: Minimum operating voltage
    - id: outputPower
      type: System.Double
      description: Output power in watts
    - id: efficiency
      type: System.Double
      description: Power supply efficiency (0-1)
    return:
      type: System.Double
      description: Holdup time in seconds
    content.vb: Public Shared Function CalculateHoldupTime(inputCapacitance As Double, nominalVoltage As Double, minimumVoltage As Double, outputPower As Double, efficiency As Double = 0.85) As Double
  overload: CircuitTool.PowerSupplyCalculator.CalculateHoldupTime*
  nameWithType.vb: PowerSupplyCalculator.CalculateHoldupTime(Double, Double, Double, Double, Double)
  fullName.vb: CircuitTool.PowerSupplyCalculator.CalculateHoldupTime(Double, Double, Double, Double, Double)
  name.vb: CalculateHoldupTime(Double, Double, Double, Double, Double)
- uid: CircuitTool.PowerSupplyCalculator.GenerateDesignChecklist(CircuitTool.PowerSupplyCalculator.PSUTopology,System.Double,System.Boolean)
  commentId: M:CircuitTool.PowerSupplyCalculator.GenerateDesignChecklist(CircuitTool.PowerSupplyCalculator.PSUTopology,System.Double,System.Boolean)
  id: GenerateDesignChecklist(CircuitTool.PowerSupplyCalculator.PSUTopology,System.Double,System.Boolean)
  parent: CircuitTool.PowerSupplyCalculator
  langs:
  - csharp
  - vb
  name: GenerateDesignChecklist(PSUTopology, double, bool)
  nameWithType: PowerSupplyCalculator.GenerateDesignChecklist(PowerSupplyCalculator.PSUTopology, double, bool)
  fullName: CircuitTool.PowerSupplyCalculator.GenerateDesignChecklist(CircuitTool.PowerSupplyCalculator.PSUTopology, double, bool)
  type: Method
  source:
    remote:
      path: src/Hardware/PowerSupplyCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: GenerateDesignChecklist
    path: src/Hardware/PowerSupplyCalculator.cs
    startLine: 224
  namespace: CircuitTool
  summary: Generates power supply design checklist
  example: []
  syntax:
    content: public static string GenerateDesignChecklist(PowerSupplyCalculator.PSUTopology topology, double outputPower, bool isIsolated = false)
    parameters:
    - id: topology
      type: CircuitTool.PowerSupplyCalculator.PSUTopology
      description: Power supply topology
    - id: outputPower
      type: System.Double
      description: Output power in watts
    - id: isIsolated
      type: System.Boolean
      description: Whether isolation is required
    return:
      type: System.String
      description: Design checklist
    content.vb: Public Shared Function GenerateDesignChecklist(topology As PowerSupplyCalculator.PSUTopology, outputPower As Double, isIsolated As Boolean = False) As String
  overload: CircuitTool.PowerSupplyCalculator.GenerateDesignChecklist*
  nameWithType.vb: PowerSupplyCalculator.GenerateDesignChecklist(PowerSupplyCalculator.PSUTopology, Double, Boolean)
  fullName.vb: CircuitTool.PowerSupplyCalculator.GenerateDesignChecklist(CircuitTool.PowerSupplyCalculator.PSUTopology, Double, Boolean)
  name.vb: GenerateDesignChecklist(PSUTopology, Double, Boolean)
references:
- uid: CircuitTool
  commentId: N:CircuitTool
  href: CircuitTool.html
  name: CircuitTool
  nameWithType: CircuitTool
  fullName: CircuitTool
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CircuitTool.PowerSupplyCalculator.CalculateLinearRegulator*
  commentId: Overload:CircuitTool.PowerSupplyCalculator.CalculateLinearRegulator
  href: CircuitTool.PowerSupplyCalculator.html#CircuitTool_PowerSupplyCalculator_CalculateLinearRegulator_System_Double_System_Double_System_Double_
  name: CalculateLinearRegulator
  nameWithType: PowerSupplyCalculator.CalculateLinearRegulator
  fullName: CircuitTool.PowerSupplyCalculator.CalculateLinearRegulator
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.ValueTuple{System.Double,System.Double}
  commentId: T:System.ValueTuple{System.Double,System.Double}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: (double referenceResistor, double biasVoltage)
  nameWithType: (double referenceResistor, double biasVoltage)
  fullName: (double referenceResistor, double biasVoltage)
  nameWithType.vb: (referenceResistor As Double, biasVoltage As Double)
  fullName.vb: (referenceResistor As Double, biasVoltage As Double)
  name.vb: (referenceResistor As Double, biasVoltage As Double)
  spec.csharp:
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double}.referenceResistor
    name: referenceResistor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double-.referenceresistor
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double}.biasVoltage
    name: biasVoltage
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double-.biasvoltage
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Double,System.Double}.referenceResistor
    name: referenceResistor
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double-.referenceresistor
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double}.biasVoltage
    name: biasVoltage
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double-.biasvoltage
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: CircuitTool.PowerSupplyCalculator.CalculateBuckInductor*
  commentId: Overload:CircuitTool.PowerSupplyCalculator.CalculateBuckInductor
  href: CircuitTool.PowerSupplyCalculator.html#CircuitTool_PowerSupplyCalculator_CalculateBuckInductor_System_Double_System_Double_System_Double_System_Double_System_Double_
  name: CalculateBuckInductor
  nameWithType: PowerSupplyCalculator.CalculateBuckInductor
  fullName: CircuitTool.PowerSupplyCalculator.CalculateBuckInductor
- uid: CircuitTool.PowerSupplyCalculator.CalculateBuckCapacitor*
  commentId: Overload:CircuitTool.PowerSupplyCalculator.CalculateBuckCapacitor
  href: CircuitTool.PowerSupplyCalculator.html#CircuitTool_PowerSupplyCalculator_CalculateBuckCapacitor_System_Double_System_Double_System_Double_System_Double_
  name: CalculateBuckCapacitor
  nameWithType: PowerSupplyCalculator.CalculateBuckCapacitor
  fullName: CircuitTool.PowerSupplyCalculator.CalculateBuckCapacitor
- uid: CircuitTool.PowerSupplyCalculator.CalculateBoostInductor*
  commentId: Overload:CircuitTool.PowerSupplyCalculator.CalculateBoostInductor
  href: CircuitTool.PowerSupplyCalculator.html#CircuitTool_PowerSupplyCalculator_CalculateBoostInductor_System_Double_System_Double_System_Double_System_Double_System_Double_
  name: CalculateBoostInductor
  nameWithType: PowerSupplyCalculator.CalculateBoostInductor
  fullName: CircuitTool.PowerSupplyCalculator.CalculateBoostInductor
- uid: CircuitTool.PowerSupplyCalculator.CalculateFlybackTurnsRatio*
  commentId: Overload:CircuitTool.PowerSupplyCalculator.CalculateFlybackTurnsRatio
  href: CircuitTool.PowerSupplyCalculator.html#CircuitTool_PowerSupplyCalculator_CalculateFlybackTurnsRatio_System_Double_System_Double_System_Double_System_Double_System_Double_
  name: CalculateFlybackTurnsRatio
  nameWithType: PowerSupplyCalculator.CalculateFlybackTurnsRatio
  fullName: CircuitTool.PowerSupplyCalculator.CalculateFlybackTurnsRatio
- uid: CircuitTool.PowerSupplyCalculator.EstimateEfficiency*
  commentId: Overload:CircuitTool.PowerSupplyCalculator.EstimateEfficiency
  href: CircuitTool.PowerSupplyCalculator.html#CircuitTool_PowerSupplyCalculator_EstimateEfficiency_CircuitTool_PowerSupplyCalculator_PSUTopology_System_Double_System_Double_System_Double_
  name: EstimateEfficiency
  nameWithType: PowerSupplyCalculator.EstimateEfficiency
  fullName: CircuitTool.PowerSupplyCalculator.EstimateEfficiency
- uid: CircuitTool.PowerSupplyCalculator.PSUTopology
  commentId: T:CircuitTool.PowerSupplyCalculator.PSUTopology
  parent: CircuitTool
  href: CircuitTool.PowerSupplyCalculator.html
  name: PowerSupplyCalculator.PSUTopology
  nameWithType: PowerSupplyCalculator.PSUTopology
  fullName: CircuitTool.PowerSupplyCalculator.PSUTopology
  spec.csharp:
  - uid: CircuitTool.PowerSupplyCalculator
    name: PowerSupplyCalculator
    href: CircuitTool.PowerSupplyCalculator.html
  - name: .
  - uid: CircuitTool.PowerSupplyCalculator.PSUTopology
    name: PSUTopology
    href: CircuitTool.PowerSupplyCalculator.PSUTopology.html
  spec.vb:
  - uid: CircuitTool.PowerSupplyCalculator
    name: PowerSupplyCalculator
    href: CircuitTool.PowerSupplyCalculator.html
  - name: .
  - uid: CircuitTool.PowerSupplyCalculator.PSUTopology
    name: PSUTopology
    href: CircuitTool.PowerSupplyCalculator.PSUTopology.html
- uid: CircuitTool.PowerSupplyCalculator.CalculateCurrentSenseResistor*
  commentId: Overload:CircuitTool.PowerSupplyCalculator.CalculateCurrentSenseResistor
  href: CircuitTool.PowerSupplyCalculator.html#CircuitTool_PowerSupplyCalculator_CalculateCurrentSenseResistor_System_Double_System_Double_System_Double_
  name: CalculateCurrentSenseResistor
  nameWithType: PowerSupplyCalculator.CalculateCurrentSenseResistor
  fullName: CircuitTool.PowerSupplyCalculator.CalculateCurrentSenseResistor
- uid: CircuitTool.PowerSupplyCalculator.CalculateEMIFilter*
  commentId: Overload:CircuitTool.PowerSupplyCalculator.CalculateEMIFilter
  href: CircuitTool.PowerSupplyCalculator.html#CircuitTool_PowerSupplyCalculator_CalculateEMIFilter_System_Double_System_Double_System_Double_
  name: CalculateEMIFilter
  nameWithType: PowerSupplyCalculator.CalculateEMIFilter
  fullName: CircuitTool.PowerSupplyCalculator.CalculateEMIFilter
- uid: System.ValueTuple{System.Double,System.Double,System.Double,System.Double}
  commentId: T:System.ValueTuple{System.Double,System.Double,System.Double,System.Double}
  parent: System
  definition: System.ValueTuple`4
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: (double setupTime, double holdTime, double riseTime, double fallTime)
  nameWithType: (double setupTime, double holdTime, double riseTime, double fallTime)
  fullName: (double setupTime, double holdTime, double riseTime, double fallTime)
  nameWithType.vb: (setupTime As Double, holdTime As Double, riseTime As Double, fallTime As Double)
  fullName.vb: (setupTime As Double, holdTime As Double, riseTime As Double, fallTime As Double)
  name.vb: (setupTime As Double, holdTime As Double, riseTime As Double, fallTime As Double)
  spec.csharp:
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double,System.Double,System.Double}.setupTime
    name: setupTime
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double,system.double,system.double-.setuptime
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double,System.Double,System.Double}.holdTime
    name: holdTime
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double,system.double,system.double-.holdtime
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double,System.Double,System.Double}.riseTime
    name: riseTime
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double,system.double,system.double-.risetime
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double,System.Double,System.Double}.fallTime
    name: fallTime
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double,system.double,system.double-.falltime
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Double,System.Double,System.Double,System.Double}.setupTime
    name: setupTime
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double,system.double,system.double-.setuptime
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double,System.Double,System.Double}.holdTime
    name: holdTime
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double,system.double,system.double-.holdtime
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double,System.Double,System.Double}.riseTime
    name: riseTime
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double,system.double,system.double-.risetime
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double,System.Double,System.Double}.fallTime
    name: fallTime
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double,system.double,system.double-.falltime
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: System.ValueTuple`4
  commentId: T:System.ValueTuple`4
  name: (T1, T2, T3, T4)
  nameWithType: (T1, T2, T3, T4)
  fullName: (T1, T2, T3, T4)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: )
- uid: CircuitTool.PowerSupplyCalculator.CalculateHoldupTime*
  commentId: Overload:CircuitTool.PowerSupplyCalculator.CalculateHoldupTime
  href: CircuitTool.PowerSupplyCalculator.html#CircuitTool_PowerSupplyCalculator_CalculateHoldupTime_System_Double_System_Double_System_Double_System_Double_System_Double_
  name: CalculateHoldupTime
  nameWithType: PowerSupplyCalculator.CalculateHoldupTime
  fullName: CircuitTool.PowerSupplyCalculator.CalculateHoldupTime
- uid: CircuitTool.PowerSupplyCalculator.GenerateDesignChecklist*
  commentId: Overload:CircuitTool.PowerSupplyCalculator.GenerateDesignChecklist
  href: CircuitTool.PowerSupplyCalculator.html#CircuitTool_PowerSupplyCalculator_GenerateDesignChecklist_CircuitTool_PowerSupplyCalculator_PSUTopology_System_Double_System_Boolean_
  name: GenerateDesignChecklist
  nameWithType: PowerSupplyCalculator.GenerateDesignChecklist
  fullName: CircuitTool.PowerSupplyCalculator.GenerateDesignChecklist
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
