### YamlMime:ManagedReference
items:
- uid: CircuitTool.TransmissionLineCalculator
  commentId: T:CircuitTool.TransmissionLineCalculator
  id: TransmissionLineCalculator
  parent: CircuitTool
  children:
  - CircuitTool.TransmissionLineCalculator.CharacteristicImpedance(System.Double,System.Double)
  - CircuitTool.TransmissionLineCalculator.CoaxialImpedance(System.Double,System.Double,System.Double)
  - CircuitTool.TransmissionLineCalculator.ElectricalLength(System.Double,System.Double,System.Double)
  - CircuitTool.TransmissionLineCalculator.InputImpedance(System.Double,System.Double,System.Double)
  - CircuitTool.TransmissionLineCalculator.MicrostripImpedance(System.Double,System.Double,System.Double)
  - CircuitTool.TransmissionLineCalculator.PropagationDelay(System.Double,System.Double,System.Double)
  - CircuitTool.TransmissionLineCalculator.PropagationVelocity(System.Double,System.Double)
  - CircuitTool.TransmissionLineCalculator.ReflectionCoefficient(System.Double,System.Double)
  - CircuitTool.TransmissionLineCalculator.StriplineImpedance(System.Double,System.Double,System.Double)
  - CircuitTool.TransmissionLineCalculator.TransmissionLoss(System.Double,System.Double,System.Boolean)
  langs:
  - csharp
  - vb
  name: TransmissionLineCalculator
  nameWithType: TransmissionLineCalculator
  fullName: CircuitTool.TransmissionLineCalculator
  type: Class
  source:
    remote:
      path: src/Calculators/TransmissionLineCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: TransmissionLineCalculator
    path: ../src/Calculators/TransmissionLineCalculator.cs
    startLine: 15
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Provides calculations for transmission line analysis and design.
  remarks: >-
    <p>Example usage:</p>


    <pre><code class="lang-csharp">double z0 = TransmissionLineCalculator.CharacteristicImpedance(100e-9, 100e-12); // 31.6 ohms

    double vel = TransmissionLineCalculator.PropagationVelocity(2.2); // Velocity factor

    double delay = TransmissionLineCalculator.PropagationDelay(0.1, 2.2); // Time delay</code></pre>
  example: []
  syntax:
    content: public static class TransmissionLineCalculator
    content.vb: Public Module TransmissionLineCalculator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: CircuitTool.TransmissionLineCalculator.CharacteristicImpedance(System.Double,System.Double)
  commentId: M:CircuitTool.TransmissionLineCalculator.CharacteristicImpedance(System.Double,System.Double)
  id: CharacteristicImpedance(System.Double,System.Double)
  parent: CircuitTool.TransmissionLineCalculator
  langs:
  - csharp
  - vb
  name: CharacteristicImpedance(double, double)
  nameWithType: TransmissionLineCalculator.CharacteristicImpedance(double, double)
  fullName: CircuitTool.TransmissionLineCalculator.CharacteristicImpedance(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/TransmissionLineCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: CharacteristicImpedance
    path: ../src/Calculators/TransmissionLineCalculator.cs
    startLine: 28
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates characteristic impedance of a transmission line.
  example:
  - double z0 = TransmissionLineCalculator.CharacteristicImpedance(100e-9, 100e-12); // 31.6 ohms
  syntax:
    content: public static double CharacteristicImpedance(double inductancePerLength, double capacitancePerLength)
    parameters:
    - id: inductancePerLength
      type: System.Double
      description: Inductance per unit length (H/m).
    - id: capacitancePerLength
      type: System.Double
      description: Capacitance per unit length (F/m).
    return:
      type: System.Double
      description: Characteristic impedance in ohms (Ω).
    content.vb: Public Shared Function CharacteristicImpedance(inductancePerLength As Double, capacitancePerLength As Double) As Double
  overload: CircuitTool.TransmissionLineCalculator.CharacteristicImpedance*
  nameWithType.vb: TransmissionLineCalculator.CharacteristicImpedance(Double, Double)
  fullName.vb: CircuitTool.TransmissionLineCalculator.CharacteristicImpedance(Double, Double)
  name.vb: CharacteristicImpedance(Double, Double)
- uid: CircuitTool.TransmissionLineCalculator.PropagationVelocity(System.Double,System.Double)
  commentId: M:CircuitTool.TransmissionLineCalculator.PropagationVelocity(System.Double,System.Double)
  id: PropagationVelocity(System.Double,System.Double)
  parent: CircuitTool.TransmissionLineCalculator
  langs:
  - csharp
  - vb
  name: PropagationVelocity(double, double)
  nameWithType: TransmissionLineCalculator.PropagationVelocity(double, double)
  fullName: CircuitTool.TransmissionLineCalculator.PropagationVelocity(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/TransmissionLineCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: PropagationVelocity
    path: ../src/Calculators/TransmissionLineCalculator.cs
    startLine: 44
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates propagation velocity in a transmission line.
  example:
  - double vel = TransmissionLineCalculator.PropagationVelocity(2.2); // Velocity factor
  syntax:
    content: public static double PropagationVelocity(double relativePermittivity, double relativePermeability = 1)
    parameters:
    - id: relativePermittivity
      type: System.Double
      description: Relative permittivity (εr) of the dielectric.
    - id: relativePermeability
      type: System.Double
      description: 'Relative permeability (μr) of the material (default: 1).'
    return:
      type: System.Double
      description: Propagation velocity in m/s.
    content.vb: Public Shared Function PropagationVelocity(relativePermittivity As Double, relativePermeability As Double = 1) As Double
  overload: CircuitTool.TransmissionLineCalculator.PropagationVelocity*
  nameWithType.vb: TransmissionLineCalculator.PropagationVelocity(Double, Double)
  fullName.vb: CircuitTool.TransmissionLineCalculator.PropagationVelocity(Double, Double)
  name.vb: PropagationVelocity(Double, Double)
- uid: CircuitTool.TransmissionLineCalculator.PropagationDelay(System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.TransmissionLineCalculator.PropagationDelay(System.Double,System.Double,System.Double)
  id: PropagationDelay(System.Double,System.Double,System.Double)
  parent: CircuitTool.TransmissionLineCalculator
  langs:
  - csharp
  - vb
  name: PropagationDelay(double, double, double)
  nameWithType: TransmissionLineCalculator.PropagationDelay(double, double, double)
  fullName: CircuitTool.TransmissionLineCalculator.PropagationDelay(double, double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/TransmissionLineCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: PropagationDelay
    path: ../src/Calculators/TransmissionLineCalculator.cs
    startLine: 61
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates propagation delay for a transmission line.
  example:
  - double delay = TransmissionLineCalculator.PropagationDelay(0.1, 2.2); // Time delay
  syntax:
    content: public static double PropagationDelay(double length, double relativePermittivity, double relativePermeability = 1)
    parameters:
    - id: length
      type: System.Double
      description: Length of the transmission line in meters.
    - id: relativePermittivity
      type: System.Double
      description: Relative permittivity (εr) of the dielectric.
    - id: relativePermeability
      type: System.Double
      description: 'Relative permeability (μr) of the material (default: 1).'
    return:
      type: System.Double
      description: Propagation delay in seconds.
    content.vb: Public Shared Function PropagationDelay(length As Double, relativePermittivity As Double, relativePermeability As Double = 1) As Double
  overload: CircuitTool.TransmissionLineCalculator.PropagationDelay*
  nameWithType.vb: TransmissionLineCalculator.PropagationDelay(Double, Double, Double)
  fullName.vb: CircuitTool.TransmissionLineCalculator.PropagationDelay(Double, Double, Double)
  name.vb: PropagationDelay(Double, Double, Double)
- uid: CircuitTool.TransmissionLineCalculator.CoaxialImpedance(System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.TransmissionLineCalculator.CoaxialImpedance(System.Double,System.Double,System.Double)
  id: CoaxialImpedance(System.Double,System.Double,System.Double)
  parent: CircuitTool.TransmissionLineCalculator
  langs:
  - csharp
  - vb
  name: CoaxialImpedance(double, double, double)
  nameWithType: TransmissionLineCalculator.CoaxialImpedance(double, double, double)
  fullName: CircuitTool.TransmissionLineCalculator.CoaxialImpedance(double, double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/TransmissionLineCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: CoaxialImpedance
    path: ../src/Calculators/TransmissionLineCalculator.cs
    startLine: 76
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates coaxial cable characteristic impedance.
  example: []
  syntax:
    content: public static double CoaxialImpedance(double outerDiameter, double innerDiameter, double relativePermittivity = 1)
    parameters:
    - id: outerDiameter
      type: System.Double
      description: Outer conductor inner diameter in meters.
    - id: innerDiameter
      type: System.Double
      description: Inner conductor diameter in meters.
    - id: relativePermittivity
      type: System.Double
      description: 'Relative permittivity of dielectric (default: 1).'
    return:
      type: System.Double
      description: Characteristic impedance in ohms (Ω).
    content.vb: Public Shared Function CoaxialImpedance(outerDiameter As Double, innerDiameter As Double, relativePermittivity As Double = 1) As Double
  overload: CircuitTool.TransmissionLineCalculator.CoaxialImpedance*
  nameWithType.vb: TransmissionLineCalculator.CoaxialImpedance(Double, Double, Double)
  fullName.vb: CircuitTool.TransmissionLineCalculator.CoaxialImpedance(Double, Double, Double)
  name.vb: CoaxialImpedance(Double, Double, Double)
- uid: CircuitTool.TransmissionLineCalculator.MicrostripImpedance(System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.TransmissionLineCalculator.MicrostripImpedance(System.Double,System.Double,System.Double)
  id: MicrostripImpedance(System.Double,System.Double,System.Double)
  parent: CircuitTool.TransmissionLineCalculator
  langs:
  - csharp
  - vb
  name: MicrostripImpedance(double, double, double)
  nameWithType: TransmissionLineCalculator.MicrostripImpedance(double, double, double)
  fullName: CircuitTool.TransmissionLineCalculator.MicrostripImpedance(double, double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/TransmissionLineCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: MicrostripImpedance
    path: ../src/Calculators/TransmissionLineCalculator.cs
    startLine: 93
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates microstrip characteristic impedance (simple formula).
  example: []
  syntax:
    content: public static double MicrostripImpedance(double width, double height, double relativePermittivity)
    parameters:
    - id: width
      type: System.Double
      description: Trace width in meters.
    - id: height
      type: System.Double
      description: Dielectric height in meters.
    - id: relativePermittivity
      type: System.Double
      description: Relative permittivity of substrate.
    return:
      type: System.Double
      description: Characteristic impedance in ohms (Ω).
    content.vb: Public Shared Function MicrostripImpedance(width As Double, height As Double, relativePermittivity As Double) As Double
  overload: CircuitTool.TransmissionLineCalculator.MicrostripImpedance*
  nameWithType.vb: TransmissionLineCalculator.MicrostripImpedance(Double, Double, Double)
  fullName.vb: CircuitTool.TransmissionLineCalculator.MicrostripImpedance(Double, Double, Double)
  name.vb: MicrostripImpedance(Double, Double, Double)
- uid: CircuitTool.TransmissionLineCalculator.StriplineImpedance(System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.TransmissionLineCalculator.StriplineImpedance(System.Double,System.Double,System.Double)
  id: StriplineImpedance(System.Double,System.Double,System.Double)
  parent: CircuitTool.TransmissionLineCalculator
  langs:
  - csharp
  - vb
  name: StriplineImpedance(double, double, double)
  nameWithType: TransmissionLineCalculator.StriplineImpedance(double, double, double)
  fullName: CircuitTool.TransmissionLineCalculator.StriplineImpedance(double, double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/TransmissionLineCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: StriplineImpedance
    path: ../src/Calculators/TransmissionLineCalculator.cs
    startLine: 124
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates stripline characteristic impedance.
  example: []
  syntax:
    content: public static double StriplineImpedance(double width, double height, double relativePermittivity)
    parameters:
    - id: width
      type: System.Double
      description: Trace width in meters.
    - id: height
      type: System.Double
      description: Dielectric height in meters.
    - id: relativePermittivity
      type: System.Double
      description: Relative permittivity of substrate.
    return:
      type: System.Double
      description: Characteristic impedance in ohms (Ω).
    content.vb: Public Shared Function StriplineImpedance(width As Double, height As Double, relativePermittivity As Double) As Double
  overload: CircuitTool.TransmissionLineCalculator.StriplineImpedance*
  nameWithType.vb: TransmissionLineCalculator.StriplineImpedance(Double, Double, Double)
  fullName.vb: CircuitTool.TransmissionLineCalculator.StriplineImpedance(Double, Double, Double)
  name.vb: StriplineImpedance(Double, Double, Double)
- uid: CircuitTool.TransmissionLineCalculator.ReflectionCoefficient(System.Double,System.Double)
  commentId: M:CircuitTool.TransmissionLineCalculator.ReflectionCoefficient(System.Double,System.Double)
  id: ReflectionCoefficient(System.Double,System.Double)
  parent: CircuitTool.TransmissionLineCalculator
  langs:
  - csharp
  - vb
  name: ReflectionCoefficient(double, double)
  nameWithType: TransmissionLineCalculator.ReflectionCoefficient(double, double)
  fullName: CircuitTool.TransmissionLineCalculator.ReflectionCoefficient(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/TransmissionLineCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ReflectionCoefficient
    path: ../src/Calculators/TransmissionLineCalculator.cs
    startLine: 151
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates reflection coefficient at a load.
  example: []
  syntax:
    content: public static double ReflectionCoefficient(double loadImpedance, double characteristicImpedance)
    parameters:
    - id: loadImpedance
      type: System.Double
      description: Load impedance in ohms (Ω).
    - id: characteristicImpedance
      type: System.Double
      description: Characteristic impedance of line in ohms (Ω).
    return:
      type: System.Double
      description: Complex reflection coefficient magnitude.
    content.vb: Public Shared Function ReflectionCoefficient(loadImpedance As Double, characteristicImpedance As Double) As Double
  overload: CircuitTool.TransmissionLineCalculator.ReflectionCoefficient*
  nameWithType.vb: TransmissionLineCalculator.ReflectionCoefficient(Double, Double)
  fullName.vb: CircuitTool.TransmissionLineCalculator.ReflectionCoefficient(Double, Double)
  name.vb: ReflectionCoefficient(Double, Double)
- uid: CircuitTool.TransmissionLineCalculator.InputImpedance(System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.TransmissionLineCalculator.InputImpedance(System.Double,System.Double,System.Double)
  id: InputImpedance(System.Double,System.Double,System.Double)
  parent: CircuitTool.TransmissionLineCalculator
  langs:
  - csharp
  - vb
  name: InputImpedance(double, double, double)
  nameWithType: TransmissionLineCalculator.InputImpedance(double, double, double)
  fullName: CircuitTool.TransmissionLineCalculator.InputImpedance(double, double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/TransmissionLineCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: InputImpedance
    path: ../src/Calculators/TransmissionLineCalculator.cs
    startLine: 166
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates input impedance of a transmission line.
  example: []
  syntax:
    content: public static double InputImpedance(double loadImpedance, double characteristicImpedance, double electricalLength)
    parameters:
    - id: loadImpedance
      type: System.Double
      description: Load impedance in ohms (Ω).
    - id: characteristicImpedance
      type: System.Double
      description: Characteristic impedance in ohms (Ω).
    - id: electricalLength
      type: System.Double
      description: Electrical length in radians.
    return:
      type: System.Double
      description: Input impedance in ohms (Ω).
    content.vb: Public Shared Function InputImpedance(loadImpedance As Double, characteristicImpedance As Double, electricalLength As Double) As Double
  overload: CircuitTool.TransmissionLineCalculator.InputImpedance*
  nameWithType.vb: TransmissionLineCalculator.InputImpedance(Double, Double, Double)
  fullName.vb: CircuitTool.TransmissionLineCalculator.InputImpedance(Double, Double, Double)
  name.vb: InputImpedance(Double, Double, Double)
- uid: CircuitTool.TransmissionLineCalculator.ElectricalLength(System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.TransmissionLineCalculator.ElectricalLength(System.Double,System.Double,System.Double)
  id: ElectricalLength(System.Double,System.Double,System.Double)
  parent: CircuitTool.TransmissionLineCalculator
  langs:
  - csharp
  - vb
  name: ElectricalLength(double, double, double)
  nameWithType: TransmissionLineCalculator.ElectricalLength(double, double, double)
  fullName: CircuitTool.TransmissionLineCalculator.ElectricalLength(double, double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/TransmissionLineCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ElectricalLength
    path: ../src/Calculators/TransmissionLineCalculator.cs
    startLine: 185
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates electrical length from physical length.
  example: []
  syntax:
    content: public static double ElectricalLength(double physicalLength, double frequency, double relativePermittivity)
    parameters:
    - id: physicalLength
      type: System.Double
      description: Physical length in meters.
    - id: frequency
      type: System.Double
      description: Frequency in Hz.
    - id: relativePermittivity
      type: System.Double
      description: Relative permittivity of dielectric.
    return:
      type: System.Double
      description: Electrical length in radians.
    content.vb: Public Shared Function ElectricalLength(physicalLength As Double, frequency As Double, relativePermittivity As Double) As Double
  overload: CircuitTool.TransmissionLineCalculator.ElectricalLength*
  nameWithType.vb: TransmissionLineCalculator.ElectricalLength(Double, Double, Double)
  fullName.vb: CircuitTool.TransmissionLineCalculator.ElectricalLength(Double, Double, Double)
  name.vb: ElectricalLength(Double, Double, Double)
- uid: CircuitTool.TransmissionLineCalculator.TransmissionLoss(System.Double,System.Double,System.Boolean)
  commentId: M:CircuitTool.TransmissionLineCalculator.TransmissionLoss(System.Double,System.Double,System.Boolean)
  id: TransmissionLoss(System.Double,System.Double,System.Boolean)
  parent: CircuitTool.TransmissionLineCalculator
  langs:
  - csharp
  - vb
  name: TransmissionLoss(double, double, bool)
  nameWithType: TransmissionLineCalculator.TransmissionLoss(double, double, bool)
  fullName: CircuitTool.TransmissionLineCalculator.TransmissionLoss(double, double, bool)
  type: Method
  source:
    remote:
      path: src/Calculators/TransmissionLineCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: TransmissionLoss
    path: ../src/Calculators/TransmissionLineCalculator.cs
    startLine: 201
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates losses in a transmission line.
  example: []
  syntax:
    content: public static double TransmissionLoss(double length, double attenuationConstant, bool inDecibels = true)
    parameters:
    - id: length
      type: System.Double
      description: Length of transmission line in meters.
    - id: attenuationConstant
      type: System.Double
      description: Attenuation constant in Np/m or dB/m.
    - id: inDecibels
      type: System.Boolean
      description: True if attenuation constant is in dB/m, false if in Np/m.
    return:
      type: System.Double
      description: Total loss in dB.
    content.vb: Public Shared Function TransmissionLoss(length As Double, attenuationConstant As Double, inDecibels As Boolean = True) As Double
  overload: CircuitTool.TransmissionLineCalculator.TransmissionLoss*
  nameWithType.vb: TransmissionLineCalculator.TransmissionLoss(Double, Double, Boolean)
  fullName.vb: CircuitTool.TransmissionLineCalculator.TransmissionLoss(Double, Double, Boolean)
  name.vb: TransmissionLoss(Double, Double, Boolean)
references:
- uid: CircuitTool
  commentId: N:CircuitTool
  href: CircuitTool.html
  name: CircuitTool
  nameWithType: CircuitTool
  fullName: CircuitTool
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CircuitTool.TransmissionLineCalculator.CharacteristicImpedance*
  commentId: Overload:CircuitTool.TransmissionLineCalculator.CharacteristicImpedance
  href: CircuitTool.TransmissionLineCalculator.html#CircuitTool_TransmissionLineCalculator_CharacteristicImpedance_System_Double_System_Double_
  name: CharacteristicImpedance
  nameWithType: TransmissionLineCalculator.CharacteristicImpedance
  fullName: CircuitTool.TransmissionLineCalculator.CharacteristicImpedance
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: CircuitTool.TransmissionLineCalculator.PropagationVelocity*
  commentId: Overload:CircuitTool.TransmissionLineCalculator.PropagationVelocity
  href: CircuitTool.TransmissionLineCalculator.html#CircuitTool_TransmissionLineCalculator_PropagationVelocity_System_Double_System_Double_
  name: PropagationVelocity
  nameWithType: TransmissionLineCalculator.PropagationVelocity
  fullName: CircuitTool.TransmissionLineCalculator.PropagationVelocity
- uid: CircuitTool.TransmissionLineCalculator.PropagationDelay*
  commentId: Overload:CircuitTool.TransmissionLineCalculator.PropagationDelay
  href: CircuitTool.TransmissionLineCalculator.html#CircuitTool_TransmissionLineCalculator_PropagationDelay_System_Double_System_Double_System_Double_
  name: PropagationDelay
  nameWithType: TransmissionLineCalculator.PropagationDelay
  fullName: CircuitTool.TransmissionLineCalculator.PropagationDelay
- uid: CircuitTool.TransmissionLineCalculator.CoaxialImpedance*
  commentId: Overload:CircuitTool.TransmissionLineCalculator.CoaxialImpedance
  href: CircuitTool.TransmissionLineCalculator.html#CircuitTool_TransmissionLineCalculator_CoaxialImpedance_System_Double_System_Double_System_Double_
  name: CoaxialImpedance
  nameWithType: TransmissionLineCalculator.CoaxialImpedance
  fullName: CircuitTool.TransmissionLineCalculator.CoaxialImpedance
- uid: CircuitTool.TransmissionLineCalculator.MicrostripImpedance*
  commentId: Overload:CircuitTool.TransmissionLineCalculator.MicrostripImpedance
  href: CircuitTool.TransmissionLineCalculator.html#CircuitTool_TransmissionLineCalculator_MicrostripImpedance_System_Double_System_Double_System_Double_
  name: MicrostripImpedance
  nameWithType: TransmissionLineCalculator.MicrostripImpedance
  fullName: CircuitTool.TransmissionLineCalculator.MicrostripImpedance
- uid: CircuitTool.TransmissionLineCalculator.StriplineImpedance*
  commentId: Overload:CircuitTool.TransmissionLineCalculator.StriplineImpedance
  href: CircuitTool.TransmissionLineCalculator.html#CircuitTool_TransmissionLineCalculator_StriplineImpedance_System_Double_System_Double_System_Double_
  name: StriplineImpedance
  nameWithType: TransmissionLineCalculator.StriplineImpedance
  fullName: CircuitTool.TransmissionLineCalculator.StriplineImpedance
- uid: CircuitTool.TransmissionLineCalculator.ReflectionCoefficient*
  commentId: Overload:CircuitTool.TransmissionLineCalculator.ReflectionCoefficient
  href: CircuitTool.TransmissionLineCalculator.html#CircuitTool_TransmissionLineCalculator_ReflectionCoefficient_System_Double_System_Double_
  name: ReflectionCoefficient
  nameWithType: TransmissionLineCalculator.ReflectionCoefficient
  fullName: CircuitTool.TransmissionLineCalculator.ReflectionCoefficient
- uid: CircuitTool.TransmissionLineCalculator.InputImpedance*
  commentId: Overload:CircuitTool.TransmissionLineCalculator.InputImpedance
  href: CircuitTool.TransmissionLineCalculator.html#CircuitTool_TransmissionLineCalculator_InputImpedance_System_Double_System_Double_System_Double_
  name: InputImpedance
  nameWithType: TransmissionLineCalculator.InputImpedance
  fullName: CircuitTool.TransmissionLineCalculator.InputImpedance
- uid: CircuitTool.TransmissionLineCalculator.ElectricalLength*
  commentId: Overload:CircuitTool.TransmissionLineCalculator.ElectricalLength
  href: CircuitTool.TransmissionLineCalculator.html#CircuitTool_TransmissionLineCalculator_ElectricalLength_System_Double_System_Double_System_Double_
  name: ElectricalLength
  nameWithType: TransmissionLineCalculator.ElectricalLength
  fullName: CircuitTool.TransmissionLineCalculator.ElectricalLength
- uid: CircuitTool.TransmissionLineCalculator.TransmissionLoss*
  commentId: Overload:CircuitTool.TransmissionLineCalculator.TransmissionLoss
  href: CircuitTool.TransmissionLineCalculator.html#CircuitTool_TransmissionLineCalculator_TransmissionLoss_System_Double_System_Double_System_Boolean_
  name: TransmissionLoss
  nameWithType: TransmissionLineCalculator.TransmissionLoss
  fullName: CircuitTool.TransmissionLineCalculator.TransmissionLoss
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
