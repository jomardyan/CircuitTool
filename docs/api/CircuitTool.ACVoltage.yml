### YamlMime:ManagedReference
items:
- uid: CircuitTool.ACVoltage
  commentId: T:CircuitTool.ACVoltage
  id: ACVoltage
  parent: CircuitTool
  children:
  - CircuitTool.ACVoltage.#ctor(System.Double,System.Double)
  - CircuitTool.ACVoltage.#ctor(System.Numerics.Complex)
  - CircuitTool.ACVoltage.Complex
  - CircuitTool.ACVoltage.Equals(CircuitTool.ACVoltage)
  - CircuitTool.ACVoltage.Equals(System.Object)
  - CircuitTool.ACVoltage.GetHashCode
  - CircuitTool.ACVoltage.Imaginary
  - CircuitTool.ACVoltage.Magnitude
  - CircuitTool.ACVoltage.Peak
  - CircuitTool.ACVoltage.PeakToPeak
  - CircuitTool.ACVoltage.Phase
  - CircuitTool.ACVoltage.PhaseDegrees
  - CircuitTool.ACVoltage.Real
  - CircuitTool.ACVoltage.ToString
  - CircuitTool.ACVoltage.ToString(System.String)
  - CircuitTool.ACVoltage.op_Addition(CircuitTool.ACVoltage,CircuitTool.ACVoltage)
  - CircuitTool.ACVoltage.op_Division(CircuitTool.ACVoltage,System.Numerics.Complex)
  - CircuitTool.ACVoltage.op_Equality(CircuitTool.ACVoltage,CircuitTool.ACVoltage)
  - CircuitTool.ACVoltage.op_Inequality(CircuitTool.ACVoltage,CircuitTool.ACVoltage)
  - CircuitTool.ACVoltage.op_Multiply(CircuitTool.ACVoltage,System.Numerics.Complex)
  - CircuitTool.ACVoltage.op_Multiply(System.Numerics.Complex,CircuitTool.ACVoltage)
  - CircuitTool.ACVoltage.op_Subtraction(CircuitTool.ACVoltage,CircuitTool.ACVoltage)
  langs:
  - csharp
  - vb
  name: ACVoltage
  nameWithType: ACVoltage
  fullName: CircuitTool.ACVoltage
  type: Struct
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ACVoltage
    path: ../src/ACTypes.cs
    startLine: 10
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Represents an AC voltage with magnitude and phase
  example: []
  syntax:
    content: 'public readonly struct ACVoltage : IEquatable<ACVoltage>'
    content.vb: Public Structure ACVoltage Implements IEquatable(Of ACVoltage)
  implements:
  - System.IEquatable{CircuitTool.ACVoltage}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: CircuitTool.ACVoltage.#ctor(System.Double,System.Double)
  commentId: M:CircuitTool.ACVoltage.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: CircuitTool.ACVoltage
  langs:
  - csharp
  - vb
  name: ACVoltage(double, double)
  nameWithType: ACVoltage.ACVoltage(double, double)
  fullName: CircuitTool.ACVoltage.ACVoltage(double, double)
  type: Constructor
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: .ctor
    path: ../src/ACTypes.cs
    startLine: 19
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Creates a new AC voltage from magnitude and phase
  example: []
  syntax:
    content: public ACVoltage(double magnitude, double phase)
    parameters:
    - id: magnitude
      type: System.Double
      description: RMS magnitude in volts
    - id: phase
      type: System.Double
      description: Phase angle in radians
    content.vb: Public Sub New(magnitude As Double, phase As Double)
  overload: CircuitTool.ACVoltage.#ctor*
  nameWithType.vb: ACVoltage.New(Double, Double)
  fullName.vb: CircuitTool.ACVoltage.New(Double, Double)
  name.vb: New(Double, Double)
- uid: CircuitTool.ACVoltage.#ctor(System.Numerics.Complex)
  commentId: M:CircuitTool.ACVoltage.#ctor(System.Numerics.Complex)
  id: '#ctor(System.Numerics.Complex)'
  parent: CircuitTool.ACVoltage
  langs:
  - csharp
  - vb
  name: ACVoltage(Complex)
  nameWithType: ACVoltage.ACVoltage(Complex)
  fullName: CircuitTool.ACVoltage.ACVoltage(System.Numerics.Complex)
  type: Constructor
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: .ctor
    path: ../src/ACTypes.cs
    startLine: 28
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Creates a new AC voltage from a complex number
  example: []
  syntax:
    content: public ACVoltage(Complex complex)
    parameters:
    - id: complex
      type: System.Numerics.Complex
      description: Complex representation
    content.vb: Public Sub New(complex As Complex)
  overload: CircuitTool.ACVoltage.#ctor*
  nameWithType.vb: ACVoltage.New(Complex)
  fullName.vb: CircuitTool.ACVoltage.New(System.Numerics.Complex)
  name.vb: New(Complex)
- uid: CircuitTool.ACVoltage.Magnitude
  commentId: P:CircuitTool.ACVoltage.Magnitude
  id: Magnitude
  parent: CircuitTool.ACVoltage
  langs:
  - csharp
  - vb
  name: Magnitude
  nameWithType: ACVoltage.Magnitude
  fullName: CircuitTool.ACVoltage.Magnitude
  type: Property
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Magnitude
    path: ../src/ACTypes.cs
    startLine: 36
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Gets the RMS magnitude in volts
  example: []
  syntax:
    content: public double Magnitude { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Magnitude As Double
  overload: CircuitTool.ACVoltage.Magnitude*
- uid: CircuitTool.ACVoltage.Phase
  commentId: P:CircuitTool.ACVoltage.Phase
  id: Phase
  parent: CircuitTool.ACVoltage
  langs:
  - csharp
  - vb
  name: Phase
  nameWithType: ACVoltage.Phase
  fullName: CircuitTool.ACVoltage.Phase
  type: Property
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Phase
    path: ../src/ACTypes.cs
    startLine: 41
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Gets the phase angle in radians
  example: []
  syntax:
    content: public double Phase { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Phase As Double
  overload: CircuitTool.ACVoltage.Phase*
- uid: CircuitTool.ACVoltage.PhaseDegrees
  commentId: P:CircuitTool.ACVoltage.PhaseDegrees
  id: PhaseDegrees
  parent: CircuitTool.ACVoltage
  langs:
  - csharp
  - vb
  name: PhaseDegrees
  nameWithType: ACVoltage.PhaseDegrees
  fullName: CircuitTool.ACVoltage.PhaseDegrees
  type: Property
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: PhaseDegrees
    path: ../src/ACTypes.cs
    startLine: 46
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Gets the phase angle in degrees
  example: []
  syntax:
    content: public double PhaseDegrees { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property PhaseDegrees As Double
  overload: CircuitTool.ACVoltage.PhaseDegrees*
- uid: CircuitTool.ACVoltage.Real
  commentId: P:CircuitTool.ACVoltage.Real
  id: Real
  parent: CircuitTool.ACVoltage
  langs:
  - csharp
  - vb
  name: Real
  nameWithType: ACVoltage.Real
  fullName: CircuitTool.ACVoltage.Real
  type: Property
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Real
    path: ../src/ACTypes.cs
    startLine: 51
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Gets the real component
  example: []
  syntax:
    content: public double Real { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Real As Double
  overload: CircuitTool.ACVoltage.Real*
- uid: CircuitTool.ACVoltage.Imaginary
  commentId: P:CircuitTool.ACVoltage.Imaginary
  id: Imaginary
  parent: CircuitTool.ACVoltage
  langs:
  - csharp
  - vb
  name: Imaginary
  nameWithType: ACVoltage.Imaginary
  fullName: CircuitTool.ACVoltage.Imaginary
  type: Property
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Imaginary
    path: ../src/ACTypes.cs
    startLine: 56
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Gets the imaginary component
  example: []
  syntax:
    content: public double Imaginary { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Imaginary As Double
  overload: CircuitTool.ACVoltage.Imaginary*
- uid: CircuitTool.ACVoltage.Complex
  commentId: P:CircuitTool.ACVoltage.Complex
  id: Complex
  parent: CircuitTool.ACVoltage
  langs:
  - csharp
  - vb
  name: Complex
  nameWithType: ACVoltage.Complex
  fullName: CircuitTool.ACVoltage.Complex
  type: Property
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Complex
    path: ../src/ACTypes.cs
    startLine: 61
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Gets the complex number representation
  example: []
  syntax:
    content: public Complex Complex { get; }
    parameters: []
    return:
      type: System.Numerics.Complex
    content.vb: Public ReadOnly Property Complex As Complex
  overload: CircuitTool.ACVoltage.Complex*
- uid: CircuitTool.ACVoltage.Peak
  commentId: P:CircuitTool.ACVoltage.Peak
  id: Peak
  parent: CircuitTool.ACVoltage
  langs:
  - csharp
  - vb
  name: Peak
  nameWithType: ACVoltage.Peak
  fullName: CircuitTool.ACVoltage.Peak
  type: Property
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Peak
    path: ../src/ACTypes.cs
    startLine: 66
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Gets the peak voltage (magnitude * âˆš2)
  example: []
  syntax:
    content: public double Peak { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Peak As Double
  overload: CircuitTool.ACVoltage.Peak*
- uid: CircuitTool.ACVoltage.PeakToPeak
  commentId: P:CircuitTool.ACVoltage.PeakToPeak
  id: PeakToPeak
  parent: CircuitTool.ACVoltage
  langs:
  - csharp
  - vb
  name: PeakToPeak
  nameWithType: ACVoltage.PeakToPeak
  fullName: CircuitTool.ACVoltage.PeakToPeak
  type: Property
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: PeakToPeak
    path: ../src/ACTypes.cs
    startLine: 71
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Gets the peak-to-peak voltage (peak * 2)
  example: []
  syntax:
    content: public double PeakToPeak { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property PeakToPeak As Double
  overload: CircuitTool.ACVoltage.PeakToPeak*
- uid: CircuitTool.ACVoltage.op_Addition(CircuitTool.ACVoltage,CircuitTool.ACVoltage)
  commentId: M:CircuitTool.ACVoltage.op_Addition(CircuitTool.ACVoltage,CircuitTool.ACVoltage)
  id: op_Addition(CircuitTool.ACVoltage,CircuitTool.ACVoltage)
  parent: CircuitTool.ACVoltage
  langs:
  - csharp
  - vb
  name: operator +(ACVoltage, ACVoltage)
  nameWithType: ACVoltage.operator +(ACVoltage, ACVoltage)
  fullName: CircuitTool.ACVoltage.operator +(CircuitTool.ACVoltage, CircuitTool.ACVoltage)
  type: Operator
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Addition
    path: ../src/ACTypes.cs
    startLine: 73
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  syntax:
    content: public static ACVoltage operator +(ACVoltage left, ACVoltage right)
    parameters:
    - id: left
      type: CircuitTool.ACVoltage
    - id: right
      type: CircuitTool.ACVoltage
    return:
      type: CircuitTool.ACVoltage
    content.vb: Public Shared Operator +(left As ACVoltage, right As ACVoltage) As ACVoltage
  overload: CircuitTool.ACVoltage.op_Addition*
  nameWithType.vb: ACVoltage.+(ACVoltage, ACVoltage)
  fullName.vb: CircuitTool.ACVoltage.+(CircuitTool.ACVoltage, CircuitTool.ACVoltage)
  name.vb: +(ACVoltage, ACVoltage)
- uid: CircuitTool.ACVoltage.op_Subtraction(CircuitTool.ACVoltage,CircuitTool.ACVoltage)
  commentId: M:CircuitTool.ACVoltage.op_Subtraction(CircuitTool.ACVoltage,CircuitTool.ACVoltage)
  id: op_Subtraction(CircuitTool.ACVoltage,CircuitTool.ACVoltage)
  parent: CircuitTool.ACVoltage
  langs:
  - csharp
  - vb
  name: operator -(ACVoltage, ACVoltage)
  nameWithType: ACVoltage.operator -(ACVoltage, ACVoltage)
  fullName: CircuitTool.ACVoltage.operator -(CircuitTool.ACVoltage, CircuitTool.ACVoltage)
  type: Operator
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Subtraction
    path: ../src/ACTypes.cs
    startLine: 74
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  syntax:
    content: public static ACVoltage operator -(ACVoltage left, ACVoltage right)
    parameters:
    - id: left
      type: CircuitTool.ACVoltage
    - id: right
      type: CircuitTool.ACVoltage
    return:
      type: CircuitTool.ACVoltage
    content.vb: Public Shared Operator -(left As ACVoltage, right As ACVoltage) As ACVoltage
  overload: CircuitTool.ACVoltage.op_Subtraction*
  nameWithType.vb: ACVoltage.-(ACVoltage, ACVoltage)
  fullName.vb: CircuitTool.ACVoltage.-(CircuitTool.ACVoltage, CircuitTool.ACVoltage)
  name.vb: -(ACVoltage, ACVoltage)
- uid: CircuitTool.ACVoltage.op_Multiply(CircuitTool.ACVoltage,System.Numerics.Complex)
  commentId: M:CircuitTool.ACVoltage.op_Multiply(CircuitTool.ACVoltage,System.Numerics.Complex)
  id: op_Multiply(CircuitTool.ACVoltage,System.Numerics.Complex)
  parent: CircuitTool.ACVoltage
  langs:
  - csharp
  - vb
  name: operator *(ACVoltage, Complex)
  nameWithType: ACVoltage.operator *(ACVoltage, Complex)
  fullName: CircuitTool.ACVoltage.operator *(CircuitTool.ACVoltage, System.Numerics.Complex)
  type: Operator
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Multiply
    path: ../src/ACTypes.cs
    startLine: 75
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  syntax:
    content: public static ACVoltage operator *(ACVoltage voltage, Complex scalar)
    parameters:
    - id: voltage
      type: CircuitTool.ACVoltage
    - id: scalar
      type: System.Numerics.Complex
    return:
      type: CircuitTool.ACVoltage
    content.vb: Public Shared Operator *(voltage As ACVoltage, scalar As Complex) As ACVoltage
  overload: CircuitTool.ACVoltage.op_Multiply*
  nameWithType.vb: ACVoltage.*(ACVoltage, Complex)
  fullName.vb: CircuitTool.ACVoltage.*(CircuitTool.ACVoltage, System.Numerics.Complex)
  name.vb: '*(ACVoltage, Complex)'
- uid: CircuitTool.ACVoltage.op_Multiply(System.Numerics.Complex,CircuitTool.ACVoltage)
  commentId: M:CircuitTool.ACVoltage.op_Multiply(System.Numerics.Complex,CircuitTool.ACVoltage)
  id: op_Multiply(System.Numerics.Complex,CircuitTool.ACVoltage)
  parent: CircuitTool.ACVoltage
  langs:
  - csharp
  - vb
  name: operator *(Complex, ACVoltage)
  nameWithType: ACVoltage.operator *(Complex, ACVoltage)
  fullName: CircuitTool.ACVoltage.operator *(System.Numerics.Complex, CircuitTool.ACVoltage)
  type: Operator
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Multiply
    path: ../src/ACTypes.cs
    startLine: 76
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  syntax:
    content: public static ACVoltage operator *(Complex scalar, ACVoltage voltage)
    parameters:
    - id: scalar
      type: System.Numerics.Complex
    - id: voltage
      type: CircuitTool.ACVoltage
    return:
      type: CircuitTool.ACVoltage
    content.vb: Public Shared Operator *(scalar As Complex, voltage As ACVoltage) As ACVoltage
  overload: CircuitTool.ACVoltage.op_Multiply*
  nameWithType.vb: ACVoltage.*(Complex, ACVoltage)
  fullName.vb: CircuitTool.ACVoltage.*(System.Numerics.Complex, CircuitTool.ACVoltage)
  name.vb: '*(Complex, ACVoltage)'
- uid: CircuitTool.ACVoltage.op_Division(CircuitTool.ACVoltage,System.Numerics.Complex)
  commentId: M:CircuitTool.ACVoltage.op_Division(CircuitTool.ACVoltage,System.Numerics.Complex)
  id: op_Division(CircuitTool.ACVoltage,System.Numerics.Complex)
  parent: CircuitTool.ACVoltage
  langs:
  - csharp
  - vb
  name: operator /(ACVoltage, Complex)
  nameWithType: ACVoltage.operator /(ACVoltage, Complex)
  fullName: CircuitTool.ACVoltage.operator /(CircuitTool.ACVoltage, System.Numerics.Complex)
  type: Operator
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Division
    path: ../src/ACTypes.cs
    startLine: 77
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  syntax:
    content: public static ACVoltage operator /(ACVoltage voltage, Complex scalar)
    parameters:
    - id: voltage
      type: CircuitTool.ACVoltage
    - id: scalar
      type: System.Numerics.Complex
    return:
      type: CircuitTool.ACVoltage
    content.vb: Public Shared Operator /(voltage As ACVoltage, scalar As Complex) As ACVoltage
  overload: CircuitTool.ACVoltage.op_Division*
  nameWithType.vb: ACVoltage./(ACVoltage, Complex)
  fullName.vb: CircuitTool.ACVoltage./(CircuitTool.ACVoltage, System.Numerics.Complex)
  name.vb: /(ACVoltage, Complex)
- uid: CircuitTool.ACVoltage.op_Equality(CircuitTool.ACVoltage,CircuitTool.ACVoltage)
  commentId: M:CircuitTool.ACVoltage.op_Equality(CircuitTool.ACVoltage,CircuitTool.ACVoltage)
  id: op_Equality(CircuitTool.ACVoltage,CircuitTool.ACVoltage)
  parent: CircuitTool.ACVoltage
  langs:
  - csharp
  - vb
  name: operator ==(ACVoltage, ACVoltage)
  nameWithType: ACVoltage.operator ==(ACVoltage, ACVoltage)
  fullName: CircuitTool.ACVoltage.operator ==(CircuitTool.ACVoltage, CircuitTool.ACVoltage)
  type: Operator
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Equality
    path: ../src/ACTypes.cs
    startLine: 79
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  syntax:
    content: public static bool operator ==(ACVoltage left, ACVoltage right)
    parameters:
    - id: left
      type: CircuitTool.ACVoltage
    - id: right
      type: CircuitTool.ACVoltage
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As ACVoltage, right As ACVoltage) As Boolean
  overload: CircuitTool.ACVoltage.op_Equality*
  nameWithType.vb: ACVoltage.=(ACVoltage, ACVoltage)
  fullName.vb: CircuitTool.ACVoltage.=(CircuitTool.ACVoltage, CircuitTool.ACVoltage)
  name.vb: =(ACVoltage, ACVoltage)
- uid: CircuitTool.ACVoltage.op_Inequality(CircuitTool.ACVoltage,CircuitTool.ACVoltage)
  commentId: M:CircuitTool.ACVoltage.op_Inequality(CircuitTool.ACVoltage,CircuitTool.ACVoltage)
  id: op_Inequality(CircuitTool.ACVoltage,CircuitTool.ACVoltage)
  parent: CircuitTool.ACVoltage
  langs:
  - csharp
  - vb
  name: operator !=(ACVoltage, ACVoltage)
  nameWithType: ACVoltage.operator !=(ACVoltage, ACVoltage)
  fullName: CircuitTool.ACVoltage.operator !=(CircuitTool.ACVoltage, CircuitTool.ACVoltage)
  type: Operator
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Inequality
    path: ../src/ACTypes.cs
    startLine: 80
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  syntax:
    content: public static bool operator !=(ACVoltage left, ACVoltage right)
    parameters:
    - id: left
      type: CircuitTool.ACVoltage
    - id: right
      type: CircuitTool.ACVoltage
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As ACVoltage, right As ACVoltage) As Boolean
  overload: CircuitTool.ACVoltage.op_Inequality*
  nameWithType.vb: ACVoltage.<>(ACVoltage, ACVoltage)
  fullName.vb: CircuitTool.ACVoltage.<>(CircuitTool.ACVoltage, CircuitTool.ACVoltage)
  name.vb: <>(ACVoltage, ACVoltage)
- uid: CircuitTool.ACVoltage.Equals(CircuitTool.ACVoltage)
  commentId: M:CircuitTool.ACVoltage.Equals(CircuitTool.ACVoltage)
  id: Equals(CircuitTool.ACVoltage)
  parent: CircuitTool.ACVoltage
  langs:
  - csharp
  - vb
  name: Equals(ACVoltage)
  nameWithType: ACVoltage.Equals(ACVoltage)
  fullName: CircuitTool.ACVoltage.Equals(CircuitTool.ACVoltage)
  type: Method
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Equals
    path: ../src/ACTypes.cs
    startLine: 82
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(ACVoltage other)
    parameters:
    - id: other
      type: CircuitTool.ACVoltage
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As ACVoltage) As Boolean
  overload: CircuitTool.ACVoltage.Equals*
  implements:
  - System.IEquatable{CircuitTool.ACVoltage}.Equals(CircuitTool.ACVoltage)
- uid: CircuitTool.ACVoltage.Equals(System.Object)
  commentId: M:CircuitTool.ACVoltage.Equals(System.Object)
  id: Equals(System.Object)
  parent: CircuitTool.ACVoltage
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: ACVoltage.Equals(object?)
  fullName: CircuitTool.ACVoltage.Equals(object?)
  type: Method
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Equals
    path: ../src/ACTypes.cs
    startLine: 83
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: CircuitTool.ACVoltage.Equals*
  nameWithType.vb: ACVoltage.Equals(Object)
  fullName.vb: CircuitTool.ACVoltage.Equals(Object)
  name.vb: Equals(Object)
- uid: CircuitTool.ACVoltage.GetHashCode
  commentId: M:CircuitTool.ACVoltage.GetHashCode
  id: GetHashCode
  parent: CircuitTool.ACVoltage
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ACVoltage.GetHashCode()
  fullName: CircuitTool.ACVoltage.GetHashCode()
  type: Method
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: GetHashCode
    path: ../src/ACTypes.cs
    startLine: 84
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: CircuitTool.ACVoltage.GetHashCode*
- uid: CircuitTool.ACVoltage.ToString
  commentId: M:CircuitTool.ACVoltage.ToString
  id: ToString
  parent: CircuitTool.ACVoltage
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ACVoltage.ToString()
  fullName: CircuitTool.ACVoltage.ToString()
  type: Method
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ToString
    path: ../src/ACTypes.cs
    startLine: 86
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Returns the fully qualified type name of this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The fully qualified type name.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: CircuitTool.ACVoltage.ToString*
- uid: CircuitTool.ACVoltage.ToString(System.String)
  commentId: M:CircuitTool.ACVoltage.ToString(System.String)
  id: ToString(System.String)
  parent: CircuitTool.ACVoltage
  langs:
  - csharp
  - vb
  name: ToString(string)
  nameWithType: ACVoltage.ToString(string)
  fullName: CircuitTool.ACVoltage.ToString(string)
  type: Method
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ToString
    path: ../src/ACTypes.cs
    startLine: 87
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  syntax:
    content: public string ToString(string format)
    parameters:
    - id: format
      type: System.String
    return:
      type: System.String
    content.vb: Public Function ToString(format As String) As String
  overload: CircuitTool.ACVoltage.ToString*
  nameWithType.vb: ACVoltage.ToString(String)
  fullName.vb: CircuitTool.ACVoltage.ToString(String)
  name.vb: ToString(String)
references:
- uid: CircuitTool
  commentId: N:CircuitTool
  href: CircuitTool.html
  name: CircuitTool
  nameWithType: CircuitTool
  fullName: CircuitTool
- uid: System.IEquatable{CircuitTool.ACVoltage}
  commentId: T:System.IEquatable{CircuitTool.ACVoltage}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<ACVoltage>
  nameWithType: IEquatable<ACVoltage>
  fullName: System.IEquatable<CircuitTool.ACVoltage>
  nameWithType.vb: IEquatable(Of ACVoltage)
  fullName.vb: System.IEquatable(Of CircuitTool.ACVoltage)
  name.vb: IEquatable(Of ACVoltage)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: CircuitTool.ACVoltage
    name: ACVoltage
    href: CircuitTool.ACVoltage.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: CircuitTool.ACVoltage
    name: ACVoltage
    href: CircuitTool.ACVoltage.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: CircuitTool.ACVoltage.#ctor*
  commentId: Overload:CircuitTool.ACVoltage.#ctor
  href: CircuitTool.ACVoltage.html#CircuitTool_ACVoltage__ctor_System_Double_System_Double_
  name: ACVoltage
  nameWithType: ACVoltage.ACVoltage
  fullName: CircuitTool.ACVoltage.ACVoltage
  nameWithType.vb: ACVoltage.New
  fullName.vb: CircuitTool.ACVoltage.New
  name.vb: New
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.Numerics.Complex
  commentId: T:System.Numerics.Complex
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.complex
  name: Complex
  nameWithType: Complex
  fullName: System.Numerics.Complex
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: CircuitTool.ACVoltage.Magnitude*
  commentId: Overload:CircuitTool.ACVoltage.Magnitude
  href: CircuitTool.ACVoltage.html#CircuitTool_ACVoltage_Magnitude
  name: Magnitude
  nameWithType: ACVoltage.Magnitude
  fullName: CircuitTool.ACVoltage.Magnitude
- uid: CircuitTool.ACVoltage.Phase*
  commentId: Overload:CircuitTool.ACVoltage.Phase
  href: CircuitTool.ACVoltage.html#CircuitTool_ACVoltage_Phase
  name: Phase
  nameWithType: ACVoltage.Phase
  fullName: CircuitTool.ACVoltage.Phase
- uid: CircuitTool.ACVoltage.PhaseDegrees*
  commentId: Overload:CircuitTool.ACVoltage.PhaseDegrees
  href: CircuitTool.ACVoltage.html#CircuitTool_ACVoltage_PhaseDegrees
  name: PhaseDegrees
  nameWithType: ACVoltage.PhaseDegrees
  fullName: CircuitTool.ACVoltage.PhaseDegrees
- uid: CircuitTool.ACVoltage.Real*
  commentId: Overload:CircuitTool.ACVoltage.Real
  href: CircuitTool.ACVoltage.html#CircuitTool_ACVoltage_Real
  name: Real
  nameWithType: ACVoltage.Real
  fullName: CircuitTool.ACVoltage.Real
- uid: CircuitTool.ACVoltage.Imaginary*
  commentId: Overload:CircuitTool.ACVoltage.Imaginary
  href: CircuitTool.ACVoltage.html#CircuitTool_ACVoltage_Imaginary
  name: Imaginary
  nameWithType: ACVoltage.Imaginary
  fullName: CircuitTool.ACVoltage.Imaginary
- uid: CircuitTool.ACVoltage.Complex*
  commentId: Overload:CircuitTool.ACVoltage.Complex
  href: CircuitTool.ACVoltage.html#CircuitTool_ACVoltage_Complex
  name: Complex
  nameWithType: ACVoltage.Complex
  fullName: CircuitTool.ACVoltage.Complex
- uid: CircuitTool.ACVoltage.Peak*
  commentId: Overload:CircuitTool.ACVoltage.Peak
  href: CircuitTool.ACVoltage.html#CircuitTool_ACVoltage_Peak
  name: Peak
  nameWithType: ACVoltage.Peak
  fullName: CircuitTool.ACVoltage.Peak
- uid: CircuitTool.ACVoltage.PeakToPeak*
  commentId: Overload:CircuitTool.ACVoltage.PeakToPeak
  href: CircuitTool.ACVoltage.html#CircuitTool_ACVoltage_PeakToPeak
  name: PeakToPeak
  nameWithType: ACVoltage.PeakToPeak
  fullName: CircuitTool.ACVoltage.PeakToPeak
- uid: CircuitTool.ACVoltage.op_Addition*
  commentId: Overload:CircuitTool.ACVoltage.op_Addition
  href: CircuitTool.ACVoltage.html#CircuitTool_ACVoltage_op_Addition_CircuitTool_ACVoltage_CircuitTool_ACVoltage_
  name: operator +
  nameWithType: ACVoltage.operator +
  fullName: CircuitTool.ACVoltage.operator +
  nameWithType.vb: ACVoltage.+
  fullName.vb: CircuitTool.ACVoltage.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.ACVoltage.op_Addition*
    name: +
    href: CircuitTool.ACVoltage.html#CircuitTool_ACVoltage_op_Addition_CircuitTool_ACVoltage_CircuitTool_ACVoltage_
- uid: CircuitTool.ACVoltage
  commentId: T:CircuitTool.ACVoltage
  parent: CircuitTool
  href: CircuitTool.ACVoltage.html
  name: ACVoltage
  nameWithType: ACVoltage
  fullName: CircuitTool.ACVoltage
- uid: CircuitTool.ACVoltage.op_Subtraction*
  commentId: Overload:CircuitTool.ACVoltage.op_Subtraction
  href: CircuitTool.ACVoltage.html#CircuitTool_ACVoltage_op_Subtraction_CircuitTool_ACVoltage_CircuitTool_ACVoltage_
  name: operator -
  nameWithType: ACVoltage.operator -
  fullName: CircuitTool.ACVoltage.operator -
  nameWithType.vb: ACVoltage.-
  fullName.vb: CircuitTool.ACVoltage.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.ACVoltage.op_Subtraction*
    name: '-'
    href: CircuitTool.ACVoltage.html#CircuitTool_ACVoltage_op_Subtraction_CircuitTool_ACVoltage_CircuitTool_ACVoltage_
- uid: CircuitTool.ACVoltage.op_Multiply*
  commentId: Overload:CircuitTool.ACVoltage.op_Multiply
  href: CircuitTool.ACVoltage.html#CircuitTool_ACVoltage_op_Multiply_CircuitTool_ACVoltage_System_Numerics_Complex_
  name: operator *
  nameWithType: ACVoltage.operator *
  fullName: CircuitTool.ACVoltage.operator *
  nameWithType.vb: ACVoltage.*
  fullName.vb: CircuitTool.ACVoltage.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.ACVoltage.op_Multiply*
    name: '*'
    href: CircuitTool.ACVoltage.html#CircuitTool_ACVoltage_op_Multiply_CircuitTool_ACVoltage_System_Numerics_Complex_
- uid: CircuitTool.ACVoltage.op_Division*
  commentId: Overload:CircuitTool.ACVoltage.op_Division
  href: CircuitTool.ACVoltage.html#CircuitTool_ACVoltage_op_Division_CircuitTool_ACVoltage_System_Numerics_Complex_
  name: operator /
  nameWithType: ACVoltage.operator /
  fullName: CircuitTool.ACVoltage.operator /
  nameWithType.vb: ACVoltage./
  fullName.vb: CircuitTool.ACVoltage./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.ACVoltage.op_Division*
    name: /
    href: CircuitTool.ACVoltage.html#CircuitTool_ACVoltage_op_Division_CircuitTool_ACVoltage_System_Numerics_Complex_
- uid: CircuitTool.ACVoltage.op_Equality*
  commentId: Overload:CircuitTool.ACVoltage.op_Equality
  href: CircuitTool.ACVoltage.html#CircuitTool_ACVoltage_op_Equality_CircuitTool_ACVoltage_CircuitTool_ACVoltage_
  name: operator ==
  nameWithType: ACVoltage.operator ==
  fullName: CircuitTool.ACVoltage.operator ==
  nameWithType.vb: ACVoltage.=
  fullName.vb: CircuitTool.ACVoltage.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.ACVoltage.op_Equality*
    name: ==
    href: CircuitTool.ACVoltage.html#CircuitTool_ACVoltage_op_Equality_CircuitTool_ACVoltage_CircuitTool_ACVoltage_
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: CircuitTool.ACVoltage.op_Inequality*
  commentId: Overload:CircuitTool.ACVoltage.op_Inequality
  href: CircuitTool.ACVoltage.html#CircuitTool_ACVoltage_op_Inequality_CircuitTool_ACVoltage_CircuitTool_ACVoltage_
  name: operator !=
  nameWithType: ACVoltage.operator !=
  fullName: CircuitTool.ACVoltage.operator !=
  nameWithType.vb: ACVoltage.<>
  fullName.vb: CircuitTool.ACVoltage.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.ACVoltage.op_Inequality*
    name: '!='
    href: CircuitTool.ACVoltage.html#CircuitTool_ACVoltage_op_Inequality_CircuitTool_ACVoltage_CircuitTool_ACVoltage_
- uid: CircuitTool.ACVoltage.Equals*
  commentId: Overload:CircuitTool.ACVoltage.Equals
  href: CircuitTool.ACVoltage.html#CircuitTool_ACVoltage_Equals_CircuitTool_ACVoltage_
  name: Equals
  nameWithType: ACVoltage.Equals
  fullName: CircuitTool.ACVoltage.Equals
- uid: System.IEquatable{CircuitTool.ACVoltage}.Equals(CircuitTool.ACVoltage)
  commentId: M:System.IEquatable{CircuitTool.ACVoltage}.Equals(CircuitTool.ACVoltage)
  parent: System.IEquatable{CircuitTool.ACVoltage}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(ACVoltage)
  nameWithType: IEquatable<ACVoltage>.Equals(ACVoltage)
  fullName: System.IEquatable<CircuitTool.ACVoltage>.Equals(CircuitTool.ACVoltage)
  nameWithType.vb: IEquatable(Of ACVoltage).Equals(ACVoltage)
  fullName.vb: System.IEquatable(Of CircuitTool.ACVoltage).Equals(CircuitTool.ACVoltage)
  spec.csharp:
  - uid: System.IEquatable{CircuitTool.ACVoltage}.Equals(CircuitTool.ACVoltage)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: CircuitTool.ACVoltage
    name: ACVoltage
    href: CircuitTool.ACVoltage.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{CircuitTool.ACVoltage}.Equals(CircuitTool.ACVoltage)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: CircuitTool.ACVoltage
    name: ACVoltage
    href: CircuitTool.ACVoltage.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: CircuitTool.ACVoltage.GetHashCode*
  commentId: Overload:CircuitTool.ACVoltage.GetHashCode
  href: CircuitTool.ACVoltage.html#CircuitTool_ACVoltage_GetHashCode
  name: GetHashCode
  nameWithType: ACVoltage.GetHashCode
  fullName: CircuitTool.ACVoltage.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: CircuitTool.ACVoltage.ToString*
  commentId: Overload:CircuitTool.ACVoltage.ToString
  href: CircuitTool.ACVoltage.html#CircuitTool_ACVoltage_ToString
  name: ToString
  nameWithType: ACVoltage.ToString
  fullName: CircuitTool.ACVoltage.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
