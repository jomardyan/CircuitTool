### YamlMime:ManagedReference
items:
- uid: CircuitTool.FilterCalculator
  commentId: T:CircuitTool.FilterCalculator
  id: FilterCalculator
  parent: CircuitTool
  children:
  - CircuitTool.FilterCalculator.GainInDecibels(System.Double,System.Double)
  - CircuitTool.FilterCalculator.RCHighPassCutoffFrequency(System.Double,System.Double)
  - CircuitTool.FilterCalculator.RCHighPassMagnitudeResponse(System.Double,System.Double)
  - CircuitTool.FilterCalculator.RCHighPassPhaseShift(System.Double,System.Double,System.Double)
  - CircuitTool.FilterCalculator.RCLowPassCutoffFrequency(System.Double,System.Double)
  - CircuitTool.FilterCalculator.RCLowPassMagnitudeResponse(System.Double,System.Double)
  - CircuitTool.FilterCalculator.RCLowPassPhaseShift(System.Double,System.Double,System.Double)
  - CircuitTool.FilterCalculator.RLHighPassCutoffFrequency(System.Double,System.Double)
  - CircuitTool.FilterCalculator.RLLowPassCutoffFrequency(System.Double,System.Double)
  - CircuitTool.FilterCalculator.RequiredCapacitanceForCutoff(System.Double,System.Double)
  - CircuitTool.FilterCalculator.RequiredResistanceForCutoff(System.Double,System.Double)
  langs:
  - csharp
  - vb
  name: FilterCalculator
  nameWithType: FilterCalculator
  fullName: CircuitTool.FilterCalculator
  type: Class
  source:
    remote:
      path: src/Calculators/FilterCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: FilterCalculator
    path: ../src/Calculators/FilterCalculator.cs
    startLine: 7
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Provides calculations for electronic filter design and analysis.
  example: []
  syntax:
    content: public static class FilterCalculator
    content.vb: Public Module FilterCalculator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: CircuitTool.FilterCalculator.RCLowPassCutoffFrequency(System.Double,System.Double)
  commentId: M:CircuitTool.FilterCalculator.RCLowPassCutoffFrequency(System.Double,System.Double)
  id: RCLowPassCutoffFrequency(System.Double,System.Double)
  parent: CircuitTool.FilterCalculator
  langs:
  - csharp
  - vb
  name: RCLowPassCutoffFrequency(double, double)
  nameWithType: FilterCalculator.RCLowPassCutoffFrequency(double, double)
  fullName: CircuitTool.FilterCalculator.RCLowPassCutoffFrequency(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/FilterCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: RCLowPassCutoffFrequency
    path: ../src/Calculators/FilterCalculator.cs
    startLine: 15
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates the cutoff frequency of an RC low-pass filter using fc = 1 / (2πRC).
  example: []
  syntax:
    content: public static double RCLowPassCutoffFrequency(double resistance, double capacitance)
    parameters:
    - id: resistance
      type: System.Double
      description: Resistance in ohms (Ω).
    - id: capacitance
      type: System.Double
      description: Capacitance in farads (F).
    return:
      type: System.Double
      description: Cutoff frequency in hertz (Hz).
    content.vb: Public Shared Function RCLowPassCutoffFrequency(resistance As Double, capacitance As Double) As Double
  overload: CircuitTool.FilterCalculator.RCLowPassCutoffFrequency*
  nameWithType.vb: FilterCalculator.RCLowPassCutoffFrequency(Double, Double)
  fullName.vb: CircuitTool.FilterCalculator.RCLowPassCutoffFrequency(Double, Double)
  name.vb: RCLowPassCutoffFrequency(Double, Double)
- uid: CircuitTool.FilterCalculator.RCHighPassCutoffFrequency(System.Double,System.Double)
  commentId: M:CircuitTool.FilterCalculator.RCHighPassCutoffFrequency(System.Double,System.Double)
  id: RCHighPassCutoffFrequency(System.Double,System.Double)
  parent: CircuitTool.FilterCalculator
  langs:
  - csharp
  - vb
  name: RCHighPassCutoffFrequency(double, double)
  nameWithType: FilterCalculator.RCHighPassCutoffFrequency(double, double)
  fullName: CircuitTool.FilterCalculator.RCHighPassCutoffFrequency(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/FilterCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: RCHighPassCutoffFrequency
    path: ../src/Calculators/FilterCalculator.cs
    startLine: 29
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates the cutoff frequency of an RC high-pass filter using fc = 1 / (2πRC).
  example: []
  syntax:
    content: public static double RCHighPassCutoffFrequency(double resistance, double capacitance)
    parameters:
    - id: resistance
      type: System.Double
      description: Resistance in ohms (Ω).
    - id: capacitance
      type: System.Double
      description: Capacitance in farads (F).
    return:
      type: System.Double
      description: Cutoff frequency in hertz (Hz).
    content.vb: Public Shared Function RCHighPassCutoffFrequency(resistance As Double, capacitance As Double) As Double
  overload: CircuitTool.FilterCalculator.RCHighPassCutoffFrequency*
  nameWithType.vb: FilterCalculator.RCHighPassCutoffFrequency(Double, Double)
  fullName.vb: CircuitTool.FilterCalculator.RCHighPassCutoffFrequency(Double, Double)
  name.vb: RCHighPassCutoffFrequency(Double, Double)
- uid: CircuitTool.FilterCalculator.RLLowPassCutoffFrequency(System.Double,System.Double)
  commentId: M:CircuitTool.FilterCalculator.RLLowPassCutoffFrequency(System.Double,System.Double)
  id: RLLowPassCutoffFrequency(System.Double,System.Double)
  parent: CircuitTool.FilterCalculator
  langs:
  - csharp
  - vb
  name: RLLowPassCutoffFrequency(double, double)
  nameWithType: FilterCalculator.RLLowPassCutoffFrequency(double, double)
  fullName: CircuitTool.FilterCalculator.RLLowPassCutoffFrequency(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/FilterCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: RLLowPassCutoffFrequency
    path: ../src/Calculators/FilterCalculator.cs
    startLine: 43
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates the cutoff frequency of an RL low-pass filter using fc = R / (2πL).
  example: []
  syntax:
    content: public static double RLLowPassCutoffFrequency(double resistance, double inductance)
    parameters:
    - id: resistance
      type: System.Double
      description: Resistance in ohms (Ω).
    - id: inductance
      type: System.Double
      description: Inductance in henries (H).
    return:
      type: System.Double
      description: Cutoff frequency in hertz (Hz).
    content.vb: Public Shared Function RLLowPassCutoffFrequency(resistance As Double, inductance As Double) As Double
  overload: CircuitTool.FilterCalculator.RLLowPassCutoffFrequency*
  nameWithType.vb: FilterCalculator.RLLowPassCutoffFrequency(Double, Double)
  fullName.vb: CircuitTool.FilterCalculator.RLLowPassCutoffFrequency(Double, Double)
  name.vb: RLLowPassCutoffFrequency(Double, Double)
- uid: CircuitTool.FilterCalculator.RLHighPassCutoffFrequency(System.Double,System.Double)
  commentId: M:CircuitTool.FilterCalculator.RLHighPassCutoffFrequency(System.Double,System.Double)
  id: RLHighPassCutoffFrequency(System.Double,System.Double)
  parent: CircuitTool.FilterCalculator
  langs:
  - csharp
  - vb
  name: RLHighPassCutoffFrequency(double, double)
  nameWithType: FilterCalculator.RLHighPassCutoffFrequency(double, double)
  fullName: CircuitTool.FilterCalculator.RLHighPassCutoffFrequency(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/FilterCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: RLHighPassCutoffFrequency
    path: ../src/Calculators/FilterCalculator.cs
    startLine: 57
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates the cutoff frequency of an RL high-pass filter using fc = R / (2πL).
  example: []
  syntax:
    content: public static double RLHighPassCutoffFrequency(double resistance, double inductance)
    parameters:
    - id: resistance
      type: System.Double
      description: Resistance in ohms (Ω).
    - id: inductance
      type: System.Double
      description: Inductance in henries (H).
    return:
      type: System.Double
      description: Cutoff frequency in hertz (Hz).
    content.vb: Public Shared Function RLHighPassCutoffFrequency(resistance As Double, inductance As Double) As Double
  overload: CircuitTool.FilterCalculator.RLHighPassCutoffFrequency*
  nameWithType.vb: FilterCalculator.RLHighPassCutoffFrequency(Double, Double)
  fullName.vb: CircuitTool.FilterCalculator.RLHighPassCutoffFrequency(Double, Double)
  name.vb: RLHighPassCutoffFrequency(Double, Double)
- uid: CircuitTool.FilterCalculator.GainInDecibels(System.Double,System.Double)
  commentId: M:CircuitTool.FilterCalculator.GainInDecibels(System.Double,System.Double)
  id: GainInDecibels(System.Double,System.Double)
  parent: CircuitTool.FilterCalculator
  langs:
  - csharp
  - vb
  name: GainInDecibels(double, double)
  nameWithType: FilterCalculator.GainInDecibels(double, double)
  fullName: CircuitTool.FilterCalculator.GainInDecibels(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/FilterCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: GainInDecibels
    path: ../src/Calculators/FilterCalculator.cs
    startLine: 71
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates the gain of a filter in decibels using Gain(dB) = 20 × log10(Vout/Vin).
  example: []
  syntax:
    content: public static double GainInDecibels(double outputVoltage, double inputVoltage)
    parameters:
    - id: outputVoltage
      type: System.Double
      description: Output voltage in volts (V).
    - id: inputVoltage
      type: System.Double
      description: Input voltage in volts (V).
    return:
      type: System.Double
      description: Gain in decibels (dB).
    content.vb: Public Shared Function GainInDecibels(outputVoltage As Double, inputVoltage As Double) As Double
  overload: CircuitTool.FilterCalculator.GainInDecibels*
  nameWithType.vb: FilterCalculator.GainInDecibels(Double, Double)
  fullName.vb: CircuitTool.FilterCalculator.GainInDecibels(Double, Double)
  name.vb: GainInDecibels(Double, Double)
- uid: CircuitTool.FilterCalculator.RCLowPassPhaseShift(System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.FilterCalculator.RCLowPassPhaseShift(System.Double,System.Double,System.Double)
  id: RCLowPassPhaseShift(System.Double,System.Double,System.Double)
  parent: CircuitTool.FilterCalculator
  langs:
  - csharp
  - vb
  name: RCLowPassPhaseShift(double, double, double)
  nameWithType: FilterCalculator.RCLowPassPhaseShift(double, double, double)
  fullName: CircuitTool.FilterCalculator.RCLowPassPhaseShift(double, double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/FilterCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: RCLowPassPhaseShift
    path: ../src/Calculators/FilterCalculator.cs
    startLine: 88
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates the phase shift of an RC low-pass filter using φ = -arctan(2πfRC).
  example: []
  syntax:
    content: public static double RCLowPassPhaseShift(double frequency, double resistance, double capacitance)
    parameters:
    - id: frequency
      type: System.Double
      description: Frequency in hertz (Hz).
    - id: resistance
      type: System.Double
      description: Resistance in ohms (Ω).
    - id: capacitance
      type: System.Double
      description: Capacitance in farads (F).
    return:
      type: System.Double
      description: Phase shift in degrees.
    content.vb: Public Shared Function RCLowPassPhaseShift(frequency As Double, resistance As Double, capacitance As Double) As Double
  overload: CircuitTool.FilterCalculator.RCLowPassPhaseShift*
  nameWithType.vb: FilterCalculator.RCLowPassPhaseShift(Double, Double, Double)
  fullName.vb: CircuitTool.FilterCalculator.RCLowPassPhaseShift(Double, Double, Double)
  name.vb: RCLowPassPhaseShift(Double, Double, Double)
- uid: CircuitTool.FilterCalculator.RCHighPassPhaseShift(System.Double,System.Double,System.Double)
  commentId: M:CircuitTool.FilterCalculator.RCHighPassPhaseShift(System.Double,System.Double,System.Double)
  id: RCHighPassPhaseShift(System.Double,System.Double,System.Double)
  parent: CircuitTool.FilterCalculator
  langs:
  - csharp
  - vb
  name: RCHighPassPhaseShift(double, double, double)
  nameWithType: FilterCalculator.RCHighPassPhaseShift(double, double, double)
  fullName: CircuitTool.FilterCalculator.RCHighPassPhaseShift(double, double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/FilterCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: RCHighPassPhaseShift
    path: ../src/Calculators/FilterCalculator.cs
    startLine: 103
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates the phase shift of an RC high-pass filter using φ = arctan(1/(2πfRC)).
  example: []
  syntax:
    content: public static double RCHighPassPhaseShift(double frequency, double resistance, double capacitance)
    parameters:
    - id: frequency
      type: System.Double
      description: Frequency in hertz (Hz).
    - id: resistance
      type: System.Double
      description: Resistance in ohms (Ω).
    - id: capacitance
      type: System.Double
      description: Capacitance in farads (F).
    return:
      type: System.Double
      description: Phase shift in degrees.
    content.vb: Public Shared Function RCHighPassPhaseShift(frequency As Double, resistance As Double, capacitance As Double) As Double
  overload: CircuitTool.FilterCalculator.RCHighPassPhaseShift*
  nameWithType.vb: FilterCalculator.RCHighPassPhaseShift(Double, Double, Double)
  fullName.vb: CircuitTool.FilterCalculator.RCHighPassPhaseShift(Double, Double, Double)
  name.vb: RCHighPassPhaseShift(Double, Double, Double)
- uid: CircuitTool.FilterCalculator.RCLowPassMagnitudeResponse(System.Double,System.Double)
  commentId: M:CircuitTool.FilterCalculator.RCLowPassMagnitudeResponse(System.Double,System.Double)
  id: RCLowPassMagnitudeResponse(System.Double,System.Double)
  parent: CircuitTool.FilterCalculator
  langs:
  - csharp
  - vb
  name: RCLowPassMagnitudeResponse(double, double)
  nameWithType: FilterCalculator.RCLowPassMagnitudeResponse(double, double)
  fullName: CircuitTool.FilterCalculator.RCLowPassMagnitudeResponse(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/FilterCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: RCLowPassMagnitudeResponse
    path: ../src/Calculators/FilterCalculator.cs
    startLine: 117
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates the magnitude response of an RC low-pass filter using |H(f)| = 1 / √(1 + (f/fc)²).
  example: []
  syntax:
    content: public static double RCLowPassMagnitudeResponse(double frequency, double cutoffFrequency)
    parameters:
    - id: frequency
      type: System.Double
      description: Frequency in hertz (Hz).
    - id: cutoffFrequency
      type: System.Double
      description: Cutoff frequency in hertz (Hz).
    return:
      type: System.Double
      description: Magnitude response (unitless, between 0 and 1).
    content.vb: Public Shared Function RCLowPassMagnitudeResponse(frequency As Double, cutoffFrequency As Double) As Double
  overload: CircuitTool.FilterCalculator.RCLowPassMagnitudeResponse*
  nameWithType.vb: FilterCalculator.RCLowPassMagnitudeResponse(Double, Double)
  fullName.vb: CircuitTool.FilterCalculator.RCLowPassMagnitudeResponse(Double, Double)
  name.vb: RCLowPassMagnitudeResponse(Double, Double)
- uid: CircuitTool.FilterCalculator.RCHighPassMagnitudeResponse(System.Double,System.Double)
  commentId: M:CircuitTool.FilterCalculator.RCHighPassMagnitudeResponse(System.Double,System.Double)
  id: RCHighPassMagnitudeResponse(System.Double,System.Double)
  parent: CircuitTool.FilterCalculator
  langs:
  - csharp
  - vb
  name: RCHighPassMagnitudeResponse(double, double)
  nameWithType: FilterCalculator.RCHighPassMagnitudeResponse(double, double)
  fullName: CircuitTool.FilterCalculator.RCHighPassMagnitudeResponse(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/FilterCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: RCHighPassMagnitudeResponse
    path: ../src/Calculators/FilterCalculator.cs
    startLine: 132
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates the magnitude response of an RC high-pass filter using |H(f)| = (f/fc) / √(1 + (f/fc)²).
  example: []
  syntax:
    content: public static double RCHighPassMagnitudeResponse(double frequency, double cutoffFrequency)
    parameters:
    - id: frequency
      type: System.Double
      description: Frequency in hertz (Hz).
    - id: cutoffFrequency
      type: System.Double
      description: Cutoff frequency in hertz (Hz).
    return:
      type: System.Double
      description: Magnitude response (unitless, between 0 and 1).
    content.vb: Public Shared Function RCHighPassMagnitudeResponse(frequency As Double, cutoffFrequency As Double) As Double
  overload: CircuitTool.FilterCalculator.RCHighPassMagnitudeResponse*
  nameWithType.vb: FilterCalculator.RCHighPassMagnitudeResponse(Double, Double)
  fullName.vb: CircuitTool.FilterCalculator.RCHighPassMagnitudeResponse(Double, Double)
  name.vb: RCHighPassMagnitudeResponse(Double, Double)
- uid: CircuitTool.FilterCalculator.RequiredCapacitanceForCutoff(System.Double,System.Double)
  commentId: M:CircuitTool.FilterCalculator.RequiredCapacitanceForCutoff(System.Double,System.Double)
  id: RequiredCapacitanceForCutoff(System.Double,System.Double)
  parent: CircuitTool.FilterCalculator
  langs:
  - csharp
  - vb
  name: RequiredCapacitanceForCutoff(double, double)
  nameWithType: FilterCalculator.RequiredCapacitanceForCutoff(double, double)
  fullName: CircuitTool.FilterCalculator.RequiredCapacitanceForCutoff(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/FilterCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: RequiredCapacitanceForCutoff
    path: ../src/Calculators/FilterCalculator.cs
    startLine: 147
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates the required capacitance for a desired RC filter cutoff frequency.
  example: []
  syntax:
    content: public static double RequiredCapacitanceForCutoff(double cutoffFrequency, double resistance)
    parameters:
    - id: cutoffFrequency
      type: System.Double
      description: Desired cutoff frequency in hertz (Hz).
    - id: resistance
      type: System.Double
      description: Resistance in ohms (Ω).
    return:
      type: System.Double
      description: Required capacitance in farads (F).
    content.vb: Public Shared Function RequiredCapacitanceForCutoff(cutoffFrequency As Double, resistance As Double) As Double
  overload: CircuitTool.FilterCalculator.RequiredCapacitanceForCutoff*
  nameWithType.vb: FilterCalculator.RequiredCapacitanceForCutoff(Double, Double)
  fullName.vb: CircuitTool.FilterCalculator.RequiredCapacitanceForCutoff(Double, Double)
  name.vb: RequiredCapacitanceForCutoff(Double, Double)
- uid: CircuitTool.FilterCalculator.RequiredResistanceForCutoff(System.Double,System.Double)
  commentId: M:CircuitTool.FilterCalculator.RequiredResistanceForCutoff(System.Double,System.Double)
  id: RequiredResistanceForCutoff(System.Double,System.Double)
  parent: CircuitTool.FilterCalculator
  langs:
  - csharp
  - vb
  name: RequiredResistanceForCutoff(double, double)
  nameWithType: FilterCalculator.RequiredResistanceForCutoff(double, double)
  fullName: CircuitTool.FilterCalculator.RequiredResistanceForCutoff(double, double)
  type: Method
  source:
    remote:
      path: src/Calculators/FilterCalculator.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: RequiredResistanceForCutoff
    path: ../src/Calculators/FilterCalculator.cs
    startLine: 161
  assemblies:
  - CircuitTool
  namespace: CircuitTool
  summary: Calculates the required resistance for a desired RC filter cutoff frequency.
  example: []
  syntax:
    content: public static double RequiredResistanceForCutoff(double cutoffFrequency, double capacitance)
    parameters:
    - id: cutoffFrequency
      type: System.Double
      description: Desired cutoff frequency in hertz (Hz).
    - id: capacitance
      type: System.Double
      description: Capacitance in farads (F).
    return:
      type: System.Double
      description: Required resistance in ohms (Ω).
    content.vb: Public Shared Function RequiredResistanceForCutoff(cutoffFrequency As Double, capacitance As Double) As Double
  overload: CircuitTool.FilterCalculator.RequiredResistanceForCutoff*
  nameWithType.vb: FilterCalculator.RequiredResistanceForCutoff(Double, Double)
  fullName.vb: CircuitTool.FilterCalculator.RequiredResistanceForCutoff(Double, Double)
  name.vb: RequiredResistanceForCutoff(Double, Double)
references:
- uid: CircuitTool
  commentId: N:CircuitTool
  href: CircuitTool.html
  name: CircuitTool
  nameWithType: CircuitTool
  fullName: CircuitTool
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CircuitTool.FilterCalculator.RCLowPassCutoffFrequency*
  commentId: Overload:CircuitTool.FilterCalculator.RCLowPassCutoffFrequency
  href: CircuitTool.FilterCalculator.html#CircuitTool_FilterCalculator_RCLowPassCutoffFrequency_System_Double_System_Double_
  name: RCLowPassCutoffFrequency
  nameWithType: FilterCalculator.RCLowPassCutoffFrequency
  fullName: CircuitTool.FilterCalculator.RCLowPassCutoffFrequency
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: CircuitTool.FilterCalculator.RCHighPassCutoffFrequency*
  commentId: Overload:CircuitTool.FilterCalculator.RCHighPassCutoffFrequency
  href: CircuitTool.FilterCalculator.html#CircuitTool_FilterCalculator_RCHighPassCutoffFrequency_System_Double_System_Double_
  name: RCHighPassCutoffFrequency
  nameWithType: FilterCalculator.RCHighPassCutoffFrequency
  fullName: CircuitTool.FilterCalculator.RCHighPassCutoffFrequency
- uid: CircuitTool.FilterCalculator.RLLowPassCutoffFrequency*
  commentId: Overload:CircuitTool.FilterCalculator.RLLowPassCutoffFrequency
  href: CircuitTool.FilterCalculator.html#CircuitTool_FilterCalculator_RLLowPassCutoffFrequency_System_Double_System_Double_
  name: RLLowPassCutoffFrequency
  nameWithType: FilterCalculator.RLLowPassCutoffFrequency
  fullName: CircuitTool.FilterCalculator.RLLowPassCutoffFrequency
- uid: CircuitTool.FilterCalculator.RLHighPassCutoffFrequency*
  commentId: Overload:CircuitTool.FilterCalculator.RLHighPassCutoffFrequency
  href: CircuitTool.FilterCalculator.html#CircuitTool_FilterCalculator_RLHighPassCutoffFrequency_System_Double_System_Double_
  name: RLHighPassCutoffFrequency
  nameWithType: FilterCalculator.RLHighPassCutoffFrequency
  fullName: CircuitTool.FilterCalculator.RLHighPassCutoffFrequency
- uid: CircuitTool.FilterCalculator.GainInDecibels*
  commentId: Overload:CircuitTool.FilterCalculator.GainInDecibels
  href: CircuitTool.FilterCalculator.html#CircuitTool_FilterCalculator_GainInDecibels_System_Double_System_Double_
  name: GainInDecibels
  nameWithType: FilterCalculator.GainInDecibels
  fullName: CircuitTool.FilterCalculator.GainInDecibels
- uid: CircuitTool.FilterCalculator.RCLowPassPhaseShift*
  commentId: Overload:CircuitTool.FilterCalculator.RCLowPassPhaseShift
  href: CircuitTool.FilterCalculator.html#CircuitTool_FilterCalculator_RCLowPassPhaseShift_System_Double_System_Double_System_Double_
  name: RCLowPassPhaseShift
  nameWithType: FilterCalculator.RCLowPassPhaseShift
  fullName: CircuitTool.FilterCalculator.RCLowPassPhaseShift
- uid: CircuitTool.FilterCalculator.RCHighPassPhaseShift*
  commentId: Overload:CircuitTool.FilterCalculator.RCHighPassPhaseShift
  href: CircuitTool.FilterCalculator.html#CircuitTool_FilterCalculator_RCHighPassPhaseShift_System_Double_System_Double_System_Double_
  name: RCHighPassPhaseShift
  nameWithType: FilterCalculator.RCHighPassPhaseShift
  fullName: CircuitTool.FilterCalculator.RCHighPassPhaseShift
- uid: CircuitTool.FilterCalculator.RCLowPassMagnitudeResponse*
  commentId: Overload:CircuitTool.FilterCalculator.RCLowPassMagnitudeResponse
  href: CircuitTool.FilterCalculator.html#CircuitTool_FilterCalculator_RCLowPassMagnitudeResponse_System_Double_System_Double_
  name: RCLowPassMagnitudeResponse
  nameWithType: FilterCalculator.RCLowPassMagnitudeResponse
  fullName: CircuitTool.FilterCalculator.RCLowPassMagnitudeResponse
- uid: CircuitTool.FilterCalculator.RCHighPassMagnitudeResponse*
  commentId: Overload:CircuitTool.FilterCalculator.RCHighPassMagnitudeResponse
  href: CircuitTool.FilterCalculator.html#CircuitTool_FilterCalculator_RCHighPassMagnitudeResponse_System_Double_System_Double_
  name: RCHighPassMagnitudeResponse
  nameWithType: FilterCalculator.RCHighPassMagnitudeResponse
  fullName: CircuitTool.FilterCalculator.RCHighPassMagnitudeResponse
- uid: CircuitTool.FilterCalculator.RequiredCapacitanceForCutoff*
  commentId: Overload:CircuitTool.FilterCalculator.RequiredCapacitanceForCutoff
  href: CircuitTool.FilterCalculator.html#CircuitTool_FilterCalculator_RequiredCapacitanceForCutoff_System_Double_System_Double_
  name: RequiredCapacitanceForCutoff
  nameWithType: FilterCalculator.RequiredCapacitanceForCutoff
  fullName: CircuitTool.FilterCalculator.RequiredCapacitanceForCutoff
- uid: CircuitTool.FilterCalculator.RequiredResistanceForCutoff*
  commentId: Overload:CircuitTool.FilterCalculator.RequiredResistanceForCutoff
  href: CircuitTool.FilterCalculator.html#CircuitTool_FilterCalculator_RequiredResistanceForCutoff_System_Double_System_Double_
  name: RequiredResistanceForCutoff
  nameWithType: FilterCalculator.RequiredResistanceForCutoff
  fullName: CircuitTool.FilterCalculator.RequiredResistanceForCutoff
