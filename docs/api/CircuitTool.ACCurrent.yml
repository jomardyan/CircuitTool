### YamlMime:ManagedReference
items:
- uid: CircuitTool.ACCurrent
  commentId: T:CircuitTool.ACCurrent
  id: ACCurrent
  parent: CircuitTool
  children:
  - CircuitTool.ACCurrent.#ctor(System.Double,System.Double)
  - CircuitTool.ACCurrent.#ctor(System.Numerics.Complex)
  - CircuitTool.ACCurrent.Complex
  - CircuitTool.ACCurrent.Equals(CircuitTool.ACCurrent)
  - CircuitTool.ACCurrent.Equals(System.Object)
  - CircuitTool.ACCurrent.GetHashCode
  - CircuitTool.ACCurrent.Imaginary
  - CircuitTool.ACCurrent.Magnitude
  - CircuitTool.ACCurrent.Peak
  - CircuitTool.ACCurrent.Phase
  - CircuitTool.ACCurrent.PhaseDegrees
  - CircuitTool.ACCurrent.Real
  - CircuitTool.ACCurrent.ToString
  - CircuitTool.ACCurrent.ToString(System.String)
  - CircuitTool.ACCurrent.op_Addition(CircuitTool.ACCurrent,CircuitTool.ACCurrent)
  - CircuitTool.ACCurrent.op_Division(CircuitTool.ACCurrent,System.Numerics.Complex)
  - CircuitTool.ACCurrent.op_Equality(CircuitTool.ACCurrent,CircuitTool.ACCurrent)
  - CircuitTool.ACCurrent.op_Inequality(CircuitTool.ACCurrent,CircuitTool.ACCurrent)
  - CircuitTool.ACCurrent.op_Multiply(CircuitTool.ACCurrent,System.Numerics.Complex)
  - CircuitTool.ACCurrent.op_Multiply(System.Numerics.Complex,CircuitTool.ACCurrent)
  - CircuitTool.ACCurrent.op_Subtraction(CircuitTool.ACCurrent,CircuitTool.ACCurrent)
  langs:
  - csharp
  - vb
  name: ACCurrent
  nameWithType: ACCurrent
  fullName: CircuitTool.ACCurrent
  type: Struct
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ACCurrent
    path: src/ACTypes.cs
    startLine: 93
  namespace: CircuitTool
  summary: Represents an AC current with magnitude and phase
  example: []
  syntax:
    content: 'public readonly struct ACCurrent : IEquatable<ACCurrent>'
    content.vb: Public Structure ACCurrent Implements IEquatable(Of ACCurrent)
  implements:
  - System.IEquatable{CircuitTool.ACCurrent}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: CircuitTool.ACCurrent.#ctor(System.Double,System.Double)
  commentId: M:CircuitTool.ACCurrent.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: CircuitTool.ACCurrent
  langs:
  - csharp
  - vb
  name: ACCurrent(double, double)
  nameWithType: ACCurrent.ACCurrent(double, double)
  fullName: CircuitTool.ACCurrent.ACCurrent(double, double)
  type: Constructor
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: .ctor
    path: src/ACTypes.cs
    startLine: 102
  namespace: CircuitTool
  summary: Creates a new AC current from magnitude and phase
  example: []
  syntax:
    content: public ACCurrent(double magnitude, double phase)
    parameters:
    - id: magnitude
      type: System.Double
      description: RMS magnitude in amperes
    - id: phase
      type: System.Double
      description: Phase angle in radians
    content.vb: Public Sub New(magnitude As Double, phase As Double)
  overload: CircuitTool.ACCurrent.#ctor*
  nameWithType.vb: ACCurrent.New(Double, Double)
  fullName.vb: CircuitTool.ACCurrent.New(Double, Double)
  name.vb: New(Double, Double)
- uid: CircuitTool.ACCurrent.#ctor(System.Numerics.Complex)
  commentId: M:CircuitTool.ACCurrent.#ctor(System.Numerics.Complex)
  id: '#ctor(System.Numerics.Complex)'
  parent: CircuitTool.ACCurrent
  langs:
  - csharp
  - vb
  name: ACCurrent(Complex)
  nameWithType: ACCurrent.ACCurrent(Complex)
  fullName: CircuitTool.ACCurrent.ACCurrent(System.Numerics.Complex)
  type: Constructor
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: .ctor
    path: src/ACTypes.cs
    startLine: 111
  namespace: CircuitTool
  summary: Creates a new AC current from a complex number
  example: []
  syntax:
    content: public ACCurrent(Complex complex)
    parameters:
    - id: complex
      type: System.Numerics.Complex
      description: Complex representation
    content.vb: Public Sub New(complex As Complex)
  overload: CircuitTool.ACCurrent.#ctor*
  nameWithType.vb: ACCurrent.New(Complex)
  fullName.vb: CircuitTool.ACCurrent.New(System.Numerics.Complex)
  name.vb: New(Complex)
- uid: CircuitTool.ACCurrent.Magnitude
  commentId: P:CircuitTool.ACCurrent.Magnitude
  id: Magnitude
  parent: CircuitTool.ACCurrent
  langs:
  - csharp
  - vb
  name: Magnitude
  nameWithType: ACCurrent.Magnitude
  fullName: CircuitTool.ACCurrent.Magnitude
  type: Property
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Magnitude
    path: src/ACTypes.cs
    startLine: 119
  namespace: CircuitTool
  summary: Gets the RMS magnitude in amperes
  example: []
  syntax:
    content: public double Magnitude { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Magnitude As Double
  overload: CircuitTool.ACCurrent.Magnitude*
- uid: CircuitTool.ACCurrent.Phase
  commentId: P:CircuitTool.ACCurrent.Phase
  id: Phase
  parent: CircuitTool.ACCurrent
  langs:
  - csharp
  - vb
  name: Phase
  nameWithType: ACCurrent.Phase
  fullName: CircuitTool.ACCurrent.Phase
  type: Property
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Phase
    path: src/ACTypes.cs
    startLine: 124
  namespace: CircuitTool
  summary: Gets the phase angle in radians
  example: []
  syntax:
    content: public double Phase { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Phase As Double
  overload: CircuitTool.ACCurrent.Phase*
- uid: CircuitTool.ACCurrent.PhaseDegrees
  commentId: P:CircuitTool.ACCurrent.PhaseDegrees
  id: PhaseDegrees
  parent: CircuitTool.ACCurrent
  langs:
  - csharp
  - vb
  name: PhaseDegrees
  nameWithType: ACCurrent.PhaseDegrees
  fullName: CircuitTool.ACCurrent.PhaseDegrees
  type: Property
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: PhaseDegrees
    path: src/ACTypes.cs
    startLine: 129
  namespace: CircuitTool
  summary: Gets the phase angle in degrees
  example: []
  syntax:
    content: public double PhaseDegrees { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property PhaseDegrees As Double
  overload: CircuitTool.ACCurrent.PhaseDegrees*
- uid: CircuitTool.ACCurrent.Real
  commentId: P:CircuitTool.ACCurrent.Real
  id: Real
  parent: CircuitTool.ACCurrent
  langs:
  - csharp
  - vb
  name: Real
  nameWithType: ACCurrent.Real
  fullName: CircuitTool.ACCurrent.Real
  type: Property
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Real
    path: src/ACTypes.cs
    startLine: 134
  namespace: CircuitTool
  summary: Gets the real component
  example: []
  syntax:
    content: public double Real { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Real As Double
  overload: CircuitTool.ACCurrent.Real*
- uid: CircuitTool.ACCurrent.Imaginary
  commentId: P:CircuitTool.ACCurrent.Imaginary
  id: Imaginary
  parent: CircuitTool.ACCurrent
  langs:
  - csharp
  - vb
  name: Imaginary
  nameWithType: ACCurrent.Imaginary
  fullName: CircuitTool.ACCurrent.Imaginary
  type: Property
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Imaginary
    path: src/ACTypes.cs
    startLine: 139
  namespace: CircuitTool
  summary: Gets the imaginary component
  example: []
  syntax:
    content: public double Imaginary { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Imaginary As Double
  overload: CircuitTool.ACCurrent.Imaginary*
- uid: CircuitTool.ACCurrent.Complex
  commentId: P:CircuitTool.ACCurrent.Complex
  id: Complex
  parent: CircuitTool.ACCurrent
  langs:
  - csharp
  - vb
  name: Complex
  nameWithType: ACCurrent.Complex
  fullName: CircuitTool.ACCurrent.Complex
  type: Property
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Complex
    path: src/ACTypes.cs
    startLine: 144
  namespace: CircuitTool
  summary: Gets the complex number representation
  example: []
  syntax:
    content: public Complex Complex { get; }
    parameters: []
    return:
      type: System.Numerics.Complex
    content.vb: Public ReadOnly Property Complex As Complex
  overload: CircuitTool.ACCurrent.Complex*
- uid: CircuitTool.ACCurrent.Peak
  commentId: P:CircuitTool.ACCurrent.Peak
  id: Peak
  parent: CircuitTool.ACCurrent
  langs:
  - csharp
  - vb
  name: Peak
  nameWithType: ACCurrent.Peak
  fullName: CircuitTool.ACCurrent.Peak
  type: Property
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Peak
    path: src/ACTypes.cs
    startLine: 149
  namespace: CircuitTool
  summary: Gets the peak current (magnitude * âˆš2)
  example: []
  syntax:
    content: public double Peak { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Peak As Double
  overload: CircuitTool.ACCurrent.Peak*
- uid: CircuitTool.ACCurrent.op_Addition(CircuitTool.ACCurrent,CircuitTool.ACCurrent)
  commentId: M:CircuitTool.ACCurrent.op_Addition(CircuitTool.ACCurrent,CircuitTool.ACCurrent)
  id: op_Addition(CircuitTool.ACCurrent,CircuitTool.ACCurrent)
  parent: CircuitTool.ACCurrent
  langs:
  - csharp
  - vb
  name: operator +(ACCurrent, ACCurrent)
  nameWithType: ACCurrent.operator +(ACCurrent, ACCurrent)
  fullName: CircuitTool.ACCurrent.operator +(CircuitTool.ACCurrent, CircuitTool.ACCurrent)
  type: Operator
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Addition
    path: src/ACTypes.cs
    startLine: 151
  namespace: CircuitTool
  syntax:
    content: public static ACCurrent operator +(ACCurrent left, ACCurrent right)
    parameters:
    - id: left
      type: CircuitTool.ACCurrent
    - id: right
      type: CircuitTool.ACCurrent
    return:
      type: CircuitTool.ACCurrent
    content.vb: Public Shared Operator +(left As ACCurrent, right As ACCurrent) As ACCurrent
  overload: CircuitTool.ACCurrent.op_Addition*
  nameWithType.vb: ACCurrent.+(ACCurrent, ACCurrent)
  fullName.vb: CircuitTool.ACCurrent.+(CircuitTool.ACCurrent, CircuitTool.ACCurrent)
  name.vb: +(ACCurrent, ACCurrent)
- uid: CircuitTool.ACCurrent.op_Subtraction(CircuitTool.ACCurrent,CircuitTool.ACCurrent)
  commentId: M:CircuitTool.ACCurrent.op_Subtraction(CircuitTool.ACCurrent,CircuitTool.ACCurrent)
  id: op_Subtraction(CircuitTool.ACCurrent,CircuitTool.ACCurrent)
  parent: CircuitTool.ACCurrent
  langs:
  - csharp
  - vb
  name: operator -(ACCurrent, ACCurrent)
  nameWithType: ACCurrent.operator -(ACCurrent, ACCurrent)
  fullName: CircuitTool.ACCurrent.operator -(CircuitTool.ACCurrent, CircuitTool.ACCurrent)
  type: Operator
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Subtraction
    path: src/ACTypes.cs
    startLine: 152
  namespace: CircuitTool
  syntax:
    content: public static ACCurrent operator -(ACCurrent left, ACCurrent right)
    parameters:
    - id: left
      type: CircuitTool.ACCurrent
    - id: right
      type: CircuitTool.ACCurrent
    return:
      type: CircuitTool.ACCurrent
    content.vb: Public Shared Operator -(left As ACCurrent, right As ACCurrent) As ACCurrent
  overload: CircuitTool.ACCurrent.op_Subtraction*
  nameWithType.vb: ACCurrent.-(ACCurrent, ACCurrent)
  fullName.vb: CircuitTool.ACCurrent.-(CircuitTool.ACCurrent, CircuitTool.ACCurrent)
  name.vb: -(ACCurrent, ACCurrent)
- uid: CircuitTool.ACCurrent.op_Multiply(CircuitTool.ACCurrent,System.Numerics.Complex)
  commentId: M:CircuitTool.ACCurrent.op_Multiply(CircuitTool.ACCurrent,System.Numerics.Complex)
  id: op_Multiply(CircuitTool.ACCurrent,System.Numerics.Complex)
  parent: CircuitTool.ACCurrent
  langs:
  - csharp
  - vb
  name: operator *(ACCurrent, Complex)
  nameWithType: ACCurrent.operator *(ACCurrent, Complex)
  fullName: CircuitTool.ACCurrent.operator *(CircuitTool.ACCurrent, System.Numerics.Complex)
  type: Operator
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Multiply
    path: src/ACTypes.cs
    startLine: 153
  namespace: CircuitTool
  syntax:
    content: public static ACCurrent operator *(ACCurrent current, Complex scalar)
    parameters:
    - id: current
      type: CircuitTool.ACCurrent
    - id: scalar
      type: System.Numerics.Complex
    return:
      type: CircuitTool.ACCurrent
    content.vb: Public Shared Operator *(current As ACCurrent, scalar As Complex) As ACCurrent
  overload: CircuitTool.ACCurrent.op_Multiply*
  nameWithType.vb: ACCurrent.*(ACCurrent, Complex)
  fullName.vb: CircuitTool.ACCurrent.*(CircuitTool.ACCurrent, System.Numerics.Complex)
  name.vb: '*(ACCurrent, Complex)'
- uid: CircuitTool.ACCurrent.op_Multiply(System.Numerics.Complex,CircuitTool.ACCurrent)
  commentId: M:CircuitTool.ACCurrent.op_Multiply(System.Numerics.Complex,CircuitTool.ACCurrent)
  id: op_Multiply(System.Numerics.Complex,CircuitTool.ACCurrent)
  parent: CircuitTool.ACCurrent
  langs:
  - csharp
  - vb
  name: operator *(Complex, ACCurrent)
  nameWithType: ACCurrent.operator *(Complex, ACCurrent)
  fullName: CircuitTool.ACCurrent.operator *(System.Numerics.Complex, CircuitTool.ACCurrent)
  type: Operator
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Multiply
    path: src/ACTypes.cs
    startLine: 154
  namespace: CircuitTool
  syntax:
    content: public static ACCurrent operator *(Complex scalar, ACCurrent current)
    parameters:
    - id: scalar
      type: System.Numerics.Complex
    - id: current
      type: CircuitTool.ACCurrent
    return:
      type: CircuitTool.ACCurrent
    content.vb: Public Shared Operator *(scalar As Complex, current As ACCurrent) As ACCurrent
  overload: CircuitTool.ACCurrent.op_Multiply*
  nameWithType.vb: ACCurrent.*(Complex, ACCurrent)
  fullName.vb: CircuitTool.ACCurrent.*(System.Numerics.Complex, CircuitTool.ACCurrent)
  name.vb: '*(Complex, ACCurrent)'
- uid: CircuitTool.ACCurrent.op_Division(CircuitTool.ACCurrent,System.Numerics.Complex)
  commentId: M:CircuitTool.ACCurrent.op_Division(CircuitTool.ACCurrent,System.Numerics.Complex)
  id: op_Division(CircuitTool.ACCurrent,System.Numerics.Complex)
  parent: CircuitTool.ACCurrent
  langs:
  - csharp
  - vb
  name: operator /(ACCurrent, Complex)
  nameWithType: ACCurrent.operator /(ACCurrent, Complex)
  fullName: CircuitTool.ACCurrent.operator /(CircuitTool.ACCurrent, System.Numerics.Complex)
  type: Operator
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Division
    path: src/ACTypes.cs
    startLine: 155
  namespace: CircuitTool
  syntax:
    content: public static ACCurrent operator /(ACCurrent current, Complex scalar)
    parameters:
    - id: current
      type: CircuitTool.ACCurrent
    - id: scalar
      type: System.Numerics.Complex
    return:
      type: CircuitTool.ACCurrent
    content.vb: Public Shared Operator /(current As ACCurrent, scalar As Complex) As ACCurrent
  overload: CircuitTool.ACCurrent.op_Division*
  nameWithType.vb: ACCurrent./(ACCurrent, Complex)
  fullName.vb: CircuitTool.ACCurrent./(CircuitTool.ACCurrent, System.Numerics.Complex)
  name.vb: /(ACCurrent, Complex)
- uid: CircuitTool.ACCurrent.op_Equality(CircuitTool.ACCurrent,CircuitTool.ACCurrent)
  commentId: M:CircuitTool.ACCurrent.op_Equality(CircuitTool.ACCurrent,CircuitTool.ACCurrent)
  id: op_Equality(CircuitTool.ACCurrent,CircuitTool.ACCurrent)
  parent: CircuitTool.ACCurrent
  langs:
  - csharp
  - vb
  name: operator ==(ACCurrent, ACCurrent)
  nameWithType: ACCurrent.operator ==(ACCurrent, ACCurrent)
  fullName: CircuitTool.ACCurrent.operator ==(CircuitTool.ACCurrent, CircuitTool.ACCurrent)
  type: Operator
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Equality
    path: src/ACTypes.cs
    startLine: 157
  namespace: CircuitTool
  syntax:
    content: public static bool operator ==(ACCurrent left, ACCurrent right)
    parameters:
    - id: left
      type: CircuitTool.ACCurrent
    - id: right
      type: CircuitTool.ACCurrent
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As ACCurrent, right As ACCurrent) As Boolean
  overload: CircuitTool.ACCurrent.op_Equality*
  nameWithType.vb: ACCurrent.=(ACCurrent, ACCurrent)
  fullName.vb: CircuitTool.ACCurrent.=(CircuitTool.ACCurrent, CircuitTool.ACCurrent)
  name.vb: =(ACCurrent, ACCurrent)
- uid: CircuitTool.ACCurrent.op_Inequality(CircuitTool.ACCurrent,CircuitTool.ACCurrent)
  commentId: M:CircuitTool.ACCurrent.op_Inequality(CircuitTool.ACCurrent,CircuitTool.ACCurrent)
  id: op_Inequality(CircuitTool.ACCurrent,CircuitTool.ACCurrent)
  parent: CircuitTool.ACCurrent
  langs:
  - csharp
  - vb
  name: operator !=(ACCurrent, ACCurrent)
  nameWithType: ACCurrent.operator !=(ACCurrent, ACCurrent)
  fullName: CircuitTool.ACCurrent.operator !=(CircuitTool.ACCurrent, CircuitTool.ACCurrent)
  type: Operator
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: op_Inequality
    path: src/ACTypes.cs
    startLine: 158
  namespace: CircuitTool
  syntax:
    content: public static bool operator !=(ACCurrent left, ACCurrent right)
    parameters:
    - id: left
      type: CircuitTool.ACCurrent
    - id: right
      type: CircuitTool.ACCurrent
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As ACCurrent, right As ACCurrent) As Boolean
  overload: CircuitTool.ACCurrent.op_Inequality*
  nameWithType.vb: ACCurrent.<>(ACCurrent, ACCurrent)
  fullName.vb: CircuitTool.ACCurrent.<>(CircuitTool.ACCurrent, CircuitTool.ACCurrent)
  name.vb: <>(ACCurrent, ACCurrent)
- uid: CircuitTool.ACCurrent.Equals(CircuitTool.ACCurrent)
  commentId: M:CircuitTool.ACCurrent.Equals(CircuitTool.ACCurrent)
  id: Equals(CircuitTool.ACCurrent)
  parent: CircuitTool.ACCurrent
  langs:
  - csharp
  - vb
  name: Equals(ACCurrent)
  nameWithType: ACCurrent.Equals(ACCurrent)
  fullName: CircuitTool.ACCurrent.Equals(CircuitTool.ACCurrent)
  type: Method
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Equals
    path: src/ACTypes.cs
    startLine: 160
  namespace: CircuitTool
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(ACCurrent other)
    parameters:
    - id: other
      type: CircuitTool.ACCurrent
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As ACCurrent) As Boolean
  overload: CircuitTool.ACCurrent.Equals*
  implements:
  - System.IEquatable{CircuitTool.ACCurrent}.Equals(CircuitTool.ACCurrent)
- uid: CircuitTool.ACCurrent.Equals(System.Object)
  commentId: M:CircuitTool.ACCurrent.Equals(System.Object)
  id: Equals(System.Object)
  parent: CircuitTool.ACCurrent
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: ACCurrent.Equals(object?)
  fullName: CircuitTool.ACCurrent.Equals(object?)
  type: Method
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: Equals
    path: src/ACTypes.cs
    startLine: 161
  namespace: CircuitTool
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: CircuitTool.ACCurrent.Equals*
  nameWithType.vb: ACCurrent.Equals(Object)
  fullName.vb: CircuitTool.ACCurrent.Equals(Object)
  name.vb: Equals(Object)
- uid: CircuitTool.ACCurrent.GetHashCode
  commentId: M:CircuitTool.ACCurrent.GetHashCode
  id: GetHashCode
  parent: CircuitTool.ACCurrent
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ACCurrent.GetHashCode()
  fullName: CircuitTool.ACCurrent.GetHashCode()
  type: Method
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: GetHashCode
    path: src/ACTypes.cs
    startLine: 162
  namespace: CircuitTool
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: CircuitTool.ACCurrent.GetHashCode*
- uid: CircuitTool.ACCurrent.ToString
  commentId: M:CircuitTool.ACCurrent.ToString
  id: ToString
  parent: CircuitTool.ACCurrent
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ACCurrent.ToString()
  fullName: CircuitTool.ACCurrent.ToString()
  type: Method
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ToString
    path: src/ACTypes.cs
    startLine: 164
  namespace: CircuitTool
  summary: Returns the fully qualified type name of this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The fully qualified type name.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: CircuitTool.ACCurrent.ToString*
- uid: CircuitTool.ACCurrent.ToString(System.String)
  commentId: M:CircuitTool.ACCurrent.ToString(System.String)
  id: ToString(System.String)
  parent: CircuitTool.ACCurrent
  langs:
  - csharp
  - vb
  name: ToString(string)
  nameWithType: ACCurrent.ToString(string)
  fullName: CircuitTool.ACCurrent.ToString(string)
  type: Method
  source:
    remote:
      path: src/ACTypes.cs
      branch: main
      repo: https://github.com/jomardyan/CircuitTool
    id: ToString
    path: src/ACTypes.cs
    startLine: 165
  namespace: CircuitTool
  syntax:
    content: public string ToString(string format)
    parameters:
    - id: format
      type: System.String
    return:
      type: System.String
    content.vb: Public Function ToString(format As String) As String
  overload: CircuitTool.ACCurrent.ToString*
  nameWithType.vb: ACCurrent.ToString(String)
  fullName.vb: CircuitTool.ACCurrent.ToString(String)
  name.vb: ToString(String)
references:
- uid: CircuitTool
  commentId: N:CircuitTool
  href: CircuitTool.html
  name: CircuitTool
  nameWithType: CircuitTool
  fullName: CircuitTool
- uid: System.IEquatable{CircuitTool.ACCurrent}
  commentId: T:System.IEquatable{CircuitTool.ACCurrent}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<ACCurrent>
  nameWithType: IEquatable<ACCurrent>
  fullName: System.IEquatable<CircuitTool.ACCurrent>
  nameWithType.vb: IEquatable(Of ACCurrent)
  fullName.vb: System.IEquatable(Of CircuitTool.ACCurrent)
  name.vb: IEquatable(Of ACCurrent)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: CircuitTool.ACCurrent
    name: ACCurrent
    href: CircuitTool.ACCurrent.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: CircuitTool.ACCurrent
    name: ACCurrent
    href: CircuitTool.ACCurrent.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: CircuitTool.ACCurrent.#ctor*
  commentId: Overload:CircuitTool.ACCurrent.#ctor
  href: CircuitTool.ACCurrent.html#CircuitTool_ACCurrent__ctor_System_Double_System_Double_
  name: ACCurrent
  nameWithType: ACCurrent.ACCurrent
  fullName: CircuitTool.ACCurrent.ACCurrent
  nameWithType.vb: ACCurrent.New
  fullName.vb: CircuitTool.ACCurrent.New
  name.vb: New
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.Numerics.Complex
  commentId: T:System.Numerics.Complex
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.complex
  name: Complex
  nameWithType: Complex
  fullName: System.Numerics.Complex
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: CircuitTool.ACCurrent.Magnitude*
  commentId: Overload:CircuitTool.ACCurrent.Magnitude
  href: CircuitTool.ACCurrent.html#CircuitTool_ACCurrent_Magnitude
  name: Magnitude
  nameWithType: ACCurrent.Magnitude
  fullName: CircuitTool.ACCurrent.Magnitude
- uid: CircuitTool.ACCurrent.Phase*
  commentId: Overload:CircuitTool.ACCurrent.Phase
  href: CircuitTool.ACCurrent.html#CircuitTool_ACCurrent_Phase
  name: Phase
  nameWithType: ACCurrent.Phase
  fullName: CircuitTool.ACCurrent.Phase
- uid: CircuitTool.ACCurrent.PhaseDegrees*
  commentId: Overload:CircuitTool.ACCurrent.PhaseDegrees
  href: CircuitTool.ACCurrent.html#CircuitTool_ACCurrent_PhaseDegrees
  name: PhaseDegrees
  nameWithType: ACCurrent.PhaseDegrees
  fullName: CircuitTool.ACCurrent.PhaseDegrees
- uid: CircuitTool.ACCurrent.Real*
  commentId: Overload:CircuitTool.ACCurrent.Real
  href: CircuitTool.ACCurrent.html#CircuitTool_ACCurrent_Real
  name: Real
  nameWithType: ACCurrent.Real
  fullName: CircuitTool.ACCurrent.Real
- uid: CircuitTool.ACCurrent.Imaginary*
  commentId: Overload:CircuitTool.ACCurrent.Imaginary
  href: CircuitTool.ACCurrent.html#CircuitTool_ACCurrent_Imaginary
  name: Imaginary
  nameWithType: ACCurrent.Imaginary
  fullName: CircuitTool.ACCurrent.Imaginary
- uid: CircuitTool.ACCurrent.Complex*
  commentId: Overload:CircuitTool.ACCurrent.Complex
  href: CircuitTool.ACCurrent.html#CircuitTool_ACCurrent_Complex
  name: Complex
  nameWithType: ACCurrent.Complex
  fullName: CircuitTool.ACCurrent.Complex
- uid: CircuitTool.ACCurrent.Peak*
  commentId: Overload:CircuitTool.ACCurrent.Peak
  href: CircuitTool.ACCurrent.html#CircuitTool_ACCurrent_Peak
  name: Peak
  nameWithType: ACCurrent.Peak
  fullName: CircuitTool.ACCurrent.Peak
- uid: CircuitTool.ACCurrent.op_Addition*
  commentId: Overload:CircuitTool.ACCurrent.op_Addition
  href: CircuitTool.ACCurrent.html#CircuitTool_ACCurrent_op_Addition_CircuitTool_ACCurrent_CircuitTool_ACCurrent_
  name: operator +
  nameWithType: ACCurrent.operator +
  fullName: CircuitTool.ACCurrent.operator +
  nameWithType.vb: ACCurrent.+
  fullName.vb: CircuitTool.ACCurrent.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.ACCurrent.op_Addition*
    name: +
    href: CircuitTool.ACCurrent.html#CircuitTool_ACCurrent_op_Addition_CircuitTool_ACCurrent_CircuitTool_ACCurrent_
- uid: CircuitTool.ACCurrent
  commentId: T:CircuitTool.ACCurrent
  parent: CircuitTool
  href: CircuitTool.ACCurrent.html
  name: ACCurrent
  nameWithType: ACCurrent
  fullName: CircuitTool.ACCurrent
- uid: CircuitTool.ACCurrent.op_Subtraction*
  commentId: Overload:CircuitTool.ACCurrent.op_Subtraction
  href: CircuitTool.ACCurrent.html#CircuitTool_ACCurrent_op_Subtraction_CircuitTool_ACCurrent_CircuitTool_ACCurrent_
  name: operator -
  nameWithType: ACCurrent.operator -
  fullName: CircuitTool.ACCurrent.operator -
  nameWithType.vb: ACCurrent.-
  fullName.vb: CircuitTool.ACCurrent.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.ACCurrent.op_Subtraction*
    name: '-'
    href: CircuitTool.ACCurrent.html#CircuitTool_ACCurrent_op_Subtraction_CircuitTool_ACCurrent_CircuitTool_ACCurrent_
- uid: CircuitTool.ACCurrent.op_Multiply*
  commentId: Overload:CircuitTool.ACCurrent.op_Multiply
  href: CircuitTool.ACCurrent.html#CircuitTool_ACCurrent_op_Multiply_CircuitTool_ACCurrent_System_Numerics_Complex_
  name: operator *
  nameWithType: ACCurrent.operator *
  fullName: CircuitTool.ACCurrent.operator *
  nameWithType.vb: ACCurrent.*
  fullName.vb: CircuitTool.ACCurrent.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.ACCurrent.op_Multiply*
    name: '*'
    href: CircuitTool.ACCurrent.html#CircuitTool_ACCurrent_op_Multiply_CircuitTool_ACCurrent_System_Numerics_Complex_
- uid: CircuitTool.ACCurrent.op_Division*
  commentId: Overload:CircuitTool.ACCurrent.op_Division
  href: CircuitTool.ACCurrent.html#CircuitTool_ACCurrent_op_Division_CircuitTool_ACCurrent_System_Numerics_Complex_
  name: operator /
  nameWithType: ACCurrent.operator /
  fullName: CircuitTool.ACCurrent.operator /
  nameWithType.vb: ACCurrent./
  fullName.vb: CircuitTool.ACCurrent./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.ACCurrent.op_Division*
    name: /
    href: CircuitTool.ACCurrent.html#CircuitTool_ACCurrent_op_Division_CircuitTool_ACCurrent_System_Numerics_Complex_
- uid: CircuitTool.ACCurrent.op_Equality*
  commentId: Overload:CircuitTool.ACCurrent.op_Equality
  href: CircuitTool.ACCurrent.html#CircuitTool_ACCurrent_op_Equality_CircuitTool_ACCurrent_CircuitTool_ACCurrent_
  name: operator ==
  nameWithType: ACCurrent.operator ==
  fullName: CircuitTool.ACCurrent.operator ==
  nameWithType.vb: ACCurrent.=
  fullName.vb: CircuitTool.ACCurrent.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.ACCurrent.op_Equality*
    name: ==
    href: CircuitTool.ACCurrent.html#CircuitTool_ACCurrent_op_Equality_CircuitTool_ACCurrent_CircuitTool_ACCurrent_
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: CircuitTool.ACCurrent.op_Inequality*
  commentId: Overload:CircuitTool.ACCurrent.op_Inequality
  href: CircuitTool.ACCurrent.html#CircuitTool_ACCurrent_op_Inequality_CircuitTool_ACCurrent_CircuitTool_ACCurrent_
  name: operator !=
  nameWithType: ACCurrent.operator !=
  fullName: CircuitTool.ACCurrent.operator !=
  nameWithType.vb: ACCurrent.<>
  fullName.vb: CircuitTool.ACCurrent.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: CircuitTool.ACCurrent.op_Inequality*
    name: '!='
    href: CircuitTool.ACCurrent.html#CircuitTool_ACCurrent_op_Inequality_CircuitTool_ACCurrent_CircuitTool_ACCurrent_
- uid: CircuitTool.ACCurrent.Equals*
  commentId: Overload:CircuitTool.ACCurrent.Equals
  href: CircuitTool.ACCurrent.html#CircuitTool_ACCurrent_Equals_CircuitTool_ACCurrent_
  name: Equals
  nameWithType: ACCurrent.Equals
  fullName: CircuitTool.ACCurrent.Equals
- uid: System.IEquatable{CircuitTool.ACCurrent}.Equals(CircuitTool.ACCurrent)
  commentId: M:System.IEquatable{CircuitTool.ACCurrent}.Equals(CircuitTool.ACCurrent)
  parent: System.IEquatable{CircuitTool.ACCurrent}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(ACCurrent)
  nameWithType: IEquatable<ACCurrent>.Equals(ACCurrent)
  fullName: System.IEquatable<CircuitTool.ACCurrent>.Equals(CircuitTool.ACCurrent)
  nameWithType.vb: IEquatable(Of ACCurrent).Equals(ACCurrent)
  fullName.vb: System.IEquatable(Of CircuitTool.ACCurrent).Equals(CircuitTool.ACCurrent)
  spec.csharp:
  - uid: System.IEquatable{CircuitTool.ACCurrent}.Equals(CircuitTool.ACCurrent)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: CircuitTool.ACCurrent
    name: ACCurrent
    href: CircuitTool.ACCurrent.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{CircuitTool.ACCurrent}.Equals(CircuitTool.ACCurrent)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: CircuitTool.ACCurrent
    name: ACCurrent
    href: CircuitTool.ACCurrent.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: CircuitTool.ACCurrent.GetHashCode*
  commentId: Overload:CircuitTool.ACCurrent.GetHashCode
  href: CircuitTool.ACCurrent.html#CircuitTool_ACCurrent_GetHashCode
  name: GetHashCode
  nameWithType: ACCurrent.GetHashCode
  fullName: CircuitTool.ACCurrent.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: CircuitTool.ACCurrent.ToString*
  commentId: Overload:CircuitTool.ACCurrent.ToString
  href: CircuitTool.ACCurrent.html#CircuitTool_ACCurrent_ToString
  name: ToString
  nameWithType: ACCurrent.ToString
  fullName: CircuitTool.ACCurrent.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
